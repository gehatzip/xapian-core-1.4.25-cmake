/* Generated by Snowball 2.0.0 - https://snowballstem.org/ */


#include <config.h>
#include <limits.h>
#include "greek.h"

static const symbol s_pool[] = {
#define s_0_1 0
0xCF, 0x82,
#define s_0_2 2
0xCE, 0x86,
#define s_0_3 4
0xCE, 0x88,
#define s_0_4 6
0xCE, 0x89,
#define s_0_5 8
0xCE, 0x8A,
#define s_0_6 10
0xCF, 0x8A,
#define s_0_7 12
0xCF, 0x8B,
#define s_0_8 14
0xCE, 0x8C,
#define s_0_9 16
0xCF, 0x8C,
#define s_0_10 18
0xCF, 0x8D,
#define s_0_11 20
0xCE, 0x8E,
#define s_0_12 22
0xCF, 0x8E,
#define s_0_13 24
0xCE, 0x8F,
#define s_0_14 26
0xCE, 0x90,
#define s_0_15 28
0xCE, 0x91,
#define s_0_16 30
0xCE, 0x92,
#define s_0_17 32
0xCE, 0x93,
#define s_0_18 34
0xCE, 0x94,
#define s_0_19 36
0xCE, 0x95,
#define s_0_20 38
0xCE, 0x96,
#define s_0_21 40
0xCE, 0x97,
#define s_0_22 42
0xCE, 0x98,
#define s_0_23 44
0xCE, 0x99,
#define s_0_24 46
0xCE, 0x9A,
#define s_0_25 48
0xCE, 0x9B,
#define s_0_26 50
0xCE, 0x9C,
#define s_0_27 52
0xCE, 0x9D,
#define s_0_28 54
0xCE, 0x9E,
#define s_0_29 56
0xCE, 0x9F,
#define s_0_30 58
0xCE, 0xA0,
#define s_0_31 60
0xCE, 0xA1,
#define s_0_32 62
0xCE, 0xA3,
#define s_0_33 64
0xCE, 0xA4,
#define s_0_34 66
0xCE, 0xA5,
#define s_0_35 68
0xCE, 0xA6,
#define s_0_36 70
0xCE, 0xA7,
#define s_0_37 72
0xCE, 0xA8,
#define s_0_38 74
0xCE, 0xA9,
#define s_0_39 76
0xCE, 0xAA,
#define s_0_40 78
0xCE, 0xAB,
#define s_0_41 80
0xCE, 0xAC,
#define s_0_42 82
0xCE, 0xAD,
#define s_0_43 84
0xCE, 0xAE,
#define s_0_44 86
0xCE, 0xAF,
#define s_0_45 88
0xCE, 0xB0,
#define s_1_0 90
0xCE, 0xBA, 0xCE, 0xB1, 0xCE, 0xB8, 0xCE, 0xB5, 0xCF, 0x83, 0xCF, 0x84, 0xCF, 0x89, 0xCF, 0x83,
#define s_1_1 106
0xCF, 0x86, 0xCF, 0x89, 0xCF, 0x83,
#define s_1_2 112
0xCF, 0x80, 0xCE, 0xB5, 0xCF, 0x81, 0xCE, 0xB1, 0xCF, 0x83,
#define s_1_3 122
0xCF, 0x84, 0xCE, 0xB5, 0xCF, 0x81, 0xCE, 0xB1, 0xCF, 0x83,
#define s_1_4 132
0xCE, 0xBA, 0xCF, 0x81, 0xCE, 0xB5, 0xCE, 0xB1, 0xCF, 0x83,
#define s_1_5 142
0xCE, 0xBA, 0xCE, 0xB1, 0xCE, 0xB8, 0xCE, 0xB5, 0xCF, 0x83, 0xCF, 0x84, 0xCF, 0x89, 0xCF, 0x84, 0xCE, 0xBF, 0xCF, 0x83,
#define s_1_6 162
0xCF, 0x86, 0xCF, 0x89, 0xCF, 0x84, 0xCE, 0xBF, 0xCF, 0x83,
#define s_1_7 172
0xCF, 0x80, 0xCE, 0xB5, 0xCF, 0x81, 0xCE, 0xB1, 0xCF, 0x84, 0xCE, 0xBF, 0xCF, 0x83,
#define s_1_8 186
0xCF, 0x84, 0xCE, 0xB5, 0xCF, 0x81, 0xCE, 0xB1, 0xCF, 0x84, 0xCE, 0xBF, 0xCF, 0x83,
#define s_1_9 200
0xCE, 0xBA, 0xCF, 0x81, 0xCE, 0xB5, 0xCE, 0xB1, 0xCF, 0x84, 0xCE, 0xBF, 0xCF, 0x83,
#define s_1_10 214
0xCE, 0xB3, 0xCE, 0xB5, 0xCE, 0xB3, 0xCE, 0xBF, 0xCE, 0xBD, 0xCE, 0xBF, 0xCF, 0x84, 0xCE, 0xBF, 0xCF, 0x83,
#define s_1_11 232
0xCE, 0xB3, 0xCE, 0xB5, 0xCE, 0xB3, 0xCE, 0xBF, 0xCE, 0xBD, 0xCE, 0xBF, 0xCF, 0x83,
#define s_1_12 246
0xCF, 0x86, 0xCE, 0xB1, 0xCE, 0xB3, 0xCE, 0xB9, 0xCE, 0xBF, 0xCF, 0x85,
#define s_1_13 258
0xCF, 0x83, 0xCE, 0xBA, 0xCE, 0xB1, 0xCE, 0xB3, 0xCE, 0xB9, 0xCE, 0xBF, 0xCF, 0x85,
#define s_1_14 272
0xCF, 0x83, 0xCE, 0xBF, 0xCE, 0xB3, 0xCE, 0xB9, 0xCE, 0xBF, 0xCF, 0x85,
#define s_1_15 284
0xCF, 0x84, 0xCE, 0xB1, 0xCF, 0x84, 0xCE, 0xBF, 0xCE, 0xB3, 0xCE, 0xB9, 0xCE, 0xBF, 0xCF, 0x85,
#define s_1_16 300
0xCE, 0xBF, 0xCE, 0xBB, 0xCE, 0xBF, 0xCE, 0xB3, 0xCE, 0xB9, 0xCE, 0xBF, 0xCF, 0x85,
#define s_1_17 314
0xCE, 0xBA, 0xCE, 0xB1, 0xCE, 0xB8, 0xCE, 0xB5, 0xCF, 0x83, 0xCF, 0x84, 0xCF, 0x89, 0xCF, 0x84, 0xCE, 0xB1,
#define s_1_18 332
0xCF, 0x86, 0xCF, 0x89, 0xCF, 0x84, 0xCE, 0xB1,
#define s_1_19 340
0xCF, 0x80, 0xCE, 0xB5, 0xCF, 0x81, 0xCE, 0xB1, 0xCF, 0x84, 0xCE, 0xB1,
#define s_1_20 352
0xCF, 0x84, 0xCE, 0xB5, 0xCF, 0x81, 0xCE, 0xB1, 0xCF, 0x84, 0xCE, 0xB1,
#define s_1_21 364
0xCE, 0xBA, 0xCF, 0x81, 0xCE, 0xB5, 0xCE, 0xB1, 0xCF, 0x84, 0xCE, 0xB1,
#define s_1_22 376
0xCE, 0xB3, 0xCE, 0xB5, 0xCE, 0xB3, 0xCE, 0xBF, 0xCE, 0xBD, 0xCE, 0xBF, 0xCF, 0x84, 0xCE, 0xB1,
#define s_1_23 392
0xCF, 0x86, 0xCE, 0xB1, 0xCE, 0xB3, 0xCE, 0xB9, 0xCE, 0xB1,
#define s_1_24 402
0xCF, 0x83, 0xCE, 0xBA, 0xCE, 0xB1, 0xCE, 0xB3, 0xCE, 0xB9, 0xCE, 0xB1,
#define s_1_25 414
0xCF, 0x83, 0xCE, 0xBF, 0xCE, 0xB3, 0xCE, 0xB9, 0xCE, 0xB1,
#define s_1_26 424
0xCF, 0x84, 0xCE, 0xB1, 0xCF, 0x84, 0xCE, 0xBF, 0xCE, 0xB3, 0xCE, 0xB9, 0xCE, 0xB1,
#define s_1_27 438
0xCE, 0xBF, 0xCE, 0xBB, 0xCE, 0xBF, 0xCE, 0xB3, 0xCE, 0xB9, 0xCE, 0xB1,
#define s_1_28 450
0xCF, 0x80, 0xCE, 0xB5, 0xCF, 0x81, 0xCE, 0xB1, 0xCF, 0x84, 0xCE, 0xB7,
#define s_1_29 462
0xCE, 0xBA, 0xCE, 0xB1, 0xCE, 0xB8, 0xCE, 0xB5, 0xCF, 0x83, 0xCF, 0x84, 0xCF, 0x89, 0xCF, 0x84, 0xCF, 0x89, 0xCE, 0xBD,
#define s_1_30 482
0xCF, 0x86, 0xCF, 0x89, 0xCF, 0x84, 0xCF, 0x89, 0xCE, 0xBD,
#define s_1_31 492
0xCF, 0x80, 0xCE, 0xB5, 0xCF, 0x81, 0xCE, 0xB1, 0xCF, 0x84, 0xCF, 0x89, 0xCE, 0xBD,
#define s_1_32 506
0xCF, 0x84, 0xCE, 0xB5, 0xCF, 0x81, 0xCE, 0xB1, 0xCF, 0x84, 0xCF, 0x89, 0xCE, 0xBD,
#define s_1_33 520
0xCE, 0xBA, 0xCF, 0x81, 0xCE, 0xB5, 0xCE, 0xB1, 0xCF, 0x84, 0xCF, 0x89, 0xCE, 0xBD,
#define s_1_34 534
0xCE, 0xB3, 0xCE, 0xB5, 0xCE, 0xB3, 0xCE, 0xBF, 0xCE, 0xBD, 0xCE, 0xBF, 0xCF, 0x84, 0xCF, 0x89, 0xCE, 0xBD,
#define s_1_35 552
0xCF, 0x86, 0xCE, 0xB1, 0xCE, 0xB3, 0xCE, 0xB9, 0xCF, 0x89, 0xCE, 0xBD,
#define s_1_36 564
0xCF, 0x83, 0xCE, 0xBA, 0xCE, 0xB1, 0xCE, 0xB3, 0xCE, 0xB9, 0xCF, 0x89, 0xCE, 0xBD,
#define s_1_37 578
0xCF, 0x83, 0xCE, 0xBF, 0xCE, 0xB3, 0xCE, 0xB9, 0xCF, 0x89, 0xCE, 0xBD,
#define s_1_38 590
0xCF, 0x84, 0xCE, 0xB1, 0xCF, 0x84, 0xCE, 0xBF, 0xCE, 0xB3, 0xCE, 0xB9, 0xCF, 0x89, 0xCE, 0xBD,
#define s_1_39 606
0xCE, 0xBF, 0xCE, 0xBB, 0xCE, 0xBF, 0xCE, 0xB3, 0xCE, 0xB9, 0xCF, 0x89, 0xCE, 0xBD,
#define s_2_0 (s_2_1 + 8)
#define s_2_1 620
0xCE, 0xBE, 0xCE, 0xB1, 0xCE, 0xBD, 0xCE, 0xB1, 0xCF, 0x80, 0xCE, 0xB1,
#define s_2_2 632
0xCE, 0xB5, 0xCF, 0x80, 0xCE, 0xB1,
#define s_2_3 638
0xCF, 0x80, 0xCE, 0xB5, 0xCF, 0x81, 0xCE, 0xB9, 0xCF, 0x80, 0xCE, 0xB1,
#define s_2_4 650
0xCE, 0xB1, 0xCE, 0xBD, 0xCE, 0xB1, 0xCE, 0xBC, 0xCF, 0x80, 0xCE, 0xB1,
#define s_2_5 662
0xCE, 0xB5, 0xCE, 0xBC, 0xCF, 0x80, 0xCE, 0xB1,
#define s_2_6 670
0xCE, 0xB4, 0xCE, 0xB1, 0xCE, 0xBD, 0xCE, 0xB5,
#define s_2_7 (s_2_8 + 6)
#define s_2_8 678
0xCF, 0x83, 0xCF, 0x85, 0xCE, 0xBD, 0xCE, 0xB1, 0xCE, 0xB8, 0xCF, 0x81, 0xCE, 0xBF,
#define s_3_0 (s_3_1 + 4)
#define s_3_1 692
0xCE, 0xB9, 0xCE, 0xBC, 0xCF, 0x80,
#define s_3_2 (s_3_3 + 2)
#define s_3_3 (s_3_4 + 2)
#define s_3_4 698
0xCE, 0xBC, 0xCF, 0x80, 0xCF, 0x81,
#define s_3_5 704
0xCE, 0xB1, 0xCF, 0x81, 0xCF, 0x81,
#define s_3_6 710
0xCE, 0xB3, 0xCE, 0xBB, 0xCF, 0x85, 0xCE, 0xBA, 0xCF, 0x85, 0xCF, 0x81,
#define s_3_7 722
0xCF, 0x80, 0xCE, 0xBF, 0xCE, 0xBB, 0xCF, 0x85, 0xCF, 0x81,
#define s_3_8 732
0xCE, 0xB1, 0xCE, 0xBC, 0xCF, 0x80, 0xCE, 0xB1, 0xCF, 0x81,
#define s_3_9 s_3_18
#define s_3_10 742
0xCE, 0xB3, 0xCE, 0xBA, 0xCF, 0x81,
#define s_3_11 748
0xCF, 0x80, 0xCE, 0xB9, 0xCF, 0x80, 0xCE, 0xB5, 0xCF, 0x81, 0xCE, 0xBF, 0xCF, 0x81,
#define s_3_12 762
0xCE, 0xB2, 0xCE, 0xBF, 0xCE, 0xBB, 0xCE, 0xB2, 0xCE, 0xBF, 0xCF, 0x81,
#define s_3_13 774
0xCE, 0xB3, 0xCE, 0xBB, 0xCF, 0x85, 0xCE, 0xBA, 0xCE, 0xBF, 0xCF, 0x81,
#define s_3_14 786
0xCE, 0xBB, 0xCE, 0xBF, 0xCF, 0x85,
#define s_3_15 (s_3_12 + 6)
#define s_3_16 792
0xCE, 0xB2, 0xCE, 0xB1, 0xCE, 0xB8, 0xCF, 0x85, 0xCF, 0x81, 0xCE, 0xB9,
#define s_3_17 804
0xCE, 0xB2, 0xCE, 0xB1, 0xCF, 0x81, 0xCE, 0xBA,
#define s_3_18 812
0xCE, 0xBC, 0xCE, 0xB1, 0xCF, 0x81, 0xCE, 0xBA,
#define s_3_19 (s_3_6 + 2)
#define s_3_20 (s_3_1 + 2)
#define s_3_21 820
0xCE, 0xBA, 0xCE, 0xBF, 0xCF, 0x81, 0xCE, 0xBD,
#define s_4_0 828
0xCE, 0xB9, 0xCE, 0xB6, 0xCE, 0xB5, 0xCF, 0x83,
#define s_4_1 836
0xCE, 0xB9, 0xCE, 0xB6, 0xCE, 0xB5, 0xCE, 0xB9, 0xCF, 0x83,
#define s_4_2 846
0xCE, 0xB9, 0xCE, 0xB6, 0xCF, 0x89,
#define s_4_3 s_4_4
#define s_4_4 852
0xCE, 0xB9, 0xCE, 0xB6, 0xCE, 0xB1, 0xCF, 0x84, 0xCE, 0xB5,
#define s_4_5 862
0xCE, 0xB9, 0xCE, 0xB6, 0xCE, 0xB5, 0xCF, 0x84, 0xCE, 0xB5,
#define s_4_6 s_4_0
#define s_4_7 872
0xCE, 0xB9, 0xCE, 0xB6, 0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xBC, 0xCE, 0xB5,
#define s_4_8 884
0xCE, 0xB9, 0xCE, 0xB6, 0xCE, 0xB1, 0xCE, 0xBC, 0xCE, 0xB5,
#define s_4_9 894
0xCE, 0xB9, 0xCE, 0xB6, 0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xBD, 0xCE, 0xB5,
#define s_4_10 906
0xCE, 0xB9, 0xCE, 0xB6, 0xCE, 0xB1, 0xCE, 0xBD, 0xCE, 0xB5,
#define s_4_11 s_4_1
#define s_4_12 s_4_9
#define s_4_13 s_4_10
#define s_5_0 916
0xCF, 0x83,
#define s_5_1 918
0xCF, 0x87,
#define s_5_2 920
0xCF, 0x85, 0xCF, 0x88,
#define s_5_3 924
0xCE, 0xB6, 0xCF, 0x89,
#define s_5_4 928
0xCE, 0xB2, 0xCE, 0xB9,
#define s_5_5 932
0xCE, 0xBB, 0xCE, 0xB9,
#define s_5_6 936
0xCE, 0xB1, 0xCE, 0xBB,
#define s_5_7 940
0xCE, 0xB5, 0xCE, 0xBD,
#define s_6_0 944
0xCF, 0x89, 0xCE, 0xB8, 0xCE, 0xB7, 0xCE, 0xBA, 0xCE, 0xB5, 0xCF, 0x83,
#define s_6_1 s_6_2
#define s_6_2 956
0xCF, 0x89, 0xCE, 0xB8, 0xCE, 0xB7, 0xCE, 0xBA, 0xCE, 0xB1, 0xCF, 0x84, 0xCE, 0xB5,
#define s_6_3 s_6_0
#define s_6_4 970
0xCF, 0x89, 0xCE, 0xB8, 0xCE, 0xB7, 0xCE, 0xBA, 0xCE, 0xB1, 0xCE, 0xBC, 0xCE, 0xB5,
#define s_6_5 984
0xCF, 0x89, 0xCE, 0xB8, 0xCE, 0xB7, 0xCE, 0xBA, 0xCE, 0xB1, 0xCE, 0xBD, 0xCE, 0xB5,
#define s_6_6 s_6_5
#define s_7_0 998
0xCE, 0xBE, 0xCE, 0xB1, 0xCE, 0xBD, 0xCE, 0xB1, 0xCF, 0x80, 0xCE, 0xB1,
#define s_7_1 1010
0xCE, 0xB5, 0xCF, 0x80, 0xCE, 0xB1,
#define s_7_2 1016
0xCF, 0x80, 0xCE, 0xB5, 0xCF, 0x81, 0xCE, 0xB9, 0xCF, 0x80, 0xCE, 0xB1,
#define s_7_3 1028
0xCE, 0xB1, 0xCE, 0xBD, 0xCE, 0xB1, 0xCE, 0xBC, 0xCF, 0x80, 0xCE, 0xB1,
#define s_7_4 1040
0xCE, 0xB5, 0xCE, 0xBC, 0xCF, 0x80, 0xCE, 0xB1,
#define s_7_5 1048
0xCF, 0x87, 0xCE, 0xB1, 0xCF, 0x81, 0xCF, 0x84, 0xCE, 0xBF, 0xCF, 0x80, 0xCE, 0xB1,
#define s_7_6 1062
0xCE, 0xB5, 0xCE, 0xBE, 0xCE, 0xB1, 0xCF, 0x81, 0xCF, 0x87, 0xCE, 0xB1,
#define s_7_7 s_7_2
#define s_7_8 (s_7_9 + 6)
#define s_7_9 1074
0xCE, 0xBC, 0xCE, 0xB5, 0xCF, 0x84, 0xCE, 0xB5, 0xCF, 0x80, 0xCE, 0xB5,
#define s_7_10 1086
0xCE, 0xB5, 0xCF, 0x83, 0xCE, 0xB5,
#define s_7_11 (s_7_12 + 6)
#define s_7_12 1092
0xCE, 0xB5, 0xCF, 0x83, 0xCF, 0x89, 0xCE, 0xBA, 0xCE, 0xBB, 0xCE, 0xB5,
#define s_7_13 (s_7_14 + 4)
#define s_7_14 1104
0xCE, 0xB1, 0xCF, 0x80, 0xCE, 0xB5, 0xCE, 0xBA, 0xCE, 0xBB, 0xCE, 0xB5,
#define s_7_15 1116
0xCE, 0xB1, 0xCF, 0x80, 0xCE, 0xBF, 0xCE, 0xBA, 0xCE, 0xBB, 0xCE, 0xB5,
#define s_7_16 1128
0xCE, 0xB4, 0xCE, 0xB1, 0xCE, 0xBD, 0xCE, 0xB5,
#define s_7_17 (s_7_18 + 6)
#define s_7_18 1136
0xCF, 0x83, 0xCF, 0x85, 0xCE, 0xBD, 0xCE, 0xB1, 0xCE, 0xB8, 0xCF, 0x81, 0xCE, 0xBF,
#define s_8_0 s_8_9
#define s_8_1 1150
0xCE, 0xBB, 0xCE, 0xB1, 0xCF, 0x81,
#define s_8_2 1156
0xCE, 0xB4, 0xCE, 0xB7, 0xCE, 0xBC, 0xCE, 0xBF, 0xCE, 0xBA, 0xCF, 0x81, 0xCE, 0xB1, 0xCF, 0x84,
#define s_8_3 (s_8_4 + 14)
#define s_8_4 1172
0xCE, 0xB3, 0xCE, 0xB9, 0xCE, 0xB3, 0xCE, 0xB1, 0xCE, 0xBD, 0xCF, 0x84, 0xCE, 0xBF, 0xCE, 0xB1, 0xCF, 0x86,
#define s_8_5 1190
0xCE, 0xB3, 0xCE, 0xB5,
#define s_8_6 1194
0xCE, 0xB3, 0xCE, 0xBA, 0xCE, 0xB5,
#define s_8_7 s_8_6
#define s_8_8 (s_8_2 + 4)
#define s_8_9 1200
0xCF, 0x80, 0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xBA, 0xCE, 0xB1, 0xCE, 0xBC,
#define s_8_10 1212
0xCE, 0xBA, 0xCE, 0xBF, 0xCE, 0xBC,
#define s_8_11 (s_8_4 + 6)
#define s_8_12 1218
0xCE, 0xBF, 0xCE, 0xBB, 0xCE, 0xBF,
#define s_9_0 1224
0xCE, 0xB9, 0xCF, 0x83, 0xCE, 0xB5, 0xCF, 0x83,
#define s_9_1 s_9_3
#define s_9_2 s_9_0
#define s_9_3 1232
0xCE, 0xB9, 0xCF, 0x83, 0xCE, 0xB1, 0xCF, 0x84, 0xCE, 0xB5,
#define s_9_4 1242
0xCE, 0xB9, 0xCF, 0x83, 0xCE, 0xB1, 0xCE, 0xBC, 0xCE, 0xB5,
#define s_9_5 1252
0xCE, 0xB9, 0xCF, 0x83, 0xCE, 0xB1, 0xCE, 0xBD, 0xCE, 0xB5,
#define s_9_6 s_9_5
#define s_10_0 1262
0xCE, 0xBE, 0xCE, 0xB1, 0xCE, 0xBD, 0xCE, 0xB1, 0xCF, 0x80, 0xCE, 0xB1,
#define s_10_1 1274
0xCE, 0xB5, 0xCF, 0x80, 0xCE, 0xB1,
#define s_10_2 1280
0xCF, 0x80, 0xCE, 0xB5, 0xCF, 0x81, 0xCE, 0xB9, 0xCF, 0x80, 0xCE, 0xB1,
#define s_10_3 1292
0xCE, 0xB1, 0xCE, 0xBD, 0xCE, 0xB1, 0xCE, 0xBC, 0xCF, 0x80, 0xCE, 0xB1,
#define s_10_4 1304
0xCE, 0xB5, 0xCE, 0xBC, 0xCF, 0x80, 0xCE, 0xB1,
#define s_10_5 1312
0xCF, 0x87, 0xCE, 0xB1, 0xCF, 0x81, 0xCF, 0x84, 0xCE, 0xBF, 0xCF, 0x80, 0xCE, 0xB1,
#define s_10_6 1326
0xCE, 0xB5, 0xCE, 0xBE, 0xCE, 0xB1, 0xCF, 0x81, 0xCF, 0x87, 0xCE, 0xB1,
#define s_10_7 s_10_2
#define s_10_8 (s_10_9 + 6)
#define s_10_9 1338
0xCE, 0xBC, 0xCE, 0xB5, 0xCF, 0x84, 0xCE, 0xB5, 0xCF, 0x80, 0xCE, 0xB5,
#define s_10_10 1350
0xCE, 0xB5, 0xCF, 0x83, 0xCE, 0xB5,
#define s_10_11 (s_10_12 + 6)
#define s_10_12 1356
0xCE, 0xB5, 0xCF, 0x83, 0xCF, 0x89, 0xCE, 0xBA, 0xCE, 0xBB, 0xCE, 0xB5,
#define s_10_13 (s_10_14 + 4)
#define s_10_14 1368
0xCE, 0xB1, 0xCF, 0x80, 0xCE, 0xB5, 0xCE, 0xBA, 0xCE, 0xBB, 0xCE, 0xB5,
#define s_10_15 1380
0xCE, 0xB1, 0xCF, 0x80, 0xCE, 0xBF, 0xCE, 0xBA, 0xCE, 0xBB, 0xCE, 0xB5,
#define s_10_16 1392
0xCE, 0xB4, 0xCE, 0xB1, 0xCE, 0xBD, 0xCE, 0xB5,
#define s_10_17 (s_10_18 + 6)
#define s_10_18 1400
0xCF, 0x83, 0xCF, 0x85, 0xCE, 0xBD, 0xCE, 0xB1, 0xCE, 0xB8, 0xCF, 0x81, 0xCE, 0xBF,
#define s_11_0 1414
0xCE, 0xB9, 0xCF, 0x83, 0xCE, 0xB5, 0xCE, 0xB9, 0xCF, 0x83,
#define s_11_1 1424
0xCE, 0xB9, 0xCF, 0x83, 0xCF, 0x89,
#define s_11_2 1430
0xCE, 0xB9, 0xCF, 0x83, 0xCE, 0xB5, 0xCF, 0x84, 0xCE, 0xB5,
#define s_11_3 1440
0xCE, 0xB9, 0xCF, 0x83, 0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xBC, 0xCE, 0xB5,
#define s_11_4 1452
0xCE, 0xB9, 0xCF, 0x83, 0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xBD, 0xCE, 0xB5,
#define s_11_5 s_11_0
#define s_11_6 s_11_4
#define s_12_0 (s_12_1 + 2)
#define s_12_1 1464
0xCE, 0xB1, 0xCF, 0x83, 0xCE, 0xB5,
#define s_12_2 1470
0xCF, 0x80, 0xCE, 0xBB, 0xCE, 0xB5,
#define s_12_3 (s_12_4 + 6)
#define s_12_4 1476
0xCE, 0xB5, 0xCF, 0x83, 0xCF, 0x89, 0xCE, 0xBA, 0xCE, 0xBB, 0xCE, 0xB5,
#define s_12_5 1488
0xCE, 0xB4, 0xCE, 0xB1, 0xCE, 0xBD, 0xCE, 0xB5,
#define s_12_6 1496
0xCF, 0x83, 0xCF, 0x85, 0xCE, 0xBD, 0xCE, 0xB1, 0xCE, 0xB8, 0xCF, 0x81, 0xCE, 0xBF,
#define s_13_0 (s_13_1 + 4)
#define s_13_1 1510
0xCE, 0xB5, 0xCF, 0x85, 0xCF, 0x80,
#define s_13_2 1516
0xCE, 0xB1, 0xCF, 0x80,
#define s_13_3 1520
0xCE, 0xB5, 0xCE, 0xBC, 0xCF, 0x80,
#define s_13_4 1526
0xCE, 0xB3, 0xCF, 0x85, 0xCF, 0x81,
#define s_13_5 1532
0xCF, 0x87, 0xCF, 0x81,
#define s_13_6 1536
0xCF, 0x87, 0xCF, 0x89, 0xCF, 0x81,
#define s_13_7 1542
0xCE, 0xB1, 0xCF, 0x81,
#define s_13_8 1546
0xCE, 0xB1, 0xCE, 0xBF, 0xCF, 0x81,
#define s_13_9 (s_13_10 + 2)
#define s_13_10 1552
0xCE, 0xB1, 0xCF, 0x87, 0xCF, 0x84,
#define s_13_11 (s_13_12 + 2)
#define s_13_12 1558
0xCE, 0xB1, 0xCE, 0xBA, 0xCF, 0x84,
#define s_13_13 (s_13_14 + 2)
#define s_13_14 1564
0xCE, 0xB1, 0xCF, 0x83, 0xCF, 0x87,
#define s_13_15 1570
0xCF, 0x84, 0xCE, 0xB1, 0xCF, 0x87,
#define s_13_16 1576
0xCF, 0x85, 0xCF, 0x88,
#define s_13_17 1580
0xCE, 0xB1, 0xCF, 0x84, 0xCE, 0xB1,
#define s_13_18 (s_13_19 + 2)
#define s_13_19 1586
0xCE, 0xB7, 0xCF, 0x86, 0xCE, 0xB1,
#define s_13_20 1592
0xCE, 0xBB, 0xCF, 0x85, 0xCE, 0xB3,
#define s_13_21 1598
0xCE, 0xBC, 0xCE, 0xB5, 0xCE, 0xB3,
#define s_13_22 1604
0xCE, 0xB7, 0xCE, 0xB4,
#define s_13_23 1608
0xCE, 0xB5, 0xCF, 0x87, 0xCE, 0xB8,
#define s_13_24 1614
0xCE, 0xBA, 0xCE, 0xB1, 0xCE, 0xB8,
#define s_13_25 1620
0xCF, 0x83, 0xCE, 0xBA,
#define s_13_26 1624
0xCE, 0xBA, 0xCE, 0xB1, 0xCE, 0xBA,
#define s_13_27 1630
0xCE, 0xBC, 0xCE, 0xB1, 0xCE, 0xBA,
#define s_13_28 1636
0xCE, 0xBA, 0xCF, 0x85, 0xCE, 0xBB,
#define s_13_29 1642
0xCF, 0x86, 0xCE, 0xB9, 0xCE, 0xBB,
#define s_13_30 (s_13_3 + 2)
#define s_13_31 1648
0xCE, 0xB3, 0xCE, 0xB5, 0xCE, 0xBC,
#define s_13_32 1654
0xCE, 0xB1, 0xCF, 0x87, 0xCE, 0xBD,
#define s_14_0 1660
0xCE, 0xB9, 0xCF, 0x83, 0xCF, 0x84, 0xCE, 0xBF, 0xCF, 0x85, 0xCF, 0x83,
#define s_14_1 1672
0xCE, 0xB9, 0xCF, 0x83, 0xCF, 0x84, 0xCE, 0xB5, 0xCF, 0x83,
#define s_14_2 1682
0xCE, 0xB9, 0xCF, 0x83, 0xCF, 0x84, 0xCE, 0xB7, 0xCF, 0x83,
#define s_14_3 1692
0xCE, 0xB9, 0xCF, 0x83, 0xCF, 0x84, 0xCE, 0xBF, 0xCF, 0x83,
#define s_14_4 s_14_0
#define s_14_5 1702
0xCE, 0xB9, 0xCF, 0x83, 0xCF, 0x84, 0xCE, 0xB1,
#define s_14_6 s_14_1
#define s_14_7 s_14_2
#define s_14_8 1710
0xCE, 0xB9, 0xCF, 0x83, 0xCF, 0x84, 0xCE, 0xBF, 0xCE, 0xB9,
#define s_14_9 1720
0xCE, 0xB9, 0xCF, 0x83, 0xCF, 0x84, 0xCF, 0x89, 0xCE, 0xBD,
#define s_14_10 s_14_0
#define s_15_0 (s_15_1 + 8)
#define s_15_1 1730
0xCE, 0xBC, 0xCE, 0xB5, 0xCF, 0x84, 0xCE, 0xB1, 0xCF, 0x83, 0xCE, 0xB5,
#define s_15_2 1742
0xCE, 0xBC, 0xCE, 0xB9, 0xCE, 0xBA, 0xCF, 0x81, 0xCE, 0xBF, 0xCF, 0x83, 0xCE, 0xB5,
#define s_15_3 1756
0xCE, 0xB5, 0xCE, 0xB3, 0xCE, 0xBA, 0xCE, 0xBB, 0xCE, 0xB5,
#define s_15_4 1766
0xCE, 0xB1, 0xCF, 0x80, 0xCE, 0xBF, 0xCE, 0xBA, 0xCE, 0xBB, 0xCE, 0xB5,
#define s_16_0 (s_16_1 + 8)
#define s_16_1 1778
0xCE, 0xB1, 0xCE, 0xBD, 0xCF, 0x84, 0xCE, 0xB9, 0xCE, 0xB4, 0xCE, 0xB1, 0xCE, 0xBD, 0xCE, 0xB5,
#define s_17_0 1794
0xCF, 0x84, 0xCE, 0xBF, 0xCF, 0x80, 0xCE, 0xB9, 0xCE, 0xBA,
#define s_17_1 1804
0xCF, 0x83, 0xCE, 0xBA, 0xCE, 0xB5, 0xCF, 0x80, 0xCF, 0x84, 0xCE, 0xB9, 0xCE, 0xBA,
#define s_17_2 (s_17_3 + 2)
#define s_17_3 1818
0xCE, 0xB1, 0xCE, 0xB3, 0xCE, 0xBD, 0xCF, 0x89, 0xCF, 0x83, 0xCF, 0x84, 0xCE, 0xB9, 0xCE, 0xBA,
#define s_17_4 1834
0xCE, 0xB5, 0xCE, 0xBA, 0xCE, 0xBB, 0xCE, 0xB5, 0xCE, 0xBA, 0xCF, 0x84, 0xCE, 0xB9, 0xCE, 0xBA,
#define s_17_5 1850
0xCE, 0xB1, 0xCF, 0x84, 0xCE, 0xBF, 0xCE, 0xBC, 0xCE, 0xB9, 0xCE, 0xBA,
#define s_17_6 1862
0xCE, 0xB5, 0xCE, 0xB8, 0xCE, 0xBD, 0xCE, 0xB9, 0xCE, 0xBA,
#define s_17_7 1872
0xCE, 0xB8, 0xCE, 0xB5, 0xCE, 0xB1, 0xCF, 0x84, 0xCF, 0x81, 0xCE, 0xB9, 0xCE, 0xBD,
#define s_17_8 1886
0xCE, 0xB1, 0xCE, 0xBB, 0xCE, 0xB5, 0xCE, 0xBE, 0xCE, 0xB1, 0xCE, 0xBD, 0xCE, 0xB4, 0xCF, 0x81, 0xCE, 0xB9, 0xCE, 0xBD,
#define s_17_9 1906
0xCE, 0xB2, 0xCF, 0x85, 0xCE, 0xB6, 0xCE, 0xB1, 0xCE, 0xBD, 0xCF, 0x84, 0xCE, 0xB9, 0xCE, 0xBD,
#define s_18_0 1922
0xCE, 0xB9, 0xCF, 0x83, 0xCE, 0xBC, 0xCE, 0xBF, 0xCF, 0x85, 0xCF, 0x83,
#define s_18_1 1934
0xCE, 0xB9, 0xCF, 0x83, 0xCE, 0xBC, 0xCE, 0xBF, 0xCF, 0x83,
#define s_18_2 s_18_0
#define s_18_3 1944
0xCE, 0xB9, 0xCF, 0x83, 0xCE, 0xBC, 0xCE, 0xBF, 0xCE, 0xB9,
#define s_18_4 1954
0xCE, 0xB9, 0xCF, 0x83, 0xCE, 0xBC, 0xCF, 0x89, 0xCE, 0xBD,
#define s_18_5 s_18_0
#define s_19_0 1964
0xCF, 0x83,
#define s_19_1 1966
0xCF, 0x87,
#define s_20_0 1968
0xCE, 0xB1, 0xCF, 0x81, 0xCE, 0xB1, 0xCE, 0xBA, 0xCE, 0xB9, 0xCE, 0xB1,
#define s_20_1 1980
0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xB4, 0xCE, 0xB1, 0xCE, 0xBA, 0xCE, 0xB9, 0xCE, 0xB1,
#define s_20_2 s_20_0
#define s_20_3 s_20_1
#define s_21_0 1994
0xCE, 0xBA, 0xCE, 0xB1, 0xCF, 0x84, 0xCF, 0x81, 0xCE, 0xB1, 0xCF, 0x80,
#define s_21_1 (s_21_0 + 6)
#define s_21_2 (s_21_3 + 4)
#define s_21_3 2006
0xCE, 0xBB, 0xCE, 0xB1, 0xCE, 0xB2, 0xCF, 0x81,
#define s_21_4 2014
0xCE, 0xB1, 0xCE, 0xBC, 0xCE, 0xB2, 0xCF, 0x81,
#define s_21_5 2022
0xCE, 0xBC, 0xCE, 0xB5, 0xCF, 0x81,
#define s_21_6 2028
0xCE, 0xB1, 0xCE, 0xBD, 0xCE, 0xB8, 0xCF, 0x81,
#define s_21_7 2036
0xCE, 0xBA, 0xCE, 0xBF, 0xCF, 0x81,
#define s_21_8 (s_21_9 + 10)
#define s_21_9 2042
0xCE, 0xBD, 0xCE, 0xB1, 0xCE, 0xB3, 0xCE, 0xBA, 0xCE, 0xB1, 0xCF, 0x83,
#define s_21_10 2054
0xCE, 0xBC, 0xCE, 0xBF, 0xCF, 0x85, 0xCF, 0x83, 0xCF, 0x84,
#define s_21_11 2064
0xCF, 0x81, 0xCF, 0x85,
#define s_21_12 (s_21_13 + 2)
#define s_21_13 (s_21_14 + 6)
#define s_21_14 2068
0xCE, 0xB1, 0xCE, 0xBB, 0xCE, 0xB9, 0xCF, 0x83, 0xCF, 0x86,
#define s_21_15 (s_21_18 + 6)
#define s_21_16 2078
0xCE, 0xB2, 0xCE, 0xB1, 0xCE, 0xBC, 0xCE, 0xB2,
#define s_21_17 (s_21_18 + 10)
#define s_21_18 2086
0xCF, 0x84, 0xCF, 0x83, 0xCE, 0xB5, 0xCF, 0x87, 0xCE, 0xBF, 0xCF, 0x83, 0xCE, 0xBB, 0xCE, 0xBF, 0xCE, 0xB2,
#define s_21_19 2104
0xCF, 0x84, 0xCE, 0xB6,
#define s_21_20 s_21_0
#define s_21_21 2108
0xCF, 0x83, 0xCE, 0xBA,
#define s_21_22 2112
0xCE, 0xBA, 0xCE, 0xB1, 0xCF, 0x80, 0xCE, 0xB1, 0xCE, 0xBA,
#define s_21_23 2122
0xCF, 0x83, 0xCE, 0xBF, 0xCE, 0xBA,
#define s_21_24 2128
0xCF, 0x80, 0xCE, 0xBB,
#define s_21_25 2132
0xCF, 0x86, 0xCF, 0x85, 0xCE, 0xBB,
#define s_21_26 2138
0xCE, 0xBB, 0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xBB,
#define s_21_27 2146
0xCE, 0xBC, 0xCE, 0xB1, 0xCE, 0xBB,
#define s_21_28 2152
0xCF, 0x86, 0xCE, 0xB1, 0xCF, 0x81, 0xCE, 0xBC,
#define s_21_29 2160
0xCE, 0xBA, 0xCE, 0xB1, 0xCE, 0xB9, 0xCE, 0xBC,
#define s_21_30 2168
0xCE, 0xBA, 0xCE, 0xBB, 0xCE, 0xB9, 0xCE, 0xBC,
#define s_21_31 2176
0xCF, 0x83, 0xCF, 0x80, 0xCE, 0xB1, 0xCE, 0xBD,
#define s_21_32 2184
0xCE, 0xBA, 0xCE, 0xBF, 0xCE, 0xBD,
#define s_22_0 s_22_1
#define s_22_1 2190
0xCF, 0x80, 0xCE, 0xB1, 0xCF, 0x84, 0xCE, 0xB5, 0xCF, 0x81,
#define s_22_2 2200
0xCF, 0x84, 0xCE, 0xBF, 0xCF, 0x83,
#define s_22_3 2206
0xCE, 0xBD, 0xCF, 0x85, 0xCF, 0x86,
#define s_22_4 s_22_8
#define s_22_5 2212
0xCE, 0xBA, 0xCE, 0xB1, 0xCF, 0x81, 0xCE, 0xB4,
#define s_22_6 2220
0xCE, 0xB6,
#define s_22_7 2222
0xCF, 0x83, 0xCE, 0xBA,
#define s_22_8 2226
0xCE, 0xB2, 0xCE, 0xB1, 0xCE, 0xBB,
#define s_22_9 2232
0xCE, 0xB3, 0xCE, 0xBB,
#define s_22_10 2236
0xCF, 0x84, 0xCF, 0x81, 0xCE, 0xB9, 0xCF, 0x80, 0xCE, 0xBF, 0xCE, 0xBB,
#define s_22_11 2248
0xCE, 0xBC, 0xCE, 0xB1, 0xCE, 0xBA, 0xCF, 0x81, 0xCF, 0x85, 0xCE, 0xBD,
#define s_22_12 2260
0xCE, 0xB3, 0xCE, 0xB9, 0xCE, 0xB1, 0xCE, 0xBD,
#define s_22_13 2268
0xCE, 0xB7, 0xCE, 0xB3, 0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xBC, 0xCE, 0xB5, 0xCE, 0xBD,
#define s_22_14 2282
0xCE, 0xBA, 0xCE, 0xBF, 0xCE, 0xBD,
#define s_23_0 2288
0xCE, 0xB9, 0xCF, 0x84, 0xCF, 0x83, 0xCE, 0xB1, 0xCF, 0x83,
#define s_23_1 2298
0xCE, 0xB9, 0xCF, 0x84, 0xCF, 0x83, 0xCE, 0xB5, 0xCF, 0x83,
#define s_23_2 s_23_0
#define s_23_3 (s_23_4 + 4)
#define s_23_4 2308
0xCE, 0xB1, 0xCF, 0x81, 0xCE, 0xB1, 0xCE, 0xBA, 0xCE, 0xB9, 0xCE, 0xB1,
#define s_23_5 s_23_3
#define s_23_6 s_23_4
#define s_23_7 2320
0xCE, 0xB9, 0xCF, 0x84, 0xCF, 0x83, 0xCF, 0x89, 0xCE, 0xBD,
#define s_24_0 2330
0xCE, 0xB9, 0xCF, 0x81,
#define s_24_1 2334
0xCF, 0x88, 0xCE, 0xB1, 0xCE, 0xBB,
#define s_24_2 2340
0xCE, 0xB1, 0xCE, 0xB9, 0xCF, 0x86, 0xCE, 0xBD,
#define s_24_3 2348
0xCE, 0xBF, 0xCE, 0xBB, 0xCE, 0xBF,
#define s_25_0 2354
0xCE, 0xB5,
#define s_25_1 2356
0xCF, 0x80, 0xCE, 0xB1, 0xCE, 0xB9, 0xCF, 0x87, 0xCE, 0xBD,
#define s_26_0 2366
0xCE, 0xB9, 0xCE, 0xB4, 0xCE, 0xB9, 0xCE, 0xB1,
#define s_26_1 2374
0xCE, 0xB9, 0xCE, 0xB4, 0xCE, 0xB9, 0xCF, 0x89, 0xCE, 0xBD,
#define s_26_2 2384
0xCE, 0xB9, 0xCE, 0xB4, 0xCE, 0xB9, 0xCE, 0xBF,
#define s_27_0 (s_27_4 + 2)
#define s_27_1 2392
0xCE, 0xB9, 0xCE, 0xB2,
#define s_27_2 2396
0xCE, 0xB4,
#define s_27_3 2398
0xCE, 0xBB, 0xCF, 0x85, 0xCE, 0xBA,
#define s_27_4 2404
0xCF, 0x86, 0xCF, 0x81, 0xCE, 0xB1, 0xCE, 0xB3, 0xCE, 0xBA,
#define s_27_5 2414
0xCE, 0xBF, 0xCE, 0xB2, 0xCE, 0xB5, 0xCE, 0xBB,
#define s_27_6 2422
0xCE, 0xBC, 0xCE, 0xB7, 0xCE, 0xBD,
#define s_28_0 2428
0xCE, 0xB9, 0xCF, 0x83, 0xCE, 0xBA, 0xCE, 0xBF, 0xCF, 0x83,
#define s_28_1 2438
0xCE, 0xB9, 0xCF, 0x83, 0xCE, 0xBA, 0xCE, 0xBF, 0xCF, 0x85,
#define s_28_2 2448
0xCE, 0xB9, 0xCF, 0x83, 0xCE, 0xBA, 0xCE, 0xB5,
#define s_28_3 s_28_0
#define s_29_0 2456
0xCE, 0xB1, 0xCE, 0xB4, 0xCE, 0xB5, 0xCF, 0x83,
#define s_29_1 2464
0xCE, 0xB1, 0xCE, 0xB4, 0xCF, 0x89, 0xCE, 0xBD,
#define s_30_0 2472
0xCE, 0xBC, 0xCF, 0x80, 0xCE, 0xB1, 0xCE, 0xBC, 0xCF, 0x80,
#define s_30_1 2482
0xCE, 0xBA, 0xCF, 0x85, 0xCF, 0x81,
#define s_30_2 2488
0xCF, 0x80, 0xCE, 0xB1, 0xCF, 0x84, 0xCE, 0xB5, 0xCF, 0x81,
#define s_30_3 2498
0xCF, 0x80, 0xCE, 0xB5, 0xCE, 0xB8, 0xCE, 0xB5, 0xCF, 0x81,
#define s_30_4 2508
0xCE, 0xBD, 0xCF, 0x84, 0xCE, 0xB1, 0xCE, 0xBD, 0xCF, 0x84,
#define s_30_5 2518
0xCE, 0xB3, 0xCE, 0xB9, 0xCE, 0xB1, 0xCE, 0xB3, 0xCE, 0xB9,
#define s_30_6 2528
0xCE, 0xB8, 0xCE, 0xB5, 0xCE, 0xB9,
#define s_30_7 2534
0xCE, 0xBF, 0xCE, 0xBA,
#define s_30_8 2538
0xCE, 0xBC, 0xCE, 0xB1, 0xCE, 0xBC,
#define s_30_9 2544
0xCE, 0xBC, 0xCE, 0xB1, 0xCE, 0xBD,
#define s_31_0 2550
0xCE, 0xB5, 0xCE, 0xB4, 0xCE, 0xB5, 0xCF, 0x83,
#define s_31_1 2558
0xCE, 0xB5, 0xCE, 0xB4, 0xCF, 0x89, 0xCE, 0xBD,
#define s_32_0 2566
0xCE, 0xBA, 0xCF, 0x81, 0xCE, 0xB1, 0xCF, 0x83, 0xCF, 0x80,
#define s_32_1 2576
0xCF, 0x85, 0xCF, 0x80,
#define s_32_2 2580
0xCE, 0xB4, 0xCE, 0xB1, 0xCF, 0x80,
#define s_32_3 2586
0xCE, 0xB3, 0xCE, 0xB7, 0xCF, 0x80,
#define s_32_4 2592
0xCE, 0xB9, 0xCF, 0x80,
#define s_32_5 2596
0xCE, 0xB5, 0xCE, 0xBC, 0xCF, 0x80,
#define s_32_6 2602
0xCE, 0xBF, 0xCF, 0x80,
#define s_32_7 2606
0xCE, 0xBC, 0xCE, 0xB9, 0xCE, 0xBB,
#define s_33_0 2612
0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xB4, 0xCE, 0xB5, 0xCF, 0x83,
#define s_33_1 2622
0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xB4, 0xCF, 0x89, 0xCE, 0xBD,
#define s_34_0 2632
0xCF, 0x83, 0xCF, 0x80,
#define s_34_1 2636
0xCF, 0x86, 0xCF, 0x81,
#define s_34_2 s_34_0
#define s_34_3 2640
0xCE, 0xBB, 0xCE, 0xB9, 0xCF, 0x87,
#define s_34_4 2646
0xCF, 0x84, 0xCF, 0x81, 0xCE, 0xB1, 0xCE, 0xB3,
#define s_34_5 2654
0xCF, 0x86, 0xCE, 0xB5,
#define s_34_6 2658
0xCE, 0xB1, 0xCF, 0x81, 0xCE, 0xBA,
#define s_34_7 2664
0xCF, 0x83, 0xCE, 0xBA,
#define s_34_8 2668
0xCE, 0xBA, 0xCE, 0xB1, 0xCE, 0xBB, 0xCE, 0xB9, 0xCE, 0xB1, 0xCE, 0xBA,
#define s_34_9 2680
0xCE, 0xBB, 0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xBB,
#define s_34_10 2688
0xCF, 0x86, 0xCE, 0xBB,
#define s_34_11 2692
0xCF, 0x80, 0xCE, 0xB5, 0xCF, 0x84, 0xCE, 0xB1, 0xCE, 0xBB,
#define s_34_12 2702
0xCE, 0xB2, 0xCE, 0xB5, 0xCE, 0xBB,
#define s_34_13 2708
0xCF, 0x87, 0xCE, 0xBD,
#define s_34_14 2712
0xCF, 0x80, 0xCE, 0xBB, 0xCE, 0xB5, 0xCE, 0xBE,
#define s_35_0 2720
0xCE, 0xB5, 0xCF, 0x89, 0xCF, 0x83,
#define s_35_1 2726
0xCE, 0xB5, 0xCF, 0x89, 0xCE, 0xBD,
#define s_36_0 s_36_1
#define s_36_1 2732
0xCF, 0x80, 0xCE, 0xB1, 0xCF, 0x81,
#define s_36_2 (s_36_3 + 2)
#define s_36_3 2738
0xCE, 0xB9, 0xCE, 0xB4,
#define s_36_4 2742
0xCE, 0xB8,
#define s_36_5 2744
0xCE, 0xB3, 0xCE, 0xB1, 0xCE, 0xBB,
#define s_36_6 2750
0xCE, 0xB5, 0xCE, 0xBB,
#define s_36_7 2754
0xCE, 0xBD,
#define s_37_0 2756
0xCE, 0xB9, 0xCE, 0xBF, 0xCF, 0x85,
#define s_37_1 2762
0xCE, 0xB9, 0xCE, 0xB1,
#define s_37_2 2766
0xCE, 0xB9, 0xCF, 0x89, 0xCE, 0xBD,
#define s_38_0 2772
0xCE, 0xB9, 0xCE, 0xBA, 0xCE, 0xBF, 0xCF, 0x85,
#define s_38_1 2780
0xCE, 0xB9, 0xCE, 0xBA, 0xCE, 0xB1,
#define s_38_2 2786
0xCE, 0xB9, 0xCE, 0xBA, 0xCF, 0x89, 0xCE, 0xBD,
#define s_38_3 s_38_0
#define s_39_0 2794
0xCE, 0xBA, 0xCE, 0xB1, 0xCE, 0xBB, 0xCF, 0x80,
#define s_39_1 2802
0xCE, 0xB3, 0xCE, 0xB5, 0xCF, 0x81,
#define s_39_2 2808
0xCF, 0x80, 0xCE, 0xBB, 0xCE, 0xB9, 0xCE, 0xB1, 0xCF, 0x84, 0xCF, 0x83,
#define s_39_3 2820
0xCF, 0x80, 0xCE, 0xB5, 0xCF, 0x84, 0xCF, 0x83,
#define s_39_4 2828
0xCF, 0x80, 0xCE, 0xB9, 0xCF, 0x84, 0xCF, 0x83,
#define s_39_5 2836
0xCF, 0x86, 0xCF, 0x85, 0xCF, 0x83,
#define s_39_6 2842
0xCF, 0x87, 0xCE, 0xB1, 0xCF, 0x83,
#define s_39_7 2848
0xCE, 0xBC, 0xCF, 0x80, 0xCE, 0xBF, 0xCF, 0x83,
#define s_39_8 2856
0xCF, 0x83, 0xCE, 0xB5, 0xCF, 0x81, 0xCF, 0x84,
#define s_39_9 2864
0xCE, 0xBC, 0xCF, 0x80, 0xCE, 0xB1, 0xCE, 0xB3, 0xCE, 0xB9, 0xCE, 0xB1, 0xCF, 0x84,
#define s_39_10 2878
0xCE, 0xBD, 0xCE, 0xB9, 0xCF, 0x84,
#define s_39_11 2884
0xCF, 0x80, 0xCE, 0xB9, 0xCE, 0xBA, 0xCE, 0xB1, 0xCE, 0xBD, 0xCF, 0x84,
#define s_39_12 2896
0xCE, 0xB5, 0xCE, 0xBE, 0xCF, 0x89, 0xCE, 0xB4,
#define s_39_13 (s_39_14 + 6)
#define s_39_14 2904
0xCE, 0xBA, 0xCE, 0xB1, 0xCF, 0x84, 0xCE, 0xB1, 0xCE, 0xB4,
#define s_39_15 2914
0xCF, 0x83, 0xCF, 0x85, 0xCE, 0xBD, 0xCE, 0xB1, 0xCE, 0xB4,
#define s_39_16 2924
0xCE, 0xB1, 0xCE, 0xBD, 0xCF, 0x84, 0xCE, 0xB9, 0xCE, 0xB4,
#define s_39_17 2934
0xCE, 0xB5, 0xCE, 0xBD, 0xCE, 0xB4,
#define s_39_18 2940
0xCF, 0x85, 0xCF, 0x80, 0xCE, 0xBF, 0xCE, 0xB4,
#define s_39_19 2948
0xCF, 0x80, 0xCF, 0x81, 0xCF, 0x89, 0xCF, 0x84, 0xCE, 0xBF, 0xCE, 0xB4,
#define s_39_20 2960
0xCF, 0x86, 0xCF, 0x85, 0xCE, 0xBB, 0xCE, 0xBF, 0xCE, 0xB4,
#define s_39_21 (s_39_22 + 4)
#define s_39_22 2970
0xCE, 0xB1, 0xCE, 0xBD, 0xCE, 0xB7, 0xCE, 0xB8,
#define s_39_23 2978
0xCE, 0xBE, 0xCE, 0xB9, 0xCE, 0xBA,
#define s_39_24 2984
0xCE, 0xBC, 0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xBB,
#define s_39_25 (s_39_0 + 2)
#define s_39_26 2992
0xCE, 0xB1, 0xCE, 0xBC, 0xCE, 0xBC, 0xCE, 0xBF, 0xCF, 0x87, 0xCE, 0xB1, 0xCE, 0xBB,
#define s_39_27 3006
0xCF, 0x83, 0xCF, 0x85, 0xCE, 0xBD, 0xCE, 0xBF, 0xCE, 0xBC, 0xCE, 0xB7, 0xCE, 0xBB,
#define s_39_28 3020
0xCE, 0xBC, 0xCF, 0x80, 0xCE, 0xBF, 0xCE, 0xBB,
#define s_39_29 3028
0xCE, 0xB2, 0xCF, 0x81, 0xCF, 0x89, 0xCE, 0xBC,
#define s_39_30 3036
0xCF, 0x84, 0xCF, 0x83, 0xCE, 0xB1, 0xCE, 0xBC,
#define s_39_31 3044
0xCE, 0xBC, 0xCF, 0x80, 0xCE, 0xB1, 0xCE, 0xBD,
#define s_39_32 3052
0xCE, 0xB1, 0xCE, 0xBC, 0xCE, 0xB1, 0xCE, 0xBD,
#define s_39_33 3060
0xCE, 0xBA, 0xCE, 0xB1, 0xCE, 0xBB, 0xCE, 0xBB, 0xCE, 0xB9, 0xCE, 0xBD,
#define s_39_34 3072
0xCF, 0x80, 0xCE, 0xBF, 0xCF, 0x83, 0xCF, 0x84, 0xCE, 0xB5, 0xCE, 0xBB, 0xCE, 0xBD,
#define s_39_35 3086
0xCF, 0x86, 0xCE, 0xB9, 0xCE, 0xBB, 0xCE, 0xBF, 0xCE, 0xBD,
#define s_40_0 3096
0xCE, 0xBF, 0xCF, 0x85, 0xCF, 0x83, 0xCE, 0xB1, 0xCE, 0xBC, 0xCE, 0xB5,
#define s_40_1 3108
0xCE, 0xB7, 0xCF, 0x83, 0xCE, 0xB1, 0xCE, 0xBC, 0xCE, 0xB5,
#define s_40_2 3118
0xCE, 0xB1, 0xCE, 0xB3, 0xCE, 0xB1, 0xCE, 0xBC, 0xCE, 0xB5,
#define s_40_3 (s_40_4 + 4)
#define s_40_4 3128
0xCE, 0xB7, 0xCE, 0xB8, 0xCE, 0xB7, 0xCE, 0xBA, 0xCE, 0xB1, 0xCE, 0xBC, 0xCE, 0xB5,
#define s_41_0 3142
0xCE, 0xB1, 0xCE, 0xBD, 0xCE, 0xB1, 0xCF, 0x80,
#define s_41_1 3150
0xCF, 0x80, 0xCE, 0xB9, 0xCE, 0xBA, 0xCF, 0x81,
#define s_41_2 3158
0xCE, 0xB1, 0xCF, 0x80, 0xCE, 0xBF, 0xCF, 0x83, 0xCF, 0x84,
#define s_41_3 3168
0xCF, 0x80, 0xCE, 0xBF, 0xCF, 0x84,
#define s_41_4 (s_41_5 + 4)
#define s_41_5 3174
0xCF, 0x83, 0xCE, 0xB9, 0xCF, 0x87,
#define s_41_6 3180
0xCE, 0xB2, 0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xB2,
#define s_41_7 3188
0xCF, 0x80, 0xCE, 0xB5, 0xCE, 0xB8,
#define s_41_8 3194
0xCE, 0xBE, 0xCE, 0xB5, 0xCE, 0xB8,
#define s_41_9 3200
0xCE, 0xB1, 0xCF, 0x80, 0xCE, 0xBF, 0xCE, 0xB8,
#define s_41_10 3208
0xCE, 0xB1, 0xCF, 0x80, 0xCE, 0xBF, 0xCE, 0xBA,
#define s_41_11 3216
0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xBB,
#define s_42_0 3222
0xCF, 0x84, 0xCF, 0x81,
#define s_42_1 3226
0xCF, 0x84, 0xCF, 0x83,
#define s_43_0 3230
0xCE, 0xBF, 0xCF, 0x85, 0xCF, 0x83, 0xCE, 0xB1, 0xCE, 0xBD, 0xCE, 0xB5,
#define s_43_1 3242
0xCE, 0xB7, 0xCF, 0x83, 0xCE, 0xB1, 0xCE, 0xBD, 0xCE, 0xB5,
#define s_43_2 (s_43_3 + 2)
#define s_43_3 3252
0xCE, 0xB9, 0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xBD, 0xCF, 0x84, 0xCE, 0xB1, 0xCE, 0xBD, 0xCE, 0xB5,
#define s_43_4 (s_43_5 + 2)
#define s_43_5 3268
0xCE, 0xB9, 0xCE, 0xBF, 0xCE, 0xBD, 0xCF, 0x84, 0xCE, 0xB1, 0xCE, 0xBD, 0xCE, 0xB5,
#define s_43_6 (s_43_7 + 2)
#define s_43_7 3282
0xCE, 0xB9, 0xCE, 0xBF, 0xCF, 0x84, 0xCE, 0xB1, 0xCE, 0xBD, 0xCE, 0xB5,
#define s_43_8 3294
0xCE, 0xB1, 0xCE, 0xB3, 0xCE, 0xB1, 0xCE, 0xBD, 0xCE, 0xB5,
#define s_43_9 (s_43_10 + 4)
#define s_43_10 3304
0xCE, 0xB7, 0xCE, 0xB8, 0xCE, 0xB7, 0xCE, 0xBA, 0xCE, 0xB1, 0xCE, 0xBD, 0xCE, 0xB5,
#define s_44_0 (s_44_1 + 2)
#define s_44_1 3318
0xCF, 0x83, 0xCF, 0x80,
#define s_44_2 3322
0xCF, 0x80, 0xCE, 0xBF, 0xCE, 0xBB, 0xCF, 0x85, 0xCE, 0xB4, 0xCE, 0xB1, 0xCF, 0x80,
#define s_44_3 3336
0xCE, 0xB1, 0xCE, 0xB4, 0xCE, 0xB1, 0xCF, 0x80,
#define s_44_4 3344
0xCF, 0x87, 0xCE, 0xB1, 0xCE, 0xBC, 0xCE, 0xB7, 0xCE, 0xBB, 0xCE, 0xBF, 0xCE, 0xB4, 0xCE, 0xB1, 0xCF, 0x80,
#define s_44_5 3362
0xCF, 0x84, 0xCF, 0x83, 0xCE, 0xBF, 0xCF, 0x80,
#define s_44_6 (s_44_7 + 6)
#define s_44_7 3370
0xCF, 0x85, 0xCF, 0x80, 0xCE, 0xBF, 0xCE, 0xBA, 0xCE, 0xBF, 0xCF, 0x80,
#define s_44_8 3382
0xCF, 0x80, 0xCE, 0xB5, 0xCF, 0x81, 0xCE, 0xB9, 0xCF, 0x84, 0xCF, 0x81,
#define s_44_9 (s_44_25 + 2)
#define s_44_10 (s_44_8 + 2)
#define s_44_11 3394
0xCE, 0xB2, 0xCE, 0xB5, 0xCF, 0x84, 0xCE, 0xB5, 0xCF, 0x81,
#define s_44_12 3404
0xCE, 0xB3, 0xCE, 0xB5, 0xCF, 0x81,
#define s_44_13 3410
0xCE, 0xBB, 0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xB8, 0xCE, 0xB7, 0xCF, 0x81,
#define s_44_14 3422
0xCE, 0xBA, 0xCE, 0xBF, 0xCF, 0x81, 0xCE, 0xBC, 0xCE, 0xBF, 0xCF, 0x81,
#define s_44_15 s_44_1
#define s_44_16 3434
0xCF, 0x83, 0xCE, 0xB1, 0xCF, 0x81, 0xCE, 0xB1, 0xCE, 0xBA, 0xCE, 0xB1, 0xCF, 0x84, 0xCF, 0x83,
#define s_44_17 3450
0xCE, 0xB8, 0xCF, 0x85, 0xCF, 0x83,
#define s_44_18 s_44_69
#define s_44_19 3456
0xCF, 0x80, 0xCE, 0xBF, 0xCE, 0xBB, 0xCE, 0xB9, 0xCF, 0x83,
#define s_44_20 s_44_85
#define s_44_21 3466
0xCE, 0xB4, 0xCE, 0xB9, 0xCE, 0xB1, 0xCF, 0x84,
#define s_44_22 3474
0xCF, 0x80, 0xCE, 0xBB, 0xCE, 0xB1, 0xCF, 0x84,
#define s_44_23 3482
0xCF, 0x84, 0xCF, 0x83, 0xCE, 0xB1, 0xCF, 0x81, 0xCE, 0xBB, 0xCE, 0xB1, 0xCF, 0x84,
#define s_44_24 3496
0xCF, 0x84, 0xCE, 0xB5, 0xCF, 0x84,
#define s_44_25 3502
0xCF, 0x80, 0xCE, 0xBF, 0xCF, 0x85, 0xCF, 0x81, 0xCE, 0xB9, 0xCF, 0x84,
#define s_44_26 3514
0xCF, 0x83, 0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xBB, 0xCF, 0x84,
#define s_44_27 3524
0xCE, 0xB6, 0xCF, 0x89, 0xCE, 0xBD, 0xCF, 0x84,
#define s_44_28 3532
0xCE, 0xBC, 0xCE, 0xB1, 0xCE, 0xB9, 0xCE, 0xBD, 0xCF, 0x84,
#define s_44_29 (s_44_30 + 12)
#define s_44_30 3542
0xCF, 0x80, 0xCE, 0xB5, 0xCE, 0xBD, 0xCF, 0x84, 0xCE, 0xB1, 0xCF, 0x81, 0xCF, 0x86,
#define s_44_31 3556
0xCE, 0xBA, 0xCE, 0xBF, 0xCE, 0xB9, 0xCE, 0xBB, 0xCE, 0xB1, 0xCF, 0x81, 0xCF, 0x86,
#define s_44_32 3570
0xCE, 0xBF, 0xCF, 0x81, 0xCF, 0x86,
#define s_44_33 3576
0xCE, 0xB4, 0xCE, 0xB9, 0xCE, 0xB1, 0xCF, 0x86,
#define s_44_34 (s_44_35 + 8)
#define s_44_35 3584
0xCF, 0x86, 0xCF, 0x89, 0xCF, 0x84, 0xCE, 0xBF, 0xCF, 0x83, 0xCF, 0x84, 0xCE, 0xB5, 0xCF, 0x86,
#define s_44_36 (s_44_37 + 2)
#define s_44_37 3600
0xCF, 0x85, 0xCF, 0x80, 0xCE, 0xB5, 0xCF, 0x81, 0xCE, 0xB7, 0xCF, 0x86,
#define s_44_38 s_44_4
#define s_44_39 3612
0xCF, 0x80, 0xCE, 0xBF, 0xCE, 0xBB, 0xCF, 0x85, 0xCE, 0xBC, 0xCE, 0xB7, 0xCF, 0x87,
#define s_44_40 3626
0xCE, 0xB1, 0xCE, 0xBC, 0xCE, 0xB7, 0xCF, 0x87,
#define s_44_41 (s_44_42 + 10)
#define s_44_42 3634
0xCE, 0xBC, 0xCE, 0xB9, 0xCE, 0xBA, 0xCF, 0x81, 0xCE, 0xBF, 0xCE, 0xB2, 0xCE, 0xB9, 0xCE, 0xBF, 0xCE, 0xBC, 0xCE, 0xB7, 0xCF, 0x87,
#define s_44_43 3656
0xCE, 0xBC, 0xCE, 0xB5, 0xCE, 0xB3, 0xCE, 0xBB, 0xCE, 0xBF, 0xCE, 0xB2, 0xCE, 0xB9, 0xCE, 0xBF, 0xCE, 0xBC, 0xCE, 0xB7, 0xCF, 0x87,
#define s_44_44 3678
0xCE, 0xBA, 0xCE, 0xB1, 0xCF, 0x80, 0xCE, 0xBD, 0xCE, 0xBF, 0xCE, 0xB2, 0xCE, 0xB9, 0xCE, 0xBF, 0xCE, 0xBC, 0xCE, 0xB7, 0xCF, 0x87,
#define s_44_45 3700
0xCE, 0xBB, 0xCE, 0xB9, 0xCF, 0x87,
#define s_44_46 (s_44_47 + 2)
#define s_44_47 3706
0xCE, 0xBD, 0xCF, 0x84, 0xCE, 0xB1, 0xCE, 0xB2,
#define s_44_48 3714
0xCF, 0x88, 0xCE, 0xB7, 0xCE, 0xBB, 0xCE, 0xBF, 0xCF, 0x84, 0xCE, 0xB1, 0xCE, 0xB2,
#define s_44_49 (s_44_50 + 2)
#define s_44_50 (s_44_51 + 8)
#define s_44_51 3728
0xCE, 0xBE, 0xCE, 0xB7, 0xCF, 0x81, 0xCE, 0xBF, 0xCE, 0xBA, 0xCE, 0xBB, 0xCE, 0xB9, 0xCE, 0xB2,
#define s_44_52 s_44_12
#define s_44_53 3744
0xCE, 0xB1, 0xCE, 0xBD, 0xCE, 0xBF, 0xCF, 0x81, 0xCE, 0xB3,
#define s_44_54 3754
0xCE, 0xB5, 0xCE, 0xBD, 0xCE, 0xBF, 0xCF, 0x81, 0xCE, 0xB3,
#define s_44_55 (s_44_56 + 4)
#define s_44_56 3764
0xCF, 0x84, 0xCF, 0x81, 0xCE, 0xB1, 0xCE, 0xB3,
#define s_44_57 3772
0xCF, 0x84, 0xCF, 0x83, 0xCE, 0xB1, 0xCE, 0xB3,
#define s_44_58 (s_44_59 + 2)
#define s_44_59 3780
0xCE, 0xB1, 0xCF, 0x84, 0xCF, 0x83, 0xCE, 0xB9, 0xCE, 0xB3, 0xCE, 0xB3,
#define s_44_60 3792
0xCE, 0xB1, 0xCE, 0xB8, 0xCE, 0xB9, 0xCE, 0xB3, 0xCE, 0xB3,
#define s_44_61 3802
0xCF, 0x83, 0xCF, 0x84, 0xCE, 0xB5, 0xCE, 0xB3,
#define s_44_62 3810
0xCE, 0xB1, 0xCF, 0x80, 0xCE, 0xB7, 0xCE, 0xB3,
#define s_44_63 (s_44_58 + 2)
#define s_44_64 3818
0xCE, 0xBA, 0xCE, 0xB1, 0xCE, 0xBB, 0xCF, 0x80, 0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xB6,
#define s_44_65 (s_44_13 + 6)
#define s_44_66 3832
0xCE, 0xBC, 0xCF, 0x89, 0xCE, 0xB1, 0xCE, 0xBC, 0xCE, 0xB5, 0xCE, 0xB8,
#define s_44_67 (s_44_68 + 2)
#define s_44_68 3844
0xCE, 0xB1, 0xCF, 0x80, 0xCE, 0xB9, 0xCE, 0xB8,
#define s_44_69 3852
0xCE, 0xB2, 0xCE, 0xB1, 0xCF, 0x83, 0xCE, 0xBA,
#define s_44_70 3860
0xCE, 0xB2, 0xCF, 0x81, 0xCE, 0xB1, 0xCF, 0x87, 0xCF, 0x85, 0xCE, 0xBA,
#define s_44_71 3872
0xCE, 0xB4, 0xCE, 0xB5, 0xCE, 0xBA,
#define s_44_72 3878
0xCF, 0x80, 0xCE, 0xB5, 0xCE, 0xBB, 0xCE, 0xB5, 0xCE, 0xBA,
#define s_44_73 (s_44_42 + 2)
#define s_44_74 3888
0xCE, 0xB1, 0xCE, 0xBD, 0xCE, 0xB9, 0xCE, 0xBA,
#define s_44_75 3896
0xCE, 0xB2, 0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xBB, 0xCE, 0xBA,
#define s_44_76 s_44_22
#define s_44_77 3906
0xCE, 0xB4, 0xCE, 0xB9, 0xCF, 0x80, 0xCE, 0xBB,
#define s_44_78 3914
0xCF, 0x88, 0xCF, 0x85, 0xCF, 0x87, 0xCE, 0xBF, 0xCF, 0x80, 0xCE, 0xBB,
#define s_44_79 3926
0xCE, 0xBB, 0xCE, 0xB1, 0xCE, 0xBF, 0xCF, 0x80, 0xCE, 0xBB,
#define s_44_80 (s_44_26 + 2)
#define s_44_81 (s_44_82 + 8)
#define s_44_82 3936
0xCE, 0xB2, 0xCE, 0xB1, 0xCE, 0xB8, 0xCF, 0x85, 0xCE, 0xB3, 0xCE, 0xB1, 0xCE, 0xBB,
#define s_44_83 3950
0xCE, 0xBA, 0xCE, 0xB1, 0xCF, 0x84, 0xCE, 0xB1, 0xCE, 0xB3, 0xCE, 0xB1, 0xCE, 0xBB,
#define s_44_84 3964
0xCE, 0xBF, 0xCE, 0xBB, 0xCE, 0xBF, 0xCE, 0xB3, 0xCE, 0xB1, 0xCE, 0xBB,
#define s_44_85 3976
0xCE, 0xBA, 0xCE, 0xB1, 0xCF, 0x83, 0xCF, 0x84, 0xCE, 0xB5, 0xCE, 0xBB,
#define s_44_86 3988
0xCE, 0xBC, 0xCE, 0xB5, 0xCE, 0xBB,
#define s_44_87 3994
0xCF, 0x80, 0xCE, 0xBF, 0xCF, 0x81, 0xCF, 0x84, 0xCE, 0xBF, 0xCE, 0xBB,
#define s_44_88 (s_44_4 + 4)
#define s_44_89 4006
0xCE, 0xB4, 0xCF, 0x81, 0xCE, 0xB1, 0xCE, 0xB4, 0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xBC,
#define s_44_90 4020
0xCE, 0xB2, 0xCF, 0x81, 0xCE, 0xB1, 0xCF, 0x87, 0xCE, 0xBC,
#define s_44_91 4030
0xCE, 0xBF, 0xCE, 0xBB, 0xCE, 0xB9, 0xCE, 0xB3, 0xCE, 0xBF, 0xCE, 0xB4, 0xCE, 0xB1, 0xCE, 0xBC,
#define s_44_92 4046
0xCE, 0xBC, 0xCE, 0xBF, 0xCF, 0x85, 0xCF, 0x83, 0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xBB, 0xCE, 0xBC,
#define s_44_93 (s_44_27 + 4)
#define s_44_94 4062
0xCE, 0xB1, 0xCE, 0xBC, 0xCE, 0xB5, 0xCF, 0x81, 0xCE, 0xB9, 0xCE, 0xBA, 0xCE, 0xB1, 0xCE, 0xBD,
#define s_45_0 4078
0xCE, 0xB7, 0xCF, 0x83, 0xCE, 0xB5, 0xCF, 0x84, 0xCE, 0xB5,
#define s_46_0 4088
0xCF, 0x80, 0xCF, 0x85, 0xCF, 0x81,
#define s_46_1 4094
0xCE, 0xB5, 0xCF, 0x85, 0xCF, 0x81,
#define s_46_2 4100
0xCF, 0x87, 0xCF, 0x89, 0xCF, 0x81,
#define s_46_3 4106
0xCE, 0xB2, 0xCE, 0xB1, 0xCF, 0x81,
#define s_46_4 4112
0xCE, 0xB2, 0xCF, 0x81,
#define s_46_5 4116
0xCE, 0xB1, 0xCE, 0xB9, 0xCF, 0x81,
#define s_46_6 4122
0xCF, 0x86, 0xCE, 0xBF, 0xCF, 0x81,
#define s_46_7 4128
0xCE, 0xBD, 0xCE, 0xB5, 0xCF, 0x84,
#define s_46_8 4134
0xCF, 0x83, 0xCF, 0x87,
#define s_46_9 4138
0xCF, 0x83, 0xCF, 0x85, 0xCE, 0xBD, 0xCE, 0xB4,
#define s_46_10 4146
0xCE, 0xB5, 0xCE, 0xBD, 0xCE, 0xB4,
#define s_46_11 4152
0xCE, 0xBF, 0xCE, 0xB4,
#define s_46_12 4156
0xCF, 0x85, 0xCF, 0x80, 0xCE, 0xB5, 0xCF, 0x81, 0xCE, 0xB8,
#define s_46_13 4166
0xCF, 0x83, 0xCE, 0xB8,
#define s_46_14 4170
0xCE, 0xB5, 0xCF, 0x85, 0xCE, 0xB8,
#define s_46_15 4176
0xCF, 0x81, 0xCE, 0xB1, 0xCE, 0xB8,
#define s_46_16 4182
0xCF, 0x84, 0xCE, 0xB1, 0xCE, 0xB8,
#define s_46_17 4188
0xCE, 0xB4, 0xCE, 0xB9, 0xCE, 0xB1, 0xCE, 0xB8,
#define s_46_18 4196
0xCE, 0xBA, 0xCE, 0xB1, 0xCE, 0xB8,
#define s_46_19 4202
0xCF, 0x84, 0xCE, 0xB9, 0xCE, 0xB8,
#define s_46_20 4208
0xCE, 0xB5, 0xCE, 0xBA, 0xCE, 0xB8,
#define s_46_21 4214
0xCF, 0x83, 0xCF, 0x85, 0xCE, 0xBD, 0xCE, 0xB8,
#define s_46_22 4222
0xCE, 0xB5, 0xCE, 0xBD, 0xCE, 0xB8,
#define s_46_23 4228
0xCF, 0x81, 0xCE, 0xBF, 0xCE, 0xB8,
#define s_46_24 4234
0xCE, 0xB1, 0xCF, 0x81, 0xCE, 0xBA,
#define s_46_25 4240
0xCF, 0x89, 0xCF, 0x86, 0xCE, 0xB5, 0xCE, 0xBB,
#define s_46_26 4248
0xCE, 0xB2, 0xCE, 0xBF, 0xCE, 0xBB,
#define s_46_27 s_46_9
#define s_46_28 4254
0xCE, 0xB1, 0xCE, 0xB9, 0xCE, 0xBD,
#define s_46_29 4260
0xCF, 0x80, 0xCE, 0xBF, 0xCE, 0xBD,
#define s_46_30 4266
0xCF, 0x81, 0xCE, 0xBF, 0xCE, 0xBD,
#define s_47_0 4272
0xCF, 0x83, 0xCE, 0xB5, 0xCF, 0x81, 0xCF, 0x80,
#define s_47_1 4280
0xCE, 0xBA, 0xCE, 0xBF, 0xCF, 0x80,
#define s_47_2 4286
0xCE, 0xB8, 0xCE, 0xB1, 0xCF, 0x81, 0xCF, 0x81,
#define s_47_3 4294
0xCE, 0xBD, 0xCF, 0x84, 0xCF, 0x81,
#define s_47_4 4300
0xCE, 0xB1, 0xCE, 0xB2, 0xCE, 0xB1, 0xCF, 0x81,
#define s_47_5 4308
0xCE, 0xB5, 0xCE, 0xBD, 0xCE, 0xB1, 0xCF, 0x81,
#define s_47_6 4316
0xCE, 0xB1, 0xCE, 0xB2, 0xCF, 0x81,
#define s_47_7 4322
0xCE, 0xBC, 0xCF, 0x80, 0xCE, 0xBF, 0xCF, 0x81,
#define s_47_8 (s_47_9 + 2)
#define s_47_9 4330
0xCF, 0x83, 0xCF, 0x85, 0xCF, 0x81, 0xCF, 0x86,
#define s_47_10 4338
0xCE, 0xBD, 0xCE, 0xB9, 0xCF, 0x86,
#define s_47_11 4344
0xCF, 0x80, 0xCE, 0xB1, 0xCE, 0xB3,
#define s_47_12 (s_47_13 + 2)
#define s_47_13 4350
0xCE, 0xB1, 0xCE, 0xB4,
#define s_47_14 s_47_2
#define s_47_15 4354
0xCE, 0xB1, 0xCE, 0xB8,
#define s_47_16 s_47_20
#define s_47_17 4358
0xCF, 0x84, 0xCE, 0xBF, 0xCE, 0xBA,
#define s_47_18 4364
0xCE, 0xB1, 0xCF, 0x80, 0xCE, 0xBB,
#define s_47_19 4370
0xCF, 0x80, 0xCE, 0xB1, 0xCF, 0x81, 0xCE, 0xB1, 0xCE, 0xBA, 0xCE, 0xB1, 0xCE, 0xBB,
#define s_47_20 4384
0xCF, 0x83, 0xCE, 0xBA, 0xCE, 0xB5, 0xCE, 0xBB,
#define s_47_21 4392
0xCE, 0xB5, 0xCE, 0xBC,
#define s_47_22 4396
0xCE, 0xB1, 0xCE, 0xBD,
#define s_47_23 4400
0xCE, 0xB2, 0xCE, 0xB5, 0xCE, 0xBD,
#define s_47_24 4406
0xCE, 0xB2, 0xCE, 0xB1, 0xCF, 0x81, 0xCE, 0xBF, 0xCE, 0xBD,
#define s_48_0 4416
0xCF, 0x89, 0xCE, 0xBD, 0xCF, 0x84, 0xCE, 0xB1, 0xCF, 0x83,
#define s_48_1 4426
0xCE, 0xBF, 0xCE, 0xBD, 0xCF, 0x84, 0xCE, 0xB1, 0xCF, 0x83,
#define s_49_0 (s_49_1 + 2)
#define s_49_1 4436
0xCE, 0xB9, 0xCE, 0xBF, 0xCE, 0xBC, 0xCE, 0xB1, 0xCF, 0x83, 0xCF, 0x84, 0xCE, 0xB5,
#define s_50_0 (s_50_1 + 2)
#define s_50_1 (s_50_2 + 8)
#define s_50_2 4450
0xCE, 0xB1, 0xCE, 0xBA, 0xCE, 0xB1, 0xCF, 0x84, 0xCE, 0xB1, 0xCF, 0x80,
#define s_50_3 (s_50_4 + 2)
#define s_50_4 4462
0xCE, 0xB1, 0xCF, 0x83, 0xCF, 0x85, 0xCE, 0xBC, 0xCF, 0x80,
#define s_50_5 4472
0xCE, 0xB1, 0xCE, 0xBC, 0xCE, 0xB5, 0xCF, 0x84, 0xCE, 0xB1, 0xCE, 0xBC, 0xCF, 0x86,
#define s_51_0 (s_51_4 + 2)
#define s_51_1 4486
0xCE, 0xBD, 0xCE, 0xB9, 0xCF, 0x83,
#define s_51_2 4492
0xCE, 0xB6,
#define s_51_3 (s_51_4 + 10)
#define s_51_4 4494
0xCF, 0x80, 0xCE, 0xB1, 0xCF, 0x81, 0xCE, 0xB1, 0xCE, 0xBA, 0xCE, 0xB1, 0xCE, 0xBB,
#define s_51_5 4508
0xCE, 0xB5, 0xCE, 0xBA, 0xCF, 0x84, 0xCE, 0xB5, 0xCE, 0xBB,
#define s_51_6 4518
0xCE, 0xBC,
#define s_51_7 4520
0xCE, 0xBE,
#define s_51_8 4522
0xCF, 0x80, 0xCF, 0x81, 0xCE, 0xBF,
#define s_52_0 4528
0xCE, 0xB7, 0xCE, 0xB8, 0xCE, 0xB7, 0xCE, 0xBA, 0xCE, 0xB5, 0xCF, 0x83,
#define s_52_1 4540
0xCE, 0xB7, 0xCE, 0xB8, 0xCE, 0xB7, 0xCE, 0xBA, 0xCE, 0xB1,
#define s_52_2 s_52_0
#define s_53_0 4550
0xCF, 0x83, 0xCF, 0x86,
#define s_53_1 4554
0xCE, 0xBD, 0xCE, 0xB1, 0xCF, 0x81, 0xCE, 0xB8,
#define s_53_2 4562
0xCF, 0x80, 0xCE, 0xB9, 0xCE, 0xB8,
#define s_53_3 4568
0xCE, 0xBF, 0xCE, 0xB8,
#define s_53_4 4572
0xCF, 0x83, 0xCE, 0xBA, 0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xBB,
#define s_53_5 4582
0xCF, 0x83, 0xCE, 0xBA, 0xCF, 0x89, 0xCE, 0xBB,
#define s_54_0 (s_54_1 + 8)
#define s_54_1 4590
0xCF, 0x80, 0xCF, 0x81, 0xCE, 0xBF, 0xCF, 0x83, 0xCE, 0xB8,
#define s_54_2 4600
0xCF, 0x80, 0xCE, 0xB1, 0xCF, 0x81, 0xCE, 0xB1, 0xCE, 0xBA, 0xCE, 0xB1, 0xCF, 0x84, 0xCE, 0xB1, 0xCE, 0xB8,
#define s_54_3 4618
0xCE, 0xB4, 0xCE, 0xB9, 0xCE, 0xB1, 0xCE, 0xB8,
#define s_54_4 4626
0xCF, 0x83, 0xCF, 0x85, 0xCE, 0xBD, 0xCE, 0xB8,
#define s_55_0 4634
0xCE, 0xB7, 0xCE, 0xBA, 0xCE, 0xB5, 0xCF, 0x83,
#define s_55_1 4642
0xCE, 0xB7, 0xCE, 0xBA, 0xCE, 0xB1,
#define s_55_2 s_55_0
#define s_56_0 4648
0xCE, 0xB2, 0xCE, 0xBB, 0xCE, 0xB5, 0xCF, 0x80,
#define s_56_1 4656
0xCF, 0x80, 0xCE, 0xBF, 0xCE, 0xB4, 0xCE, 0xB1, 0xCF, 0x81,
#define s_56_2 4666
0xCF, 0x80, 0xCF, 0x81, 0xCF, 0x89, 0xCF, 0x84,
#define s_56_3 4674
0xCE, 0xBA, 0xCF, 0x85, 0xCE, 0xBC, 0xCE, 0xB1, 0xCF, 0x84,
#define s_56_4 4684
0xCF, 0x80, 0xCE, 0xB1, 0xCE, 0xBD, 0xCF, 0x84, 0xCE, 0xB1, 0xCF, 0x87,
#define s_56_5 4696
0xCE, 0xBB, 0xCE, 0xB1, 0xCF, 0x87,
#define s_56_6 4702
0xCF, 0x86, 0xCE, 0xB1, 0xCE, 0xB3,
#define s_56_7 4708
0xCE, 0xBB, 0xCE, 0xB7, 0xCE, 0xB3,
#define s_56_8 4714
0xCF, 0x86, 0xCF, 0x81, 0xCF, 0x85, 0xCE, 0xB4,
#define s_56_9 4722
0xCE, 0xBC, 0xCE, 0xB1, 0xCE, 0xBD, 0xCF, 0x84, 0xCE, 0xB9, 0xCE, 0xBB,
#define s_56_10 4734
0xCE, 0xBC, 0xCE, 0xB1, 0xCE, 0xBB, 0xCE, 0xBB,
#define s_56_11 4742
0xCE, 0xBF, 0xCE, 0xBC,
#define s_57_0 4746
0xCE, 0xB5, 0xCE, 0xBA, 0xCE, 0xBB, 0xCE, 0xB9, 0xCF, 0x80,
#define s_57_1 (s_57_2 + 8)
#define s_57_2 4756
0xCE, 0xB1, 0xCE, 0xBD, 0xCE, 0xB1, 0xCF, 0x81, 0xCF, 0x81,
#define s_57_3 4766
0xCE, 0xB5, 0xCE, 0xBD, 0xCE, 0xB4, 0xCE, 0xB9, 0xCE, 0xB1, 0xCF, 0x86, 0xCE, 0xB5, 0xCF, 0x81,
#define s_57_4 4782
0xCF, 0x80, 0xCE, 0xB1, 0xCF, 0x84,
#define s_57_5 4788
0xCE, 0xBA, 0xCE, 0xB1, 0xCE, 0xB8, 0xCE, 0xB1, 0xCF, 0x81, 0xCE, 0xB5, 0xCF, 0x85,
#define s_57_6 4802
0xCE, 0xB4, 0xCE, 0xB5, 0xCF, 0x85, 0xCF, 0x84, 0xCE, 0xB5, 0xCF, 0x81, 0xCE, 0xB5, 0xCF, 0x85,
#define s_57_7 4818
0xCE, 0xBB, 0xCE, 0xB5, 0xCF, 0x87,
#define s_57_8 4824
0xCF, 0x84, 0xCF, 0x83, 0xCE, 0xB1,
#define s_57_9 4830
0xCF, 0x87, 0xCE, 0xB1, 0xCE, 0xB4,
#define s_57_10 4836
0xCE, 0xBC, 0xCE, 0xB5, 0xCE, 0xB4,
#define s_57_11 4842
0xCE, 0xBB, 0xCE, 0xB1, 0xCE, 0xBC, 0xCF, 0x80, 0xCE, 0xB9, 0xCE, 0xB4,
#define s_57_12 s_57_6
#define s_57_13 4854
0xCF, 0x80, 0xCE, 0xBB, 0xCE, 0xB5,
#define s_57_14 4860
0xCE, 0xBC, 0xCE, 0xB5, 0xCF, 0x83, 0xCE, 0xB1, 0xCE, 0xB6,
#define s_57_15 4870
0xCE, 0xB4, 0xCE, 0xB5, 0xCF, 0x83, 0xCF, 0x80, 0xCE, 0xBF, 0xCE, 0xB6,
#define s_57_16 4882
0xCE, 0xB1, 0xCE, 0xB9, 0xCE, 0xB8,
#define s_57_17 4888
0xCF, 0x86, 0xCE, 0xB1, 0xCF, 0x81, 0xCE, 0xBC, 0xCE, 0xB1, 0xCE, 0xBA,
#define s_57_18 4900
0xCE, 0xB1, 0xCE, 0xB3, 0xCE, 0xBA,
#define s_57_19 4906
0xCE, 0xB1, 0xCE, 0xBD, 0xCE, 0xB7, 0xCE, 0xBA,
#define s_57_20 (s_57_0 + 4)
#define s_57_21 s_57_10
#define s_57_22 (s_57_11 + 2)
#define s_57_23 4914
0xCE, 0xB2, 0xCF, 0x81, 0xCE, 0xBF, 0xCE, 0xBC,
#define s_57_24 4922
0xCF, 0x85, 0xCF, 0x80, 0xCE, 0xBF, 0xCF, 0x84, 0xCE, 0xB5, 0xCE, 0xB9, 0xCE, 0xBD,
#define s_58_0 4936
0xCE, 0xBF, 0xCF, 0x85, 0xCF, 0x83, 0xCE, 0xB5, 0xCF, 0x83,
#define s_58_1 4946
0xCE, 0xBF, 0xCF, 0x85, 0xCF, 0x83, 0xCE, 0xB1,
#define s_58_2 s_58_0
#define s_59_0 4954
0xCF, 0x88, 0xCE, 0xBF, 0xCF, 0x86,
#define s_59_1 4960
0xCE, 0xBD, 0xCE, 0xB1, 0xCF, 0x85, 0xCE, 0xBB, 0xCE, 0xBF, 0xCF, 0x87,
#define s_60_0 4972
0xCF, 0x81, 0xCF, 0x80,
#define s_60_1 4976
0xCF, 0x80, 0xCF, 0x81,
#define s_60_2 4980
0xCF, 0x86, 0xCF, 0x81,
#define s_60_3 4984
0xCF, 0x87, 0xCE, 0xBF, 0xCF, 0x81, 0xCF, 0x84,
#define s_60_4 4992
0xCF, 0x83, 0xCF, 0x86,
#define s_60_5 4996
0xCE, 0xBF, 0xCF, 0x86,
#define s_60_6 5000
0xCE, 0xBB, 0xCE, 0xBF, 0xCF, 0x87,
#define s_60_7 5006
0xCF, 0x80, 0xCE, 0xB5, 0xCE, 0xBB,
#define s_60_8 5012
0xCE, 0xBB, 0xCE, 0xBB,
#define s_60_9 5016
0xCF, 0x83, 0xCE, 0xBC, 0xCE, 0xB7, 0xCE, 0xBD,
#define s_61_0 (s_61_1 + 4)
#define s_61_1 s_61_15
#define s_61_2 5024
0xCE, 0xB1, 0xCE, 0xBD, 0xCF, 0x85, 0xCF, 0x80,
#define s_61_3 5032
0xCE, 0xB1, 0xCF, 0x81, 0xCF, 0x84, 0xCE, 0xB9, 0xCF, 0x80,
#define s_61_4 5042
0xCE, 0xB1, 0xCE, 0xB5, 0xCE, 0xB9, 0xCF, 0x80,
#define s_61_5 5050
0xCF, 0x83, 0xCF, 0x85, 0xCE, 0xBC, 0xCF, 0x80,
#define s_61_6 5058
0xCF, 0x80, 0xCF, 0x81, 0xCE, 0xBF, 0xCF, 0x83, 0xCF, 0x89, 0xCF, 0x80, 0xCE, 0xBF, 0xCF, 0x80,
#define s_61_7 5074
0xCF, 0x83, 0xCE, 0xB9, 0xCE, 0xB4, 0xCE, 0xB7, 0xCF, 0x81, 0xCE, 0xBF, 0xCF, 0x80,
#define s_61_8 5088
0xCE, 0xB4, 0xCF, 0x81, 0xCE, 0xBF, 0xCF, 0x83, 0xCE, 0xBF, 0xCF, 0x80,
#define s_61_9 5100
0xCE, 0xBD, 0xCE, 0xB5, 0xCE, 0xBF, 0xCF, 0x80,
#define s_61_10 5108
0xCE, 0xBA, 0xCF, 0x81, 0xCE, 0xBF, 0xCE, 0xBA, 0xCE, 0xB1, 0xCE, 0xBB, 0xCE, 0xBF, 0xCF, 0x80,
#define s_61_11 5124
0xCE, 0xBF, 0xCE, 0xBB, 0xCE, 0xBF, 0xCF, 0x80,
#define s_61_12 (s_61_3 + 2)
#define s_61_13 5132
0xCF, 0x84, 0xCF, 0x81,
#define s_61_14 5136
0xCE, 0xBF, 0xCF, 0x85, 0xCF, 0x81,
#define s_61_15 5142
0xCE, 0xB1, 0xCF, 0x83, 0xCF, 0x80, 0xCE, 0xB1, 0xCF, 0x81,
#define s_61_16 (s_61_17 + 2)
#define s_61_17 5152
0xCE, 0xB1, 0xCF, 0x87, 0xCE, 0xB1, 0xCF, 0x81,
#define s_61_18 5160
0xCE, 0xB1, 0xCF, 0x80, 0xCE, 0xB5, 0xCF, 0x81,
#define s_61_19 (s_61_3 + 4)
#define s_61_20 5168
0xCE, 0xB1, 0xCE, 0xBD, 0xCF, 0x85, 0xCF, 0x83, 0xCF, 0x84,
#define s_61_21 5178
0xCE, 0xB1, 0xCE, 0xB2, 0xCE, 0xB1, 0xCF, 0x83, 0xCF, 0x84,
#define s_61_22 5188
0xCF, 0x80, 0xCF, 0x81, 0xCE, 0xBF, 0xCF, 0x83, 0xCF, 0x84,
#define s_61_23 5198
0xCE, 0xB1, 0xCE, 0xB9, 0xCE, 0xBC, 0xCE, 0xBF, 0xCF, 0x83, 0xCF, 0x84,
#define s_61_24 5210
0xCE, 0xB4, 0xCE, 0xB9, 0xCE, 0xB1, 0xCF, 0x84,
#define s_61_25 5218
0xCE, 0xB5, 0xCF, 0x80, 0xCE, 0xB9, 0xCF, 0x84,
#define s_61_26 5226
0xCF, 0x83, 0xCF, 0x85, 0xCE, 0xBD, 0xCF, 0x84,
#define s_61_27 5234
0xCF, 0x85, 0xCF, 0x80, 0xCE, 0xBF, 0xCF, 0x84,
#define s_61_28 5242
0xCE, 0xB1, 0xCF, 0x80, 0xCE, 0xBF, 0xCF, 0x84,
#define s_61_29 (s_61_30 + 2)
#define s_61_30 5250
0xCE, 0xBD, 0xCE, 0xBF, 0xCE, 0xBC, 0xCE, 0xBF, 0xCF, 0x84,
#define s_61_31 5260
0xCE, 0xBD, 0xCE, 0xB1, 0xCF, 0x85,
#define s_61_32 5266
0xCF, 0x80, 0xCE, 0xBF, 0xCE, 0xBB, 0xCF, 0x85, 0xCF, 0x86,
#define s_61_33 5276
0xCE, 0xB1, 0xCF, 0x86,
#define s_61_34 5280
0xCE, 0xBE, 0xCE, 0xB5, 0xCF, 0x86,
#define s_61_35 5286
0xCE, 0xB1, 0xCE, 0xB4, 0xCE, 0xB7, 0xCF, 0x86,
#define s_61_36 5294
0xCF, 0x80, 0xCE, 0xB1, 0xCE, 0xBC, 0xCF, 0x86,
#define s_61_37 5302
0xCE, 0xB1, 0xCE, 0xBC, 0xCE, 0xB1, 0xCE, 0xBB, 0xCE, 0xBB, 0xCE, 0xB9,
#define s_61_38 (s_61_10 + 10)
#define s_61_39 s_61_37
#define s_61_40 (s_61_5 + 4)
#define s_61_41 5314
0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xBB, 0xCE, 0xB1, 0xCE, 0xBC,
#define s_61_42 (s_61_43 + 8)
#define s_61_43 5324
0xCE, 0xB4, 0xCE, 0xB5, 0xCF, 0x81, 0xCE, 0xB2, 0xCE, 0xB5, 0xCE, 0xBD,
#define s_62_0 5336
0xCE, 0xB1, 0xCE, 0xB3, 0xCE, 0xB5, 0xCF, 0x83,
#define s_62_1 5344
0xCE, 0xB1, 0xCE, 0xB3, 0xCE, 0xB1,
#define s_62_2 s_62_0
#define s_63_0 5350
0xCE, 0xB7, 0xCF, 0x83, 0xCE, 0xBF, 0xCF, 0x85,
#define s_63_1 5358
0xCE, 0xB7, 0xCF, 0x83, 0xCE, 0xB1,
#define s_63_2 5364
0xCE, 0xB7, 0xCF, 0x83, 0xCE, 0xB5,
#define s_64_0 (s_64_1 + 8)
#define s_64_1 5370
0xCE, 0xB5, 0xCF, 0x80, 0xCF, 0x84, 0xCE, 0xB1, 0xCE, 0xBD,
#define s_64_2 5380
0xCE, 0xB4, 0xCF, 0x89, 0xCE, 0xB4, 0xCE, 0xB5, 0xCE, 0xBA, 0xCE, 0xB1, 0xCE, 0xBD,
#define s_64_3 5394
0xCF, 0x87, 0xCE, 0xB5, 0xCF, 0x81, 0xCF, 0x83, 0xCE, 0xBF, 0xCE, 0xBD,
#define s_64_4 5406
0xCE, 0xBC, 0xCE, 0xB5, 0xCE, 0xB3, 0xCE, 0xB1, 0xCE, 0xBB, 0xCE, 0xBF, 0xCE, 0xBD,
#define s_64_5 5420
0xCE, 0xB5, 0xCF, 0x81, 0xCE, 0xB7, 0xCE, 0xBC, 0xCE, 0xBF, 0xCE, 0xBD,
#define s_65_0 5432
0xCE, 0xB7, 0xCF, 0x83, 0xCF, 0x84, 0xCE, 0xB5,
#define s_66_0 (s_66_1 + 6)
#define s_66_1 5440
0xCE, 0xB4, 0xCF, 0x85, 0xCF, 0x83, 0xCF, 0x87, 0xCF, 0x81,
#define s_66_2 5450
0xCE, 0xB5, 0xCF, 0x85, 0xCF, 0x87, 0xCF, 0x81,
#define s_66_3 5458
0xCE, 0xB1, 0xCF, 0x87, 0xCF, 0x81,
#define s_66_4 5464
0xCE, 0xBA, 0xCE, 0xBF, 0xCE, 0xB9, 0xCE, 0xBD, 0xCE, 0xBF, 0xCF, 0x87, 0xCF, 0x81,
#define s_66_5 5478
0xCF, 0x80, 0xCE, 0xB1, 0xCE, 0xBB, 0xCE, 0xB9, 0xCE, 0xBC, 0xCF, 0x88,
#define s_66_6 (s_66_7 + 2)
#define s_66_7 5490
0xCE, 0xB1, 0xCF, 0x83, 0xCE, 0xB2,
#define s_66_8 5496
0xCE, 0xB1, 0xCF, 0x80, 0xCE, 0xBB,
#define s_66_9 5502
0xCE, 0xB1, 0xCE, 0xB5, 0xCE, 0xB9, 0xCE, 0xBC, 0xCE, 0xBD,
#define s_67_0 (s_67_1 + 4)
#define s_67_1 5512
0xCE, 0xB7, 0xCF, 0x83, 0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xBD, 0xCE, 0xB5,
#define s_67_2 5524
0xCE, 0xB7, 0xCE, 0xB8, 0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xBD, 0xCE, 0xB5,
#define s_68_0 (s_68_1 + 4)
#define s_68_1 5536
0xCF, 0x83, 0xCF, 0x84, 0xCF, 0x81, 0xCE, 0xB1, 0xCE, 0xB2, 0xCE, 0xBF, 0xCE, 0xBC, 0xCE, 0xBF, 0xCF, 0x85, 0xCF, 0x84, 0xCF, 0x83,
#define s_68_2 5558
0xCE, 0xBA, 0xCE, 0xB1, 0xCE, 0xBA, 0xCE, 0xBF, 0xCE, 0xBC, 0xCE, 0xBF, 0xCF, 0x85, 0xCF, 0x84, 0xCF, 0x83,
#define s_68_3 5576
0xCF, 0x83, 0xCF, 0x80, 0xCE, 0xB9,
#define s_68_4 (s_68_5 + 6)
#define s_68_5 5582
0xCE, 0xB5, 0xCE, 0xBE, 0xCF, 0x89, 0xCE, 0xBD,
#define s_69_0 (s_69_1 + 4)
#define s_69_1 5590
0xCE, 0xB7, 0xCF, 0x83, 0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xBC, 0xCE, 0xB5,
#define s_69_2 5602
0xCE, 0xB7, 0xCE, 0xB8, 0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xBC, 0xCE, 0xB5,
#define s_70_0 (s_70_1 + 6)
#define s_70_1 5614
0xCF, 0x80, 0xCE, 0xB1, 0xCF, 0x81, 0xCE, 0xB1, 0xCF, 0x83, 0xCE, 0xBF, 0xCF, 0x85, 0xCF, 0x83,
#define s_70_2 5630
0xCE, 0xB1, 0xCE, 0xBB, 0xCE, 0xBB, 0xCE, 0xBF, 0xCF, 0x83, 0xCE, 0xBF, 0xCF, 0x85, 0xCF, 0x83,
#define s_70_3 5646
0xCF, 0x86,
#define s_70_4 5648
0xCF, 0x87,
#define s_70_5 5650
0xCE, 0xB1, 0xCE, 0xB6,
#define s_70_6 5654
0xCF, 0x89, 0xCF, 0x81, 0xCE, 0xB9, 0xCE, 0xBF, 0xCF, 0x80, 0xCE, 0xBB,
#define s_71_0 5666
0xCE, 0xBC, 0xCE, 0xB1, 0xCF, 0x84, 0xCE, 0xBF, 0xCF, 0x83,
#define s_71_1 5676
0xCE, 0xBC, 0xCE, 0xB1, 0xCF, 0x84, 0xCE, 0xB1,
#define s_71_2 5684
0xCE, 0xBC, 0xCE, 0xB1, 0xCF, 0x84, 0xCF, 0x89, 0xCE, 0xBD,
#define s_72_0 (s_72_1 + 2)
#define s_72_1 s_72_29
#define s_72_2 (s_72_23 + 6)
#define s_72_3 (s_72_4 + 4)
#define s_72_4 5694
0xCE, 0xB7, 0xCF, 0x83, 0xCE, 0xB5, 0xCF, 0x83,
#define s_72_5 5702
0xCE, 0xB7, 0xCE, 0xB4, 0xCE, 0xB5, 0xCF, 0x83,
#define s_72_6 s_72_4
#define s_72_7 (s_72_8 + 4)
#define s_72_8 5710
0xCE, 0xB7, 0xCE, 0xB8, 0xCE, 0xB5, 0xCE, 0xB9, 0xCF, 0x83,
#define s_72_9 s_72_18
#define s_72_10 s_72_0
#define s_72_11 s_72_1
#define s_72_12 (s_72_13 + 4)
#define s_72_13 5720
0xCE, 0xB7, 0xCF, 0x83, 0xCF, 0x89,
#define s_72_14 5726
0xCE, 0xB1, 0xCF, 0x89,
#define s_72_15 5730
0xCE, 0xB7, 0xCE, 0xB8, 0xCF, 0x89,
#define s_72_16 s_72_2
#define s_72_17 s_72_27
#define s_72_18 (s_72_19 + 2)
#define s_72_19 5736
0xCE, 0xB9, 0xCE, 0xBF, 0xCF, 0x83, 0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xBD, 0xCE, 0xB1,
#define s_72_20 (s_72_21 + 2)
#define s_72_21 5750
0xCE, 0xB9, 0xCE, 0xBF, 0xCE, 0xBC, 0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xBD, 0xCE, 0xB1,
#define s_72_22 s_72_3
#define s_72_23 5764
0xCE, 0xB9, 0xCE, 0xB5, 0xCF, 0x83, 0xCE, 0xB1, 0xCF, 0x83, 0xCF, 0x84, 0xCE, 0xB5,
#define s_72_24 (s_72_25 + 2)
#define s_72_25 5778
0xCE, 0xB9, 0xCE, 0xBF, 0xCF, 0x83, 0xCE, 0xB1, 0xCF, 0x83, 0xCF, 0x84, 0xCE, 0xB5,
#define s_72_26 (s_72_27 + 2)
#define s_72_27 5792
0xCE, 0xB9, 0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xBC, 0xCE, 0xB1, 0xCF, 0x83, 0xCF, 0x84, 0xCE, 0xB5,
#define s_72_28 5808
0xCE, 0xB9, 0xCE, 0xB5, 0xCE, 0xBC, 0xCE, 0xB1, 0xCF, 0x83, 0xCF, 0x84, 0xCE, 0xB5,
#define s_72_29 5822
0xCE, 0xBF, 0xCF, 0x85, 0xCF, 0x83, 0xCE, 0xB1, 0xCF, 0x84, 0xCE, 0xB5,
#define s_72_30 5834
0xCE, 0xB7, 0xCF, 0x83, 0xCE, 0xB1, 0xCF, 0x84, 0xCE, 0xB5,
#define s_72_31 5844
0xCE, 0xB1, 0xCE, 0xB3, 0xCE, 0xB1, 0xCF, 0x84, 0xCE, 0xB5,
#define s_72_32 (s_72_33 + 4)
#define s_72_33 5854
0xCE, 0xB7, 0xCE, 0xB8, 0xCE, 0xB7, 0xCE, 0xBA, 0xCE, 0xB1, 0xCF, 0x84, 0xCE, 0xB5,
#define s_72_34 (s_72_35 + 4)
#define s_72_35 5868
0xCE, 0xB7, 0xCE, 0xB8, 0xCE, 0xB5, 0xCE, 0xB9, 0xCF, 0x84, 0xCE, 0xB5,
#define s_72_36 s_72_4
#define s_72_37 (s_72_7 + 2)
#define s_72_38 5880
0xCE, 0xB1, 0xCF, 0x83, 0xCE, 0xB1, 0xCE, 0xB9,
#define s_72_39 (s_72_40 + 2)
#define s_72_40 5888
0xCE, 0xB9, 0xCE, 0xB5, 0xCF, 0x83, 0xCE, 0xB1, 0xCE, 0xB9,
#define s_72_41 5898
0xCE, 0xB1, 0xCF, 0x84, 0xCE, 0xB1, 0xCE, 0xB9,
#define s_72_42 (s_72_43 + 2)
#define s_72_43 5906
0xCE, 0xB9, 0xCE, 0xB5, 0xCF, 0x84, 0xCE, 0xB1, 0xCE, 0xB9,
#define s_72_44 (s_72_45 + 2)
#define s_72_45 5916
0xCE, 0xB9, 0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xBD, 0xCF, 0x84, 0xCE, 0xB1, 0xCE, 0xB9,
#define s_72_46 5930
0xCE, 0xBF, 0xCE, 0xBD, 0xCF, 0x84, 0xCE, 0xB1, 0xCE, 0xB9,
#define s_72_47 5940
0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xBC, 0xCE, 0xB1, 0xCE, 0xB9,
#define s_72_48 5950
0xCE, 0xB1, 0xCE, 0xBC, 0xCE, 0xB1, 0xCE, 0xB9,
#define s_72_49 5958
0xCE, 0xB9, 0xCE, 0xB5, 0xCE, 0xBC, 0xCE, 0xB1, 0xCE, 0xB9,
#define s_72_50 5968
0xCE, 0xBF, 0xCE, 0xBC, 0xCE, 0xB1, 0xCE, 0xB9,
#define s_72_51 s_72_7
#define s_72_52 5976
0xCE, 0xB7, 0xCF, 0x83, 0xCE, 0xB5, 0xCE, 0xB9,
#define s_72_53 5984
0xCE, 0xB1, 0xCE, 0xB5, 0xCE, 0xB9,
#define s_72_54 s_72_8
#define s_72_55 5990
0xCE, 0xBF, 0xCE, 0xB9,
#define s_72_56 (s_72_18 + 4)
#define s_72_57 5994
0xCE, 0xB7, 0xCF, 0x83, 0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xBD,
#define s_72_58 s_72_18
#define s_72_59 s_72_19
#define s_72_60 6004
0xCE, 0xB7, 0xCE, 0xB8, 0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xBD,
#define s_72_61 s_72_20
#define s_72_62 s_72_21
#define s_72_63 (s_72_64 + 4)
#define s_72_64 6014
0xCE, 0xB7, 0xCE, 0xB4, 0xCF, 0x89, 0xCE, 0xBD,
#define s_72_65 (s_72_66 + 6)
#define s_72_66 (s_72_67 + 6)
#define s_72_67 (s_72_68 + 2)
#define s_72_68 6022
0xCE, 0xB9, 0xCE, 0xBF, 0xCE, 0xBD, 0xCF, 0x84, 0xCE, 0xBF, 0xCF, 0x85, 0xCF, 0x83, 0xCE, 0xB1, 0xCE, 0xBD,
#define s_72_69 6040
0xCE, 0xB7, 0xCF, 0x83, 0xCE, 0xB1, 0xCE, 0xBD,
#define s_72_70 (s_72_71 + 2)
#define s_72_71 6048
0xCE, 0xB9, 0xCE, 0xBF, 0xCF, 0x83, 0xCE, 0xB1, 0xCF, 0x83, 0xCF, 0x84, 0xCE, 0xB1, 0xCE, 0xBD,
#define s_72_72 (s_72_73 + 2)
#define s_72_73 6064
0xCE, 0xB9, 0xCE, 0xBF, 0xCE, 0xBC, 0xCE, 0xB1, 0xCF, 0x83, 0xCF, 0x84, 0xCE, 0xB1, 0xCE, 0xBD,
#define s_72_74 (s_72_75 + 2)
#define s_72_75 6080
0xCE, 0xB9, 0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xBD, 0xCF, 0x84, 0xCE, 0xB1, 0xCE, 0xBD,
#define s_72_76 (s_72_77 + 2)
#define s_72_77 6094
0xCE, 0xB9, 0xCE, 0xBF, 0xCE, 0xBD, 0xCF, 0x84, 0xCE, 0xB1, 0xCE, 0xBD,
#define s_72_78 (s_72_79 + 2)
#define s_72_79 6106
0xCE, 0xB9, 0xCE, 0xBF, 0xCF, 0x84, 0xCE, 0xB1, 0xCE, 0xBD,
#define s_72_80 6116
0xCE, 0xB1, 0xCE, 0xB3, 0xCE, 0xB1, 0xCE, 0xBD,
#define s_72_81 (s_72_82 + 4)
#define s_72_82 6124
0xCE, 0xB7, 0xCE, 0xB8, 0xCE, 0xB7, 0xCE, 0xBA, 0xCE, 0xB1, 0xCE, 0xBD,
#define s_72_83 s_72_1
#define s_73_0 6136
0xCE, 0xB5, 0xCF, 0x83, 0xCF, 0x84, 0xCE, 0xB5, 0xCF, 0x81,
#define s_73_1 6146
0xCF, 0x85, 0xCF, 0x84, 0xCE, 0xB5, 0xCF, 0x81,
#define s_73_2 6154
0xCF, 0x89, 0xCF, 0x84, 0xCE, 0xB5, 0xCF, 0x81,
#define s_73_3 6162
0xCE, 0xBF, 0xCF, 0x84, 0xCE, 0xB5, 0xCF, 0x81,
#define s_73_4 6170
0xCE, 0xB5, 0xCF, 0x83, 0xCF, 0x84, 0xCE, 0xB1, 0xCF, 0x84,
#define s_73_5 6180
0xCF, 0x85, 0xCF, 0x84, 0xCE, 0xB1, 0xCF, 0x84,
#define s_73_6 6188
0xCF, 0x89, 0xCF, 0x84, 0xCE, 0xB1, 0xCF, 0x84,
#define s_73_7 6196
0xCE, 0xBF, 0xCF, 0x84, 0xCE, 0xB1, 0xCF, 0x84,
};


static const struct among a_0[46] =
{
/*  0 */ { 0, 0, -1, 25},
/*  1 */ { 2, s_0_1, 0, 18},
/*  2 */ { 2, s_0_2, 0, 1},
/*  3 */ { 2, s_0_3, 0, 5},
/*  4 */ { 2, s_0_4, 0, 7},
/*  5 */ { 2, s_0_5, 0, 9},
/*  6 */ { 2, s_0_6, 0, 7},
/*  7 */ { 2, s_0_7, 0, 20},
/*  8 */ { 2, s_0_8, 0, 15},
/*  9 */ { 2, s_0_9, 0, 15},
/* 10 */ { 2, s_0_10, 0, 20},
/* 11 */ { 2, s_0_11, 0, 20},
/* 12 */ { 2, s_0_12, 0, 24},
/* 13 */ { 2, s_0_13, 0, 24},
/* 14 */ { 2, s_0_14, 0, 7},
/* 15 */ { 2, s_0_15, 0, 1},
/* 16 */ { 2, s_0_16, 0, 2},
/* 17 */ { 2, s_0_17, 0, 3},
/* 18 */ { 2, s_0_18, 0, 4},
/* 19 */ { 2, s_0_19, 0, 5},
/* 20 */ { 2, s_0_20, 0, 6},
/* 21 */ { 2, s_0_21, 0, 7},
/* 22 */ { 2, s_0_22, 0, 8},
/* 23 */ { 2, s_0_23, 0, 9},
/* 24 */ { 2, s_0_24, 0, 10},
/* 25 */ { 2, s_0_25, 0, 11},
/* 26 */ { 2, s_0_26, 0, 12},
/* 27 */ { 2, s_0_27, 0, 13},
/* 28 */ { 2, s_0_28, 0, 14},
/* 29 */ { 2, s_0_29, 0, 15},
/* 30 */ { 2, s_0_30, 0, 16},
/* 31 */ { 2, s_0_31, 0, 17},
/* 32 */ { 2, s_0_32, 0, 18},
/* 33 */ { 2, s_0_33, 0, 19},
/* 34 */ { 2, s_0_34, 0, 20},
/* 35 */ { 2, s_0_35, 0, 21},
/* 36 */ { 2, s_0_36, 0, 22},
/* 37 */ { 2, s_0_37, 0, 23},
/* 38 */ { 2, s_0_38, 0, 24},
/* 39 */ { 2, s_0_39, 0, 9},
/* 40 */ { 2, s_0_40, 0, 20},
/* 41 */ { 2, s_0_41, 0, 1},
/* 42 */ { 2, s_0_42, 0, 5},
/* 43 */ { 2, s_0_43, 0, 7},
/* 44 */ { 2, s_0_44, 0, 9},
/* 45 */ { 2, s_0_45, 0, 20}
};


static const struct among a_1[40] =
{
/*  0 */ { 16, s_1_0, -1, 10},
/*  1 */ { 6, s_1_1, -1, 9},
/*  2 */ { 10, s_1_2, -1, 7},
/*  3 */ { 10, s_1_3, -1, 8},
/*  4 */ { 10, s_1_4, -1, 6},
/*  5 */ { 20, s_1_5, -1, 10},
/*  6 */ { 10, s_1_6, -1, 9},
/*  7 */ { 14, s_1_7, -1, 7},
/*  8 */ { 14, s_1_8, -1, 8},
/*  9 */ { 14, s_1_9, -1, 6},
/* 10 */ { 18, s_1_10, -1, 11},
/* 11 */ { 14, s_1_11, -1, 11},
/* 12 */ { 12, s_1_12, -1, 1},
/* 13 */ { 14, s_1_13, -1, 2},
/* 14 */ { 12, s_1_14, -1, 4},
/* 15 */ { 16, s_1_15, -1, 5},
/* 16 */ { 14, s_1_16, -1, 3},
/* 17 */ { 18, s_1_17, -1, 10},
/* 18 */ { 8, s_1_18, -1, 9},
/* 19 */ { 12, s_1_19, -1, 7},
/* 20 */ { 12, s_1_20, -1, 8},
/* 21 */ { 12, s_1_21, -1, 6},
/* 22 */ { 16, s_1_22, -1, 11},
/* 23 */ { 10, s_1_23, -1, 1},
/* 24 */ { 12, s_1_24, -1, 2},
/* 25 */ { 10, s_1_25, -1, 4},
/* 26 */ { 14, s_1_26, -1, 5},
/* 27 */ { 12, s_1_27, -1, 3},
/* 28 */ { 12, s_1_28, -1, 7},
/* 29 */ { 20, s_1_29, -1, 10},
/* 30 */ { 10, s_1_30, -1, 9},
/* 31 */ { 14, s_1_31, -1, 7},
/* 32 */ { 14, s_1_32, -1, 8},
/* 33 */ { 14, s_1_33, -1, 6},
/* 34 */ { 18, s_1_34, -1, 11},
/* 35 */ { 12, s_1_35, -1, 1},
/* 36 */ { 14, s_1_36, -1, 2},
/* 37 */ { 12, s_1_37, -1, 4},
/* 38 */ { 16, s_1_38, -1, 5},
/* 39 */ { 14, s_1_39, -1, 3}
};


static const struct among a_2[9] =
{
/*  0 */ { 4, s_2_0, -1, 1},
/*  1 */ { 12, s_2_1, 0, 1},
/*  2 */ { 6, s_2_2, 0, 1},
/*  3 */ { 12, s_2_3, 0, 1},
/*  4 */ { 12, s_2_4, 0, 1},
/*  5 */ { 8, s_2_5, 0, 1},
/*  6 */ { 8, s_2_6, -1, 1},
/*  7 */ { 8, s_2_7, -1, 1},
/*  8 */ { 14, s_2_8, 7, 1}
};


static const struct among a_3[22] =
{
/*  0 */ { 2, s_3_0, -1, 1},
/*  1 */ { 6, s_3_1, 0, 1},
/*  2 */ { 2, s_3_2, -1, 1},
/*  3 */ { 4, s_3_3, 2, 1},
/*  4 */ { 6, s_3_4, 3, 1},
/*  5 */ { 6, s_3_5, 2, 1},
/*  6 */ { 12, s_3_6, 2, 1},
/*  7 */ { 10, s_3_7, 2, 1},
/*  8 */ { 10, s_3_8, 2, 1},
/*  9 */ { 6, s_3_9, 2, 1},
/* 10 */ { 6, s_3_10, 2, 1},
/* 11 */ { 14, s_3_11, 2, 1},
/* 12 */ { 12, s_3_12, 2, 1},
/* 13 */ { 12, s_3_13, 2, 1},
/* 14 */ { 6, s_3_14, -1, 1},
/* 15 */ { 2, s_3_15, -1, 1},
/* 16 */ { 12, s_3_16, -1, 1},
/* 17 */ { 8, s_3_17, -1, 1},
/* 18 */ { 8, s_3_18, -1, 1},
/* 19 */ { 2, s_3_19, -1, 1},
/* 20 */ { 2, s_3_20, -1, 1},
/* 21 */ { 8, s_3_21, -1, 1}
};


static const struct among a_4[14] =
{
/*  0 */ { 8, s_4_0, -1, 1},
/*  1 */ { 10, s_4_1, -1, 1},
/*  2 */ { 6, s_4_2, -1, 1},
/*  3 */ { 6, s_4_3, -1, 1},
/*  4 */ { 10, s_4_4, -1, 1},
/*  5 */ { 10, s_4_5, -1, 1},
/*  6 */ { 6, s_4_6, -1, 1},
/*  7 */ { 12, s_4_7, -1, 1},
/*  8 */ { 10, s_4_8, -1, 1},
/*  9 */ { 12, s_4_9, -1, 1},
/* 10 */ { 10, s_4_10, -1, 1},
/* 11 */ { 8, s_4_11, -1, 1},
/* 12 */ { 10, s_4_12, -1, 1},
/* 13 */ { 8, s_4_13, -1, 1}
};


static const struct among a_5[8] =
{
/*  0 */ { 2, s_5_0, -1, 1},
/*  1 */ { 2, s_5_1, -1, 1},
/*  2 */ { 4, s_5_2, -1, 1},
/*  3 */ { 4, s_5_3, -1, 1},
/*  4 */ { 4, s_5_4, -1, 1},
/*  5 */ { 4, s_5_5, -1, 1},
/*  6 */ { 4, s_5_6, -1, 1},
/*  7 */ { 4, s_5_7, -1, 1}
};


static const struct among a_6[7] =
{
/*  0 */ { 12, s_6_0, -1, 1},
/*  1 */ { 10, s_6_1, -1, 1},
/*  2 */ { 14, s_6_2, -1, 1},
/*  3 */ { 10, s_6_3, -1, 1},
/*  4 */ { 14, s_6_4, -1, 1},
/*  5 */ { 14, s_6_5, -1, 1},
/*  6 */ { 12, s_6_6, -1, 1}
};


static const struct among a_7[19] =
{
/*  0 */ { 12, s_7_0, -1, 1},
/*  1 */ { 6, s_7_1, -1, 1},
/*  2 */ { 12, s_7_2, -1, 1},
/*  3 */ { 12, s_7_3, -1, 1},
/*  4 */ { 8, s_7_4, -1, 1},
/*  5 */ { 14, s_7_5, -1, 1},
/*  6 */ { 12, s_7_6, -1, 1},
/*  7 */ { 4, s_7_7, -1, 1},
/*  8 */ { 6, s_7_8, 7, 1},
/*  9 */ { 12, s_7_9, 8, 1},
/* 10 */ { 6, s_7_10, -1, 1},
/* 11 */ { 6, s_7_11, -1, 1},
/* 12 */ { 12, s_7_12, 11, 1},
/* 13 */ { 8, s_7_13, 11, 1},
/* 14 */ { 12, s_7_14, 13, 1},
/* 15 */ { 12, s_7_15, 11, 1},
/* 16 */ { 8, s_7_16, -1, 1},
/* 17 */ { 8, s_7_17, -1, 1},
/* 18 */ { 14, s_7_18, 17, 1}
};


static const struct among a_8[13] =
{
/*  0 */ { 2, s_8_0, -1, 1},
/*  1 */ { 6, s_8_1, -1, 1},
/*  2 */ { 16, s_8_2, -1, 1},
/*  3 */ { 4, s_8_3, -1, 1},
/*  4 */ { 18, s_8_4, 3, 1},
/*  5 */ { 4, s_8_5, -1, 1},
/*  6 */ { 6, s_8_6, -1, 1},
/*  7 */ { 4, s_8_7, -1, 1},
/*  8 */ { 2, s_8_8, -1, 1},
/*  9 */ { 12, s_8_9, 8, 1},
/* 10 */ { 6, s_8_10, 8, 1},
/* 11 */ { 4, s_8_11, -1, 1},
/* 12 */ { 6, s_8_12, -1, 1}
};


static const struct among a_9[7] =
{
/*  0 */ { 8, s_9_0, -1, 1},
/*  1 */ { 6, s_9_1, -1, 1},
/*  2 */ { 6, s_9_2, -1, 1},
/*  3 */ { 10, s_9_3, -1, 1},
/*  4 */ { 10, s_9_4, -1, 1},
/*  5 */ { 10, s_9_5, -1, 1},
/*  6 */ { 8, s_9_6, -1, 1}
};


static const struct among a_10[19] =
{
/*  0 */ { 12, s_10_0, -1, 1},
/*  1 */ { 6, s_10_1, -1, 1},
/*  2 */ { 12, s_10_2, -1, 1},
/*  3 */ { 12, s_10_3, -1, 1},
/*  4 */ { 8, s_10_4, -1, 1},
/*  5 */ { 14, s_10_5, -1, 1},
/*  6 */ { 12, s_10_6, -1, 1},
/*  7 */ { 4, s_10_7, -1, 1},
/*  8 */ { 6, s_10_8, 7, 1},
/*  9 */ { 12, s_10_9, 8, 1},
/* 10 */ { 6, s_10_10, -1, 1},
/* 11 */ { 6, s_10_11, -1, 1},
/* 12 */ { 12, s_10_12, 11, 1},
/* 13 */ { 8, s_10_13, 11, 1},
/* 14 */ { 12, s_10_14, 13, 1},
/* 15 */ { 12, s_10_15, 11, 1},
/* 16 */ { 8, s_10_16, -1, 1},
/* 17 */ { 8, s_10_17, -1, 1},
/* 18 */ { 14, s_10_18, 17, 1}
};


static const struct among a_11[7] =
{
/*  0 */ { 10, s_11_0, -1, 1},
/*  1 */ { 6, s_11_1, -1, 1},
/*  2 */ { 10, s_11_2, -1, 1},
/*  3 */ { 12, s_11_3, -1, 1},
/*  4 */ { 12, s_11_4, -1, 1},
/*  5 */ { 8, s_11_5, -1, 1},
/*  6 */ { 10, s_11_6, -1, 1}
};


static const struct among a_12[7] =
{
/*  0 */ { 4, s_12_0, -1, 1},
/*  1 */ { 6, s_12_1, 0, 1},
/*  2 */ { 6, s_12_2, -1, 1},
/*  3 */ { 6, s_12_3, -1, 1},
/*  4 */ { 12, s_12_4, 3, 1},
/*  5 */ { 8, s_12_5, -1, 1},
/*  6 */ { 14, s_12_6, -1, 1}
};


static const struct among a_13[33] =
{
/*  0 */ { 2, s_13_0, -1, 1},
/*  1 */ { 6, s_13_1, 0, 1},
/*  2 */ { 4, s_13_2, 0, 1},
/*  3 */ { 6, s_13_3, 0, 1},
/*  4 */ { 6, s_13_4, -1, 1},
/*  5 */ { 4, s_13_5, -1, 1},
/*  6 */ { 6, s_13_6, -1, 1},
/*  7 */ { 4, s_13_7, -1, 1},
/*  8 */ { 6, s_13_8, -1, 1},
/*  9 */ { 4, s_13_9, -1, 1},
/* 10 */ { 6, s_13_10, 9, 1},
/* 11 */ { 4, s_13_11, -1, 1},
/* 12 */ { 6, s_13_12, 11, 1},
/* 13 */ { 4, s_13_13, -1, 1},
/* 14 */ { 6, s_13_14, 13, 1},
/* 15 */ { 6, s_13_15, -1, 1},
/* 16 */ { 4, s_13_16, -1, 1},
/* 17 */ { 6, s_13_17, -1, 1},
/* 18 */ { 4, s_13_18, -1, 1},
/* 19 */ { 6, s_13_19, 18, 1},
/* 20 */ { 6, s_13_20, -1, 1},
/* 21 */ { 6, s_13_21, -1, 1},
/* 22 */ { 4, s_13_22, -1, 1},
/* 23 */ { 6, s_13_23, -1, 1},
/* 24 */ { 6, s_13_24, -1, 1},
/* 25 */ { 4, s_13_25, -1, 1},
/* 26 */ { 6, s_13_26, -1, 1},
/* 27 */ { 6, s_13_27, -1, 1},
/* 28 */ { 6, s_13_28, -1, 1},
/* 29 */ { 6, s_13_29, -1, 1},
/* 30 */ { 2, s_13_30, -1, 1},
/* 31 */ { 6, s_13_31, 30, 1},
/* 32 */ { 6, s_13_32, -1, 1}
};


static const struct among a_14[11] =
{
/*  0 */ { 12, s_14_0, -1, 1},
/*  1 */ { 10, s_14_1, -1, 1},
/*  2 */ { 10, s_14_2, -1, 1},
/*  3 */ { 10, s_14_3, -1, 1},
/*  4 */ { 10, s_14_4, -1, 1},
/*  5 */ { 8, s_14_5, -1, 1},
/*  6 */ { 8, s_14_6, -1, 1},
/*  7 */ { 8, s_14_7, -1, 1},
/*  8 */ { 10, s_14_8, -1, 1},
/*  9 */ { 10, s_14_9, -1, 1},
/* 10 */ { 8, s_14_10, -1, 1}
};


static const struct among a_15[5] =
{
/*  0 */ { 4, s_15_0, -1, 1},
/*  1 */ { 12, s_15_1, 0, 1},
/*  2 */ { 14, s_15_2, 0, 1},
/*  3 */ { 10, s_15_3, -1, 1},
/*  4 */ { 12, s_15_4, -1, 1}
};


static const struct among a_16[2] =
{
/*  0 */ { 8, s_16_0, -1, 1},
/*  1 */ { 16, s_16_1, 0, 1}
};


static const struct among a_17[10] =
{
/*  0 */ { 10, s_17_0, -1, 7},
/*  1 */ { 14, s_17_1, -1, 6},
/*  2 */ { 14, s_17_2, -1, 3},
/*  3 */ { 16, s_17_3, 2, 1},
/*  4 */ { 16, s_17_4, -1, 5},
/*  5 */ { 12, s_17_5, -1, 2},
/*  6 */ { 10, s_17_6, -1, 4},
/*  7 */ { 14, s_17_7, -1, 10},
/*  8 */ { 20, s_17_8, -1, 8},
/*  9 */ { 16, s_17_9, -1, 9}
};


static const struct among a_18[6] =
{
/*  0 */ { 12, s_18_0, -1, 1},
/*  1 */ { 10, s_18_1, -1, 1},
/*  2 */ { 10, s_18_2, -1, 1},
/*  3 */ { 10, s_18_3, -1, 1},
/*  4 */ { 10, s_18_4, -1, 1},
/*  5 */ { 8, s_18_5, -1, 1}
};


static const struct among a_19[2] =
{
/*  0 */ { 2, s_19_0, -1, 1},
/*  1 */ { 2, s_19_1, -1, 1}
};


static const struct among a_20[4] =
{
/*  0 */ { 12, s_20_0, -1, 1},
/*  1 */ { 14, s_20_1, -1, 1},
/*  2 */ { 10, s_20_2, -1, 1},
/*  3 */ { 12, s_20_3, -1, 1}
};


static const struct among a_21[33] =
{
/*  0 */ { 12, s_21_0, -1, 1},
/*  1 */ { 2, s_21_1, -1, 1},
/*  2 */ { 4, s_21_2, 1, 1},
/*  3 */ { 8, s_21_3, 2, 1},
/*  4 */ { 8, s_21_4, 2, 1},
/*  5 */ { 6, s_21_5, 1, 1},
/*  6 */ { 8, s_21_6, 1, 1},
/*  7 */ { 6, s_21_7, 1, 1},
/*  8 */ { 2, s_21_8, -1, 1},
/*  9 */ { 12, s_21_9, 8, 1},
/* 10 */ { 10, s_21_10, -1, 1},
/* 11 */ { 4, s_21_11, -1, 1},
/* 12 */ { 2, s_21_12, -1, 1},
/* 13 */ { 4, s_21_13, 12, 1},
/* 14 */ { 10, s_21_14, 13, 1},
/* 15 */ { 2, s_21_15, -1, 1},
/* 16 */ { 8, s_21_16, -1, 1},
/* 17 */ { 8, s_21_17, -1, 1},
/* 18 */ { 18, s_21_18, 17, 1},
/* 19 */ { 4, s_21_19, -1, 1},
/* 20 */ { 2, s_21_20, -1, 1},
/* 21 */ { 4, s_21_21, 20, 1},
/* 22 */ { 10, s_21_22, 20, 1},
/* 23 */ { 6, s_21_23, 20, 1},
/* 24 */ { 4, s_21_24, -1, 1},
/* 25 */ { 6, s_21_25, -1, 1},
/* 26 */ { 8, s_21_26, -1, 1},
/* 27 */ { 6, s_21_27, -1, 1},
/* 28 */ { 8, s_21_28, -1, 1},
/* 29 */ { 8, s_21_29, -1, 1},
/* 30 */ { 8, s_21_30, -1, 1},
/* 31 */ { 8, s_21_31, -1, 1},
/* 32 */ { 6, s_21_32, -1, 1}
};


static const struct among a_22[15] =
{
/*  0 */ { 2, s_22_0, -1, 1},
/*  1 */ { 10, s_22_1, -1, 1},
/*  2 */ { 6, s_22_2, -1, 1},
/*  3 */ { 6, s_22_3, -1, 1},
/*  4 */ { 2, s_22_4, -1, 1},
/*  5 */ { 8, s_22_5, -1, 1},
/*  6 */ { 2, s_22_6, -1, 1},
/*  7 */ { 4, s_22_7, -1, 1},
/*  8 */ { 6, s_22_8, -1, 1},
/*  9 */ { 4, s_22_9, -1, 1},
/* 10 */ { 12, s_22_10, -1, 1},
/* 11 */ { 12, s_22_11, -1, 1},
/* 12 */ { 8, s_22_12, -1, 1},
/* 13 */ { 14, s_22_13, -1, 1},
/* 14 */ { 6, s_22_14, -1, 1}
};


static const struct among a_23[8] =
{
/*  0 */ { 10, s_23_0, -1, 1},
/*  1 */ { 10, s_23_1, -1, 1},
/*  2 */ { 8, s_23_2, -1, 1},
/*  3 */ { 8, s_23_3, -1, 1},
/*  4 */ { 12, s_23_4, 3, 1},
/*  5 */ { 6, s_23_5, -1, 1},
/*  6 */ { 10, s_23_6, 5, 1},
/*  7 */ { 10, s_23_7, -1, 1}
};


static const struct among a_24[4] =
{
/*  0 */ { 4, s_24_0, -1, 1},
/*  1 */ { 6, s_24_1, -1, 1},
/*  2 */ { 8, s_24_2, -1, 1},
/*  3 */ { 6, s_24_3, -1, 1}
};


static const struct among a_25[2] =
{
/*  0 */ { 2, s_25_0, -1, 1},
/*  1 */ { 10, s_25_1, -1, 1}
};


static const struct among a_26[3] =
{
/*  0 */ { 8, s_26_0, -1, 1},
/*  1 */ { 10, s_26_1, -1, 1},
/*  2 */ { 8, s_26_2, -1, 1}
};


static const struct among a_27[7] =
{
/*  0 */ { 2, s_27_0, -1, 1},
/*  1 */ { 4, s_27_1, -1, 1},
/*  2 */ { 2, s_27_2, -1, 1},
/*  3 */ { 6, s_27_3, -1, 1},
/*  4 */ { 10, s_27_4, -1, 1},
/*  5 */ { 8, s_27_5, -1, 1},
/*  6 */ { 6, s_27_6, -1, 1}
};


static const struct among a_28[4] =
{
/*  0 */ { 10, s_28_0, -1, 1},
/*  1 */ { 10, s_28_1, -1, 1},
/*  2 */ { 8, s_28_2, -1, 1},
/*  3 */ { 8, s_28_3, -1, 1}
};


static const struct among a_29[2] =
{
/*  0 */ { 8, s_29_0, -1, 1},
/*  1 */ { 8, s_29_1, -1, 1}
};


static const struct among a_30[10] =
{
/*  0 */ { 10, s_30_0, -1, -1},
/*  1 */ { 6, s_30_1, -1, -1},
/*  2 */ { 10, s_30_2, -1, -1},
/*  3 */ { 10, s_30_3, -1, -1},
/*  4 */ { 10, s_30_4, -1, -1},
/*  5 */ { 10, s_30_5, -1, -1},
/*  6 */ { 6, s_30_6, -1, -1},
/*  7 */ { 4, s_30_7, -1, -1},
/*  8 */ { 6, s_30_8, -1, -1},
/*  9 */ { 6, s_30_9, -1, -1}
};


static const struct among a_31[2] =
{
/*  0 */ { 8, s_31_0, -1, 1},
/*  1 */ { 8, s_31_1, -1, 1}
};


static const struct among a_32[8] =
{
/*  0 */ { 10, s_32_0, -1, 1},
/*  1 */ { 4, s_32_1, -1, 1},
/*  2 */ { 6, s_32_2, -1, 1},
/*  3 */ { 6, s_32_3, -1, 1},
/*  4 */ { 4, s_32_4, -1, 1},
/*  5 */ { 6, s_32_5, -1, 1},
/*  6 */ { 4, s_32_6, -1, 1},
/*  7 */ { 6, s_32_7, -1, 1}
};


static const struct among a_33[2] =
{
/*  0 */ { 10, s_33_0, -1, 1},
/*  1 */ { 10, s_33_1, -1, 1}
};


static const struct among a_34[15] =
{
/*  0 */ { 4, s_34_0, -1, 1},
/*  1 */ { 4, s_34_1, -1, 1},
/*  2 */ { 2, s_34_2, -1, 1},
/*  3 */ { 6, s_34_3, -1, 1},
/*  4 */ { 8, s_34_4, -1, 1},
/*  5 */ { 4, s_34_5, -1, 1},
/*  6 */ { 6, s_34_6, -1, 1},
/*  7 */ { 4, s_34_7, -1, 1},
/*  8 */ { 12, s_34_8, -1, 1},
/*  9 */ { 8, s_34_9, -1, 1},
/* 10 */ { 4, s_34_10, -1, 1},
/* 11 */ { 10, s_34_11, -1, 1},
/* 12 */ { 6, s_34_12, -1, 1},
/* 13 */ { 4, s_34_13, -1, 1},
/* 14 */ { 8, s_34_14, -1, 1}
};


static const struct among a_35[2] =
{
/*  0 */ { 6, s_35_0, -1, 1},
/*  1 */ { 6, s_35_1, -1, 1}
};


static const struct among a_36[8] =
{
/*  0 */ { 2, s_36_0, -1, 1},
/*  1 */ { 6, s_36_1, -1, 1},
/*  2 */ { 2, s_36_2, -1, 1},
/*  3 */ { 4, s_36_3, 2, 1},
/*  4 */ { 2, s_36_4, -1, 1},
/*  5 */ { 6, s_36_5, -1, 1},
/*  6 */ { 4, s_36_6, -1, 1},
/*  7 */ { 2, s_36_7, -1, 1}
};


static const struct among a_37[3] =
{
/*  0 */ { 6, s_37_0, -1, 1},
/*  1 */ { 4, s_37_1, -1, 1},
/*  2 */ { 6, s_37_2, -1, 1}
};


static const struct among a_38[4] =
{
/*  0 */ { 8, s_38_0, -1, 1},
/*  1 */ { 6, s_38_1, -1, 1},
/*  2 */ { 8, s_38_2, -1, 1},
/*  3 */ { 6, s_38_3, -1, 1}
};


static const struct among a_39[36] =
{
/*  0 */ { 8, s_39_0, -1, 1},
/*  1 */ { 6, s_39_1, -1, 1},
/*  2 */ { 12, s_39_2, -1, 1},
/*  3 */ { 8, s_39_3, -1, 1},
/*  4 */ { 8, s_39_4, -1, 1},
/*  5 */ { 6, s_39_5, -1, 1},
/*  6 */ { 6, s_39_6, -1, 1},
/*  7 */ { 8, s_39_7, -1, 1},
/*  8 */ { 8, s_39_8, -1, 1},
/*  9 */ { 14, s_39_9, -1, 1},
/* 10 */ { 6, s_39_10, -1, 1},
/* 11 */ { 12, s_39_11, -1, 1},
/* 12 */ { 8, s_39_12, -1, 1},
/* 13 */ { 4, s_39_13, -1, 1},
/* 14 */ { 10, s_39_14, 13, 1},
/* 15 */ { 10, s_39_15, 13, 1},
/* 16 */ { 10, s_39_16, -1, 1},
/* 17 */ { 6, s_39_17, -1, 1},
/* 18 */ { 8, s_39_18, -1, 1},
/* 19 */ { 12, s_39_19, -1, 1},
/* 20 */ { 10, s_39_20, -1, 1},
/* 21 */ { 4, s_39_21, -1, 1},
/* 22 */ { 8, s_39_22, 21, 1},
/* 23 */ { 6, s_39_23, -1, 1},
/* 24 */ { 8, s_39_24, -1, 1},
/* 25 */ { 4, s_39_25, -1, 1},
/* 26 */ { 14, s_39_26, 25, 1},
/* 27 */ { 14, s_39_27, -1, 1},
/* 28 */ { 8, s_39_28, -1, 1},
/* 29 */ { 8, s_39_29, -1, 1},
/* 30 */ { 8, s_39_30, -1, 1},
/* 31 */ { 8, s_39_31, -1, 1},
/* 32 */ { 8, s_39_32, -1, 1},
/* 33 */ { 12, s_39_33, -1, 1},
/* 34 */ { 14, s_39_34, -1, 1},
/* 35 */ { 10, s_39_35, -1, 1}
};


static const struct among a_40[5] =
{
/*  0 */ { 12, s_40_0, -1, 1},
/*  1 */ { 10, s_40_1, -1, 1},
/*  2 */ { 10, s_40_2, -1, 1},
/*  3 */ { 10, s_40_3, -1, 1},
/*  4 */ { 14, s_40_4, 3, 1}
};


static const struct among a_41[12] =
{
/*  0 */ { 8, s_41_0, -1, 1},
/*  1 */ { 8, s_41_1, -1, 1},
/*  2 */ { 10, s_41_2, -1, 1},
/*  3 */ { 6, s_41_3, -1, 1},
/*  4 */ { 2, s_41_4, -1, 1},
/*  5 */ { 6, s_41_5, 4, 1},
/*  6 */ { 8, s_41_6, -1, 1},
/*  7 */ { 6, s_41_7, -1, 1},
/*  8 */ { 6, s_41_8, -1, 1},
/*  9 */ { 8, s_41_9, -1, 1},
/* 10 */ { 8, s_41_10, -1, 1},
/* 11 */ { 6, s_41_11, -1, 1}
};


static const struct among a_42[2] =
{
/*  0 */ { 4, s_42_0, -1, 1},
/*  1 */ { 4, s_42_1, -1, 1}
};


static const struct among a_43[11] =
{
/*  0 */ { 12, s_43_0, -1, 1},
/*  1 */ { 10, s_43_1, -1, 1},
/*  2 */ { 14, s_43_2, -1, 1},
/*  3 */ { 16, s_43_3, 2, 1},
/*  4 */ { 12, s_43_4, -1, 1},
/*  5 */ { 14, s_43_5, 4, 1},
/*  6 */ { 10, s_43_6, -1, 1},
/*  7 */ { 12, s_43_7, 6, 1},
/*  8 */ { 10, s_43_8, -1, 1},
/*  9 */ { 10, s_43_9, -1, 1},
/* 10 */ { 14, s_43_10, 9, 1}
};


static const struct among a_44[95] =
{
/*  0 */ { 2, s_44_0, -1, 1},
/*  1 */ { 4, s_44_1, 0, 1},
/*  2 */ { 14, s_44_2, 0, 1},
/*  3 */ { 8, s_44_3, 0, 1},
/*  4 */ { 18, s_44_4, 0, 1},
/*  5 */ { 8, s_44_5, 0, 1},
/*  6 */ { 6, s_44_6, 0, 1},
/*  7 */ { 12, s_44_7, 6, 1},
/*  8 */ { 12, s_44_8, -1, 1},
/*  9 */ { 6, s_44_9, -1, 1},
/* 10 */ { 4, s_44_10, -1, 1},
/* 11 */ { 10, s_44_11, 10, 1},
/* 12 */ { 6, s_44_12, 10, 1},
/* 13 */ { 12, s_44_13, -1, 1},
/* 14 */ { 12, s_44_14, -1, 1},
/* 15 */ { 2, s_44_15, -1, 1},
/* 16 */ { 16, s_44_16, 15, 1},
/* 17 */ { 6, s_44_17, 15, 1},
/* 18 */ { 6, s_44_18, 15, 1},
/* 19 */ { 10, s_44_19, 15, 1},
/* 20 */ { 8, s_44_20, -1, 1},
/* 21 */ { 8, s_44_21, -1, 1},
/* 22 */ { 8, s_44_22, -1, 1},
/* 23 */ { 14, s_44_23, -1, 1},
/* 24 */ { 6, s_44_24, -1, 1},
/* 25 */ { 12, s_44_25, -1, 1},
/* 26 */ { 10, s_44_26, -1, 1},
/* 27 */ { 8, s_44_27, -1, 1},
/* 28 */ { 10, s_44_28, -1, 1},
/* 29 */ { 2, s_44_29, -1, 1},
/* 30 */ { 14, s_44_30, 29, 1},
/* 31 */ { 14, s_44_31, 29, 1},
/* 32 */ { 6, s_44_32, 29, 1},
/* 33 */ { 8, s_44_33, 29, 1},
/* 34 */ { 8, s_44_34, 29, 1},
/* 35 */ { 16, s_44_35, 34, 1},
/* 36 */ { 10, s_44_36, 29, 1},
/* 37 */ { 12, s_44_37, 36, 1},
/* 38 */ { 2, s_44_38, -1, 1},
/* 39 */ { 14, s_44_39, 38, 1},
/* 40 */ { 8, s_44_40, 38, 1},
/* 41 */ { 12, s_44_41, 38, 1},
/* 42 */ { 22, s_44_42, 41, 1},
/* 43 */ { 22, s_44_43, 41, 1},
/* 44 */ { 22, s_44_44, 41, 1},
/* 45 */ { 6, s_44_45, 38, 1},
/* 46 */ { 6, s_44_46, -1, 1},
/* 47 */ { 8, s_44_47, 46, 1},
/* 48 */ { 14, s_44_48, 46, 1},
/* 49 */ { 6, s_44_49, -1, 1},
/* 50 */ { 8, s_44_50, 49, 1},
/* 51 */ { 16, s_44_51, 50, 1},
/* 52 */ { 2, s_44_52, -1, 1},
/* 53 */ { 10, s_44_53, 52, 1},
/* 54 */ { 10, s_44_54, 52, 1},
/* 55 */ { 4, s_44_55, 52, 1},
/* 56 */ { 8, s_44_56, 55, 1},
/* 57 */ { 8, s_44_57, 55, 1},
/* 58 */ { 10, s_44_58, 52, 1},
/* 59 */ { 12, s_44_59, 58, 1},
/* 60 */ { 10, s_44_60, 52, 1},
/* 61 */ { 8, s_44_61, 52, 1},
/* 62 */ { 8, s_44_62, 52, 1},
/* 63 */ { 6, s_44_63, 52, 1},
/* 64 */ { 14, s_44_64, -1, 1},
/* 65 */ { 2, s_44_65, -1, 1},
/* 66 */ { 12, s_44_66, 65, 1},
/* 67 */ { 6, s_44_67, 65, 1},
/* 68 */ { 8, s_44_68, 67, 1},
/* 69 */ { 8, s_44_69, -1, 1},
/* 70 */ { 12, s_44_70, -1, 1},
/* 71 */ { 6, s_44_71, -1, 1},
/* 72 */ { 10, s_44_72, -1, 1},
/* 73 */ { 4, s_44_73, -1, 1},
/* 74 */ { 8, s_44_74, 73, 1},
/* 75 */ { 10, s_44_75, -1, 1},
/* 76 */ { 4, s_44_76, -1, 1},
/* 77 */ { 8, s_44_77, 76, 1},
/* 78 */ { 12, s_44_78, 76, 1},
/* 79 */ { 10, s_44_79, 76, 1},
/* 80 */ { 6, s_44_80, -1, 1},
/* 81 */ { 6, s_44_81, -1, 1},
/* 82 */ { 14, s_44_82, 81, 1},
/* 83 */ { 14, s_44_83, 81, 1},
/* 84 */ { 12, s_44_84, 81, 1},
/* 85 */ { 12, s_44_85, -1, 1},
/* 86 */ { 6, s_44_86, -1, 1},
/* 87 */ { 12, s_44_87, -1, 1},
/* 88 */ { 2, s_44_88, -1, 1},
/* 89 */ { 14, s_44_89, 88, 1},
/* 90 */ { 10, s_44_90, 88, 1},
/* 91 */ { 16, s_44_91, 88, 1},
/* 92 */ { 16, s_44_92, 88, 1},
/* 93 */ { 2, s_44_93, -1, 1},
/* 94 */ { 16, s_44_94, 93, 1}
};


static const struct among a_45[1] =
{
/*  0 */ { 10, s_45_0, -1, 1}
};


static const struct among a_46[31] =
{
/*  0 */ { 6, s_46_0, -1, 1},
/*  1 */ { 6, s_46_1, -1, 1},
/*  2 */ { 6, s_46_2, -1, 1},
/*  3 */ { 6, s_46_3, -1, 1},
/*  4 */ { 4, s_46_4, -1, 1},
/*  5 */ { 6, s_46_5, -1, 1},
/*  6 */ { 6, s_46_6, -1, 1},
/*  7 */ { 6, s_46_7, -1, 1},
/*  8 */ { 4, s_46_8, -1, 1},
/*  9 */ { 8, s_46_9, -1, 1},
/* 10 */ { 6, s_46_10, -1, 1},
/* 11 */ { 4, s_46_11, -1, 1},
/* 12 */ { 10, s_46_12, -1, 1},
/* 13 */ { 4, s_46_13, -1, 1},
/* 14 */ { 6, s_46_14, -1, 1},
/* 15 */ { 6, s_46_15, -1, 1},
/* 16 */ { 6, s_46_16, -1, 1},
/* 17 */ { 8, s_46_17, -1, 1},
/* 18 */ { 6, s_46_18, -1, 1},
/* 19 */ { 6, s_46_19, -1, 1},
/* 20 */ { 6, s_46_20, -1, 1},
/* 21 */ { 8, s_46_21, -1, 1},
/* 22 */ { 6, s_46_22, -1, 1},
/* 23 */ { 6, s_46_23, -1, 1},
/* 24 */ { 6, s_46_24, -1, 1},
/* 25 */ { 8, s_46_25, -1, 1},
/* 26 */ { 6, s_46_26, -1, 1},
/* 27 */ { 6, s_46_27, -1, 1},
/* 28 */ { 6, s_46_28, -1, 1},
/* 29 */ { 6, s_46_29, -1, 1},
/* 30 */ { 6, s_46_30, -1, 1}
};


static const struct among a_47[25] =
{
/*  0 */ { 8, s_47_0, -1, 1},
/*  1 */ { 6, s_47_1, -1, 1},
/*  2 */ { 8, s_47_2, -1, 1},
/*  3 */ { 6, s_47_3, -1, 1},
/*  4 */ { 8, s_47_4, -1, 1},
/*  5 */ { 8, s_47_5, -1, 1},
/*  6 */ { 6, s_47_6, -1, 1},
/*  7 */ { 8, s_47_7, -1, 1},
/*  8 */ { 2, s_47_8, -1, 1},
/*  9 */ { 8, s_47_9, -1, 1},
/* 10 */ { 6, s_47_10, -1, 1},
/* 11 */ { 6, s_47_11, -1, 1},
/* 12 */ { 2, s_47_12, -1, 1},
/* 13 */ { 4, s_47_13, 12, 1},
/* 14 */ { 2, s_47_14, -1, 1},
/* 15 */ { 4, s_47_15, 14, 1},
/* 16 */ { 4, s_47_16, -1, 1},
/* 17 */ { 6, s_47_17, -1, 1},
/* 18 */ { 6, s_47_18, -1, 1},
/* 19 */ { 14, s_47_19, -1, 1},
/* 20 */ { 8, s_47_20, -1, 1},
/* 21 */ { 4, s_47_21, -1, 1},
/* 22 */ { 4, s_47_22, -1, 1},
/* 23 */ { 6, s_47_23, -1, 1},
/* 24 */ { 10, s_47_24, -1, 1}
};


static const struct among a_48[2] =
{
/*  0 */ { 10, s_48_0, -1, 1},
/*  1 */ { 10, s_48_1, -1, 1}
};


static const struct among a_49[2] =
{
/*  0 */ { 12, s_49_0, -1, 1},
/*  1 */ { 14, s_49_1, 0, 1}
};


static const struct among a_50[6] =
{
/*  0 */ { 2, s_50_0, -1, 1},
/*  1 */ { 4, s_50_1, 0, 1},
/*  2 */ { 12, s_50_2, 1, 1},
/*  3 */ { 8, s_50_3, 0, 1},
/*  4 */ { 10, s_50_4, 3, 1},
/*  5 */ { 14, s_50_5, -1, 1}
};


static const struct among a_51[9] =
{
/*  0 */ { 4, s_51_0, -1, 1},
/*  1 */ { 6, s_51_1, -1, 1},
/*  2 */ { 2, s_51_2, -1, 1},
/*  3 */ { 4, s_51_3, -1, 1},
/*  4 */ { 14, s_51_4, 3, 1},
/*  5 */ { 10, s_51_5, -1, 1},
/*  6 */ { 2, s_51_6, -1, 1},
/*  7 */ { 2, s_51_7, -1, 1},
/*  8 */ { 6, s_51_8, -1, 1}
};


static const struct among a_52[3] =
{
/*  0 */ { 12, s_52_0, -1, 1},
/*  1 */ { 10, s_52_1, -1, 1},
/*  2 */ { 10, s_52_2, -1, 1}
};


static const struct among a_53[6] =
{
/*  0 */ { 4, s_53_0, -1, 1},
/*  1 */ { 8, s_53_1, -1, 1},
/*  2 */ { 6, s_53_2, -1, 1},
/*  3 */ { 4, s_53_3, -1, 1},
/*  4 */ { 10, s_53_4, -1, 1},
/*  5 */ { 8, s_53_5, -1, 1}
};


static const struct among a_54[5] =
{
/*  0 */ { 2, s_54_0, -1, 1},
/*  1 */ { 10, s_54_1, 0, 1},
/*  2 */ { 18, s_54_2, 0, 1},
/*  3 */ { 8, s_54_3, 0, 1},
/*  4 */ { 8, s_54_4, 0, 1}
};


static const struct among a_55[3] =
{
/*  0 */ { 8, s_55_0, -1, 1},
/*  1 */ { 6, s_55_1, -1, 1},
/*  2 */ { 6, s_55_2, -1, 1}
};


static const struct among a_56[12] =
{
/*  0 */ { 8, s_56_0, -1, 1},
/*  1 */ { 10, s_56_1, -1, 1},
/*  2 */ { 8, s_56_2, -1, 1},
/*  3 */ { 10, s_56_3, -1, 1},
/*  4 */ { 12, s_56_4, -1, 1},
/*  5 */ { 6, s_56_5, -1, 1},
/*  6 */ { 6, s_56_6, -1, 1},
/*  7 */ { 6, s_56_7, -1, 1},
/*  8 */ { 8, s_56_8, -1, 1},
/*  9 */ { 12, s_56_9, -1, 1},
/* 10 */ { 8, s_56_10, -1, 1},
/* 11 */ { 4, s_56_11, -1, 1}
};


static const struct among a_57[25] =
{
/*  0 */ { 10, s_57_0, -1, 1},
/*  1 */ { 2, s_57_1, -1, 1},
/*  2 */ { 10, s_57_2, 1, 1},
/*  3 */ { 16, s_57_3, 1, 1},
/*  4 */ { 6, s_57_4, -1, 1},
/*  5 */ { 14, s_57_5, -1, 1},
/*  6 */ { 16, s_57_6, -1, 1},
/*  7 */ { 6, s_57_7, -1, 1},
/*  8 */ { 6, s_57_8, -1, 1},
/*  9 */ { 6, s_57_9, -1, 1},
/* 10 */ { 6, s_57_10, -1, 1},
/* 11 */ { 12, s_57_11, -1, 1},
/* 12 */ { 4, s_57_12, -1, 1},
/* 13 */ { 6, s_57_13, -1, 1},
/* 14 */ { 10, s_57_14, -1, 1},
/* 15 */ { 12, s_57_15, -1, 1},
/* 16 */ { 6, s_57_16, -1, 1},
/* 17 */ { 12, s_57_17, -1, 1},
/* 18 */ { 6, s_57_18, -1, 1},
/* 19 */ { 8, s_57_19, -1, 1},
/* 20 */ { 2, s_57_20, -1, 1},
/* 21 */ { 2, s_57_21, -1, 1},
/* 22 */ { 4, s_57_22, 21, 1},
/* 23 */ { 8, s_57_23, 21, 1},
/* 24 */ { 14, s_57_24, -1, 1}
};


static const struct among a_58[3] =
{
/*  0 */ { 10, s_58_0, -1, 1},
/*  1 */ { 8, s_58_1, -1, 1},
/*  2 */ { 8, s_58_2, -1, 1}
};


static const struct among a_59[2] =
{
/*  0 */ { 6, s_59_0, -1, -1},
/*  1 */ { 12, s_59_1, -1, -1}
};


static const struct among a_60[10] =
{
/*  0 */ { 4, s_60_0, -1, 1},
/*  1 */ { 4, s_60_1, -1, 1},
/*  2 */ { 4, s_60_2, -1, 1},
/*  3 */ { 8, s_60_3, -1, 1},
/*  4 */ { 4, s_60_4, -1, 1},
/*  5 */ { 4, s_60_5, -1, 1},
/*  6 */ { 6, s_60_6, -1, 1},
/*  7 */ { 6, s_60_7, -1, 1},
/*  8 */ { 4, s_60_8, -1, 1},
/*  9 */ { 8, s_60_9, -1, 1}
};


static const struct among a_61[44] =
{
/*  0 */ { 2, s_61_0, -1, 1},
/*  1 */ { 6, s_61_1, 0, 1},
/*  2 */ { 8, s_61_2, 0, 1},
/*  3 */ { 10, s_61_3, 0, 1},
/*  4 */ { 8, s_61_4, 0, 1},
/*  5 */ { 8, s_61_5, 0, 1},
/*  6 */ { 16, s_61_6, 0, 1},
/*  7 */ { 14, s_61_7, 0, 1},
/*  8 */ { 12, s_61_8, 0, 1},
/*  9 */ { 8, s_61_9, 0, 1},
/* 10 */ { 16, s_61_10, 0, 1},
/* 11 */ { 8, s_61_11, 0, 1},
/* 12 */ { 2, s_61_12, -1, 1},
/* 13 */ { 4, s_61_13, 12, 1},
/* 14 */ { 6, s_61_14, 12, 1},
/* 15 */ { 10, s_61_15, 12, 1},
/* 16 */ { 6, s_61_16, 12, 1},
/* 17 */ { 8, s_61_17, 16, 1},
/* 18 */ { 8, s_61_18, 12, 1},
/* 19 */ { 2, s_61_19, -1, 1},
/* 20 */ { 10, s_61_20, 19, 1},
/* 21 */ { 10, s_61_21, 19, 1},
/* 22 */ { 10, s_61_22, 19, 1},
/* 23 */ { 12, s_61_23, 19, 1},
/* 24 */ { 8, s_61_24, 19, 1},
/* 25 */ { 8, s_61_25, 19, 1},
/* 26 */ { 8, s_61_26, 19, 1},
/* 27 */ { 8, s_61_27, 19, 1},
/* 28 */ { 8, s_61_28, 19, 1},
/* 29 */ { 8, s_61_29, 19, 1},
/* 30 */ { 10, s_61_30, 29, 1},
/* 31 */ { 6, s_61_31, -1, 1},
/* 32 */ { 10, s_61_32, -1, 1},
/* 33 */ { 4, s_61_33, -1, 1},
/* 34 */ { 6, s_61_34, -1, 1},
/* 35 */ { 8, s_61_35, -1, 1},
/* 36 */ { 8, s_61_36, -1, 1},
/* 37 */ { 12, s_61_37, -1, 1},
/* 38 */ { 2, s_61_38, -1, 1},
/* 39 */ { 8, s_61_39, 38, 1},
/* 40 */ { 2, s_61_40, -1, 1},
/* 41 */ { 10, s_61_41, 40, 1},
/* 42 */ { 4, s_61_42, -1, 1},
/* 43 */ { 12, s_61_43, 42, 1}
};


static const struct among a_62[3] =
{
/*  0 */ { 8, s_62_0, -1, 1},
/*  1 */ { 6, s_62_1, -1, 1},
/*  2 */ { 6, s_62_2, -1, 1}
};


static const struct among a_63[3] =
{
/*  0 */ { 8, s_63_0, -1, 1},
/*  1 */ { 6, s_63_1, -1, 1},
/*  2 */ { 6, s_63_2, -1, 1}
};


static const struct among a_64[6] =
{
/*  0 */ { 2, s_64_0, -1, 1},
/*  1 */ { 10, s_64_1, 0, 1},
/*  2 */ { 14, s_64_2, 0, 1},
/*  3 */ { 12, s_64_3, 0, 1},
/*  4 */ { 14, s_64_4, 0, 1},
/*  5 */ { 12, s_64_5, 0, 1}
};


static const struct among a_65[1] =
{
/*  0 */ { 8, s_65_0, -1, 1}
};


static const struct among a_66[10] =
{
/*  0 */ { 4, s_66_0, -1, 1},
/*  1 */ { 10, s_66_1, 0, 1},
/*  2 */ { 8, s_66_2, 0, 1},
/*  3 */ { 6, s_66_3, 0, 1},
/*  4 */ { 14, s_66_4, 0, 1},
/*  5 */ { 12, s_66_5, -1, 1},
/*  6 */ { 4, s_66_6, -1, 1},
/*  7 */ { 6, s_66_7, 6, 1},
/*  8 */ { 6, s_66_8, -1, 1},
/*  9 */ { 10, s_66_9, -1, 1}
};


static const struct among a_67[3] =
{
/*  0 */ { 8, s_67_0, -1, 1},
/*  1 */ { 12, s_67_1, 0, 1},
/*  2 */ { 12, s_67_2, 0, 1}
};


static const struct among a_68[6] =
{
/*  0 */ { 2, s_68_0, -1, 1},
/*  1 */ { 22, s_68_1, -1, 1},
/*  2 */ { 18, s_68_2, -1, 1},
/*  3 */ { 6, s_68_3, -1, 1},
/*  4 */ { 2, s_68_4, -1, 1},
/*  5 */ { 8, s_68_5, 4, 1}
};


static const struct among a_69[3] =
{
/*  0 */ { 8, s_69_0, -1, 1},
/*  1 */ { 12, s_69_1, 0, 1},
/*  2 */ { 12, s_69_2, 0, 1}
};


static const struct among a_70[7] =
{
/*  0 */ { 10, s_70_0, -1, 1},
/*  1 */ { 16, s_70_1, 0, 1},
/*  2 */ { 16, s_70_2, -1, 1},
/*  3 */ { 2, s_70_3, -1, 1},
/*  4 */ { 2, s_70_4, -1, 1},
/*  5 */ { 4, s_70_5, -1, 1},
/*  6 */ { 12, s_70_6, -1, 1}
};


static const struct among a_71[3] =
{
/*  0 */ { 10, s_71_0, -1, 1},
/*  1 */ { 8, s_71_1, -1, 1},
/*  2 */ { 10, s_71_2, -1, 1}
};


static const struct among a_72[84] =
{
/*  0 */ { 4, s_72_0, -1, 1},
/*  1 */ { 6, s_72_1, 0, 1},
/*  2 */ { 4, s_72_2, -1, 1},
/*  3 */ { 4, s_72_3, -1, 1},
/*  4 */ { 8, s_72_4, 3, 1},
/*  5 */ { 8, s_72_5, 3, 1},
/*  6 */ { 4, s_72_6, -1, 1},
/*  7 */ { 6, s_72_7, -1, 1},
/*  8 */ { 10, s_72_8, 7, 1},
/*  9 */ { 4, s_72_9, -1, 1},
/* 10 */ { 2, s_72_10, -1, 1},
/* 11 */ { 4, s_72_11, 10, 1},
/* 12 */ { 2, s_72_12, -1, 1},
/* 13 */ { 6, s_72_13, 12, 1},
/* 14 */ { 4, s_72_14, 12, 1},
/* 15 */ { 6, s_72_15, 12, 1},
/* 16 */ { 2, s_72_16, -1, 1},
/* 17 */ { 10, s_72_17, 16, 1},
/* 18 */ { 12, s_72_18, 16, 1},
/* 19 */ { 14, s_72_19, 18, 1},
/* 20 */ { 12, s_72_20, 16, 1},
/* 21 */ { 14, s_72_21, 20, 1},
/* 22 */ { 2, s_72_22, -1, 1},
/* 23 */ { 14, s_72_23, 22, 1},
/* 24 */ { 12, s_72_24, 22, 1},
/* 25 */ { 14, s_72_25, 24, 1},
/* 26 */ { 14, s_72_26, 22, 1},
/* 27 */ { 16, s_72_27, 26, 1},
/* 28 */ { 14, s_72_28, 22, 1},
/* 29 */ { 12, s_72_29, 22, 1},
/* 30 */ { 10, s_72_30, 22, 1},
/* 31 */ { 10, s_72_31, 22, 1},
/* 32 */ { 10, s_72_32, 22, 1},
/* 33 */ { 14, s_72_33, 32, 1},
/* 34 */ { 8, s_72_34, 22, 1},
/* 35 */ { 12, s_72_35, 34, 1},
/* 36 */ { 2, s_72_36, -1, 1},
/* 37 */ { 2, s_72_37, -1, 1},
/* 38 */ { 8, s_72_38, 37, 1},
/* 39 */ { 8, s_72_39, 37, 1},
/* 40 */ { 10, s_72_40, 39, 1},
/* 41 */ { 8, s_72_41, 37, 1},
/* 42 */ { 8, s_72_42, 37, 1},
/* 43 */ { 10, s_72_43, 42, 1},
/* 44 */ { 12, s_72_44, 37, 1},
/* 45 */ { 14, s_72_45, 44, 1},
/* 46 */ { 10, s_72_46, 37, 1},
/* 47 */ { 10, s_72_47, 37, 1},
/* 48 */ { 8, s_72_48, 37, 1},
/* 49 */ { 10, s_72_49, 37, 1},
/* 50 */ { 8, s_72_50, 37, 1},
/* 51 */ { 4, s_72_51, 37, 1},
/* 52 */ { 8, s_72_52, 51, 1},
/* 53 */ { 6, s_72_53, 51, 1},
/* 54 */ { 8, s_72_54, 51, 1},
/* 55 */ { 4, s_72_55, 37, 1},
/* 56 */ { 6, s_72_56, -1, 1},
/* 57 */ { 10, s_72_57, 56, 1},
/* 58 */ { 10, s_72_58, 56, 1},
/* 59 */ { 12, s_72_59, 58, 1},
/* 60 */ { 10, s_72_60, 56, 1},
/* 61 */ { 10, s_72_61, 56, 1},
/* 62 */ { 12, s_72_62, 61, 1},
/* 63 */ { 4, s_72_63, -1, 1},
/* 64 */ { 8, s_72_64, 63, 1},
/* 65 */ { 4, s_72_65, -1, 1},
/* 66 */ { 10, s_72_66, 65, 1},
/* 67 */ { 16, s_72_67, 66, 1},
/* 68 */ { 18, s_72_68, 67, 1},
/* 69 */ { 8, s_72_69, 65, 1},
/* 70 */ { 14, s_72_70, 65, 1},
/* 71 */ { 16, s_72_71, 70, 1},
/* 72 */ { 14, s_72_72, 65, 1},
/* 73 */ { 16, s_72_73, 72, 1},
/* 74 */ { 12, s_72_74, 65, 1},
/* 75 */ { 14, s_72_75, 74, 1},
/* 76 */ { 10, s_72_76, 65, 1},
/* 77 */ { 12, s_72_77, 76, 1},
/* 78 */ { 8, s_72_78, 65, 1},
/* 79 */ { 10, s_72_79, 78, 1},
/* 80 */ { 8, s_72_80, 65, 1},
/* 81 */ { 8, s_72_81, 65, 1},
/* 82 */ { 12, s_72_82, 81, 1},
/* 83 */ { 2, s_72_83, -1, 1}
};


static const struct among a_73[8] =
{
/*  0 */ { 10, s_73_0, -1, 1},
/*  1 */ { 8, s_73_1, -1, 1},
/*  2 */ { 8, s_73_2, -1, 1},
/*  3 */ { 8, s_73_3, -1, 1},
/*  4 */ { 10, s_73_4, -1, 1},
/*  5 */ { 8, s_73_5, -1, 1},
/*  6 */ { 8, s_73_6, -1, 1},
/*  7 */ { 8, s_73_7, -1, 1}
};

static const unsigned char g_v[] = { 81, 65, 16, 1 };

static const unsigned char g_v2[] = { 81, 65, 0, 1 };

static const symbol s_0[] = { 0xCE, 0xB1 };
static const symbol s_1[] = { 0xCE, 0xB2 };
static const symbol s_2[] = { 0xCE, 0xB3 };
static const symbol s_3[] = { 0xCE, 0xB4 };
static const symbol s_4[] = { 0xCE, 0xB5 };
static const symbol s_5[] = { 0xCE, 0xB6 };
static const symbol s_6[] = { 0xCE, 0xB7 };
static const symbol s_7[] = { 0xCE, 0xB8 };
static const symbol s_8[] = { 0xCE, 0xB9 };
static const symbol s_9[] = { 0xCE, 0xBA };
static const symbol s_10[] = { 0xCE, 0xBB };
static const symbol s_11[] = { 0xCE, 0xBC };
static const symbol s_12[] = { 0xCE, 0xBD };
static const symbol s_13[] = { 0xCE, 0xBE };
static const symbol s_14[] = { 0xCE, 0xBF };
static const symbol s_15[] = { 0xCF, 0x80 };
static const symbol s_16[] = { 0xCF, 0x81 };
static const symbol s_17[] = { 0xCF, 0x83 };
static const symbol s_18[] = { 0xCF, 0x84 };
static const symbol s_19[] = { 0xCF, 0x85 };
static const symbol s_20[] = { 0xCF, 0x86 };
static const symbol s_21[] = { 0xCF, 0x87 };
static const symbol s_22[] = { 0xCF, 0x88 };
static const symbol s_23[] = { 0xCF, 0x89 };
static const symbol s_24[] = { 0xCF, 0x86, 0xCE, 0xB1 };
static const symbol s_25[] = { 0xCF, 0x83, 0xCE, 0xBA, 0xCE, 0xB1 };
static const symbol s_26[] = { 0xCE, 0xBF, 0xCE, 0xBB, 0xCE, 0xBF };
static const symbol s_27[] = { 0xCF, 0x83, 0xCE, 0xBF };
static const symbol s_28[] = { 0xCF, 0x84, 0xCE, 0xB1, 0xCF, 0x84, 0xCE, 0xBF };
static const symbol s_29[] = { 0xCE, 0xBA, 0xCF, 0x81, 0xCE, 0xB5 };
static const symbol s_30[] = { 0xCF, 0x80, 0xCE, 0xB5, 0xCF, 0x81 };
static const symbol s_31[] = { 0xCF, 0x84, 0xCE, 0xB5, 0xCF, 0x81 };
static const symbol s_32[] = { 0xCF, 0x86, 0xCF, 0x89 };
static const symbol s_33[] = { 0xCE, 0xBA, 0xCE, 0xB1, 0xCE, 0xB8, 0xCE, 0xB5, 0xCF, 0x83, 0xCF, 0x84 };
static const symbol s_34[] = { 0xCE, 0xB3, 0xCE, 0xB5, 0xCE, 0xB3, 0xCE, 0xBF, 0xCE, 0xBD };
static const symbol s_35[] = { 0xCE, 0xB9 };
static const symbol s_36[] = { 0xCE, 0xB9, 0xCE, 0xB6 };
static const symbol s_37[] = { 0xCF, 0x89, 0xCE, 0xBD };
static const symbol s_38[] = { 0xCE, 0xB9, 0xCF, 0x83, 0xCE, 0xB1 };
static const symbol s_39[] = { 0xCE, 0xB9, 0xCF, 0x83 };
static const symbol s_40[] = { 0xCE, 0xB9 };
static const symbol s_41[] = { 0xCE, 0xB9, 0xCF, 0x83 };
static const symbol s_42[] = { 0xCE, 0xB9 };
static const symbol s_43[] = { 0xCE, 0xB9 };
static const symbol s_44[] = { 0xCE, 0xB9, 0xCF, 0x83, 0xCF, 0x84 };
static const symbol s_45[] = { 0xCE, 0xB9, 0xCF, 0x83, 0xCE, 0xBC };
static const symbol s_46[] = { 0xCE, 0xB9 };
static const symbol s_47[] = { 0xCE, 0xB1, 0xCE, 0xB3, 0xCE, 0xBD, 0xCF, 0x89, 0xCF, 0x83, 0xCF, 0x84 };
static const symbol s_48[] = { 0xCE, 0xB1, 0xCF, 0x84, 0xCE, 0xBF, 0xCE, 0xBC };
static const symbol s_49[] = { 0xCE, 0xB3, 0xCE, 0xBD, 0xCF, 0x89, 0xCF, 0x83, 0xCF, 0x84 };
static const symbol s_50[] = { 0xCE, 0xB5, 0xCE, 0xB8, 0xCE, 0xBD };
static const symbol s_51[] = { 0xCE, 0xB5, 0xCE, 0xBA, 0xCE, 0xBB, 0xCE, 0xB5, 0xCE, 0xBA, 0xCF, 0x84 };
static const symbol s_52[] = { 0xCF, 0x83, 0xCE, 0xBA, 0xCE, 0xB5, 0xCF, 0x80, 0xCF, 0x84 };
static const symbol s_53[] = { 0xCF, 0x84, 0xCE, 0xBF, 0xCF, 0x80 };
static const symbol s_54[] = { 0xCE, 0xB1, 0xCE, 0xBB, 0xCE, 0xB5, 0xCE, 0xBE, 0xCE, 0xB1, 0xCE, 0xBD, 0xCE, 0xB4, 0xCF, 0x81 };
static const symbol s_55[] = { 0xCE, 0xB2, 0xCF, 0x85, 0xCE, 0xB6, 0xCE, 0xB1, 0xCE, 0xBD, 0xCF, 0x84 };
static const symbol s_56[] = { 0xCE, 0xB8, 0xCE, 0xB5, 0xCE, 0xB1, 0xCF, 0x84, 0xCF, 0x81 };
static const symbol s_57[] = { 0xCE, 0xB1, 0xCF, 0x81, 0xCE, 0xB1, 0xCE, 0xBA };
static const symbol s_58[] = { 0xCE, 0xB1, 0xCE, 0xBA };
static const symbol s_59[] = { 0xCE, 0xB9, 0xCF, 0x84, 0xCF, 0x83 };
static const symbol s_60[] = { 0xCE, 0xBA, 0xCE, 0xBF, 0xCF, 0x81 };
static const symbol s_61[] = { 0xCE, 0xB9, 0xCF, 0x84, 0xCF, 0x83 };
static const symbol s_62[] = { 0xCE, 0xB9, 0xCE, 0xB4 };
static const symbol s_63[] = { 0xCE, 0xB9, 0xCE, 0xB4 };
static const symbol s_64[] = { 0xCE, 0xB9, 0xCF, 0x83, 0xCE, 0xBA };
static const symbol s_65[] = { 0xCE, 0xB1, 0xCE, 0xB4 };
static const symbol s_66[] = { 0xCE, 0xB5, 0xCE, 0xB4 };
static const symbol s_67[] = { 0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xB4 };
static const symbol s_68[] = { 0xCE, 0xB5 };
static const symbol s_69[] = { 0xCE, 0xB9 };
static const symbol s_70[] = { 0xCE, 0xB9, 0xCE, 0xBA };
static const symbol s_71[] = { 0xCE, 0xB9, 0xCE, 0xBA };
static const symbol s_72[] = { 0xCE, 0xB1, 0xCE, 0xB3, 0xCE, 0xB1, 0xCE, 0xBC, 0xCE, 0xB5 };
static const symbol s_73[] = { 0xCE, 0xB1, 0xCE, 0xB3, 0xCE, 0xB1, 0xCE, 0xBC };
static const symbol s_74[] = { 0xCE, 0xB1, 0xCE, 0xBC, 0xCE, 0xB5 };
static const symbol s_75[] = { 0xCE, 0xB1, 0xCE, 0xBC };
static const symbol s_76[] = { 0xCE, 0xB1, 0xCE, 0xB3, 0xCE, 0xB1, 0xCE, 0xBD };
static const symbol s_77[] = { 0xCE, 0xB1, 0xCE, 0xBD, 0xCE, 0xB5 };
static const symbol s_78[] = { 0xCE, 0xB1, 0xCE, 0xBD };
static const symbol s_79[] = { 0xCE, 0xB1, 0xCE, 0xBD };
static const symbol s_80[] = { 0xCE, 0xB5, 0xCF, 0x84, 0xCE, 0xB5 };
static const symbol s_81[] = { 0xCE, 0xB5, 0xCF, 0x84 };
static const symbol s_82[] = { 0xCE, 0xB5, 0xCF, 0x84 };
static const symbol s_83[] = { 0xCE, 0xB5, 0xCF, 0x84 };
static const symbol s_84[] = { 0xCE, 0xB1, 0xCF, 0x81, 0xCF, 0x87 };
static const symbol s_85[] = { 0xCE, 0xBF, 0xCE, 0xBD, 0xCF, 0x84 };
static const symbol s_86[] = { 0xCE, 0xBA, 0xCF, 0x81, 0xCE, 0xB5 };
static const symbol s_87[] = { 0xCF, 0x89, 0xCE, 0xBD, 0xCF, 0x84 };
static const symbol s_88[] = { 0xCE, 0xBF, 0xCE, 0xBD };
static const symbol s_89[] = { 0xCE, 0xBF, 0xCE, 0xBC, 0xCE, 0xB1, 0xCF, 0x83, 0xCF, 0x84 };
static const symbol s_90[] = { 0xCE, 0xB9, 0xCE, 0xB5, 0xCF, 0x83, 0xCF, 0x84, 0xCE, 0xB5 };
static const symbol s_91[] = { 0xCE, 0xB9, 0xCE, 0xB5, 0xCF, 0x83, 0xCF, 0x84 };
static const symbol s_92[] = { 0xCE, 0xB5, 0xCF, 0x83, 0xCF, 0x84, 0xCE, 0xB5 };
static const symbol s_93[] = { 0xCE, 0xB9, 0xCE, 0xB5, 0xCF, 0x83, 0xCF, 0x84 };
static const symbol s_94[] = { 0xCE, 0xB7, 0xCE, 0xBA };
static const symbol s_95[] = { 0xCE, 0xB7, 0xCE, 0xBA };
static const symbol s_96[] = { 0xCE, 0xBF, 0xCF, 0x85, 0xCF, 0x83 };
static const symbol s_97[] = { 0xCE, 0xBF, 0xCF, 0x85, 0xCF, 0x83 };
static const symbol s_98[] = { 0xCE, 0xBA, 0xCE, 0xBF, 0xCE, 0xBB, 0xCE, 0xBB };
static const symbol s_99[] = { 0xCE, 0xB1, 0xCE, 0xB3 };
static const symbol s_100[] = { 0xCE, 0xB1, 0xCE, 0xB3 };
static const symbol s_101[] = { 0xCE, 0xB1, 0xCE, 0xB3 };
static const symbol s_102[] = { 0xCE, 0xB7, 0xCF, 0x83 };
static const symbol s_103[] = { 0xCE, 0xB7, 0xCF, 0x83, 0xCF, 0x84 };
static const symbol s_104[] = { 0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xBD };
static const symbol s_105[] = { 0xCE, 0xBF, 0xCF, 0x85, 0xCE, 0xBC };
static const symbol s_106[] = { 0xCE, 0xBC, 0xCE, 0xB1 };

int Xapian::InternalStemGreek::r_has_min_length() {
    if (!(len_utf8(p) >= 3)) return 0;
    return 1;
}

int Xapian::InternalStemGreek::r_tolower() {
    int among_var;
    while(1) {
        int m1 = l - c; (void)m1;
        ket = c;
        among_var = find_among_b(s_pool, a_0, 46, 0, 0);
        if (!(among_var)) goto lab0;
        bra = c;
        switch (among_var) {
            case 1:
                {   int ret = slice_from_s(2, s_0);
                    if (ret < 0) return ret;
                }
                break;
            case 2:
                {   int ret = slice_from_s(2, s_1);
                    if (ret < 0) return ret;
                }
                break;
            case 3:
                {   int ret = slice_from_s(2, s_2);
                    if (ret < 0) return ret;
                }
                break;
            case 4:
                {   int ret = slice_from_s(2, s_3);
                    if (ret < 0) return ret;
                }
                break;
            case 5:
                {   int ret = slice_from_s(2, s_4);
                    if (ret < 0) return ret;
                }
                break;
            case 6:
                {   int ret = slice_from_s(2, s_5);
                    if (ret < 0) return ret;
                }
                break;
            case 7:
                {   int ret = slice_from_s(2, s_6);
                    if (ret < 0) return ret;
                }
                break;
            case 8:
                {   int ret = slice_from_s(2, s_7);
                    if (ret < 0) return ret;
                }
                break;
            case 9:
                {   int ret = slice_from_s(2, s_8);
                    if (ret < 0) return ret;
                }
                break;
            case 10:
                {   int ret = slice_from_s(2, s_9);
                    if (ret < 0) return ret;
                }
                break;
            case 11:
                {   int ret = slice_from_s(2, s_10);
                    if (ret < 0) return ret;
                }
                break;
            case 12:
                {   int ret = slice_from_s(2, s_11);
                    if (ret < 0) return ret;
                }
                break;
            case 13:
                {   int ret = slice_from_s(2, s_12);
                    if (ret < 0) return ret;
                }
                break;
            case 14:
                {   int ret = slice_from_s(2, s_13);
                    if (ret < 0) return ret;
                }
                break;
            case 15:
                {   int ret = slice_from_s(2, s_14);
                    if (ret < 0) return ret;
                }
                break;
            case 16:
                {   int ret = slice_from_s(2, s_15);
                    if (ret < 0) return ret;
                }
                break;
            case 17:
                {   int ret = slice_from_s(2, s_16);
                    if (ret < 0) return ret;
                }
                break;
            case 18:
                {   int ret = slice_from_s(2, s_17);
                    if (ret < 0) return ret;
                }
                break;
            case 19:
                {   int ret = slice_from_s(2, s_18);
                    if (ret < 0) return ret;
                }
                break;
            case 20:
                {   int ret = slice_from_s(2, s_19);
                    if (ret < 0) return ret;
                }
                break;
            case 21:
                {   int ret = slice_from_s(2, s_20);
                    if (ret < 0) return ret;
                }
                break;
            case 22:
                {   int ret = slice_from_s(2, s_21);
                    if (ret < 0) return ret;
                }
                break;
            case 23:
                {   int ret = slice_from_s(2, s_22);
                    if (ret < 0) return ret;
                }
                break;
            case 24:
                {   int ret = slice_from_s(2, s_23);
                    if (ret < 0) return ret;
                }
                break;
            case 25:
                {   int ret = skip_utf8(p, c, lb, 0, -1);
                    if (ret < 0) goto lab0;
                    c = ret;
                }
                break;
        }
        continue;
    lab0:
        c = l - m1;
        break;
    }
    return 1;
}

int Xapian::InternalStemGreek::r_step1() {
    int among_var;
    ket = c;
    among_var = find_among_b(s_pool, a_1, 40, 0, 0);
    if (!(among_var)) return 0;
    bra = c;
    switch (among_var) {
        case 1:
            {   int ret = slice_from_s(4, s_24);
                if (ret < 0) return ret;
            }
            break;
        case 2:
            {   int ret = slice_from_s(6, s_25);
                if (ret < 0) return ret;
            }
            break;
        case 3:
            {   int ret = slice_from_s(6, s_26);
                if (ret < 0) return ret;
            }
            break;
        case 4:
            {   int ret = slice_from_s(4, s_27);
                if (ret < 0) return ret;
            }
            break;
        case 5:
            {   int ret = slice_from_s(8, s_28);
                if (ret < 0) return ret;
            }
            break;
        case 6:
            {   int ret = slice_from_s(6, s_29);
                if (ret < 0) return ret;
            }
            break;
        case 7:
            {   int ret = slice_from_s(6, s_30);
                if (ret < 0) return ret;
            }
            break;
        case 8:
            {   int ret = slice_from_s(6, s_31);
                if (ret < 0) return ret;
            }
            break;
        case 9:
            {   int ret = slice_from_s(4, s_32);
                if (ret < 0) return ret;
            }
            break;
        case 10:
            {   int ret = slice_from_s(12, s_33);
                if (ret < 0) return ret;
            }
            break;
        case 11:
            {   int ret = slice_from_s(10, s_34);
                if (ret < 0) return ret;
            }
            break;
    }
    I_test1 = 0;
    return 1;
}

int Xapian::InternalStemGreek::r_steps1() {
    ket = c;
    if (!(find_among_b(s_pool, a_4, 14, 0, 0))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    I_test1 = 0;
    {   int m1 = l - c; (void)m1;
        ket = c;
        bra = c;
        if (c - 3 <= lb || p[c - 1] >> 5 != 5 || !((-2145255424 >> (p[c - 1] & 0x1f)) & 1)) goto lab1;
        if (!(find_among_b(s_pool, a_2, 9, 0, 0))) goto lab1;
        if (c > lb) goto lab1;
        {   int ret = slice_from_s(2, s_35);
            if (ret < 0) return ret;
        }
        goto lab0;
    lab1:
        c = l - m1;
        ket = c;
        bra = c;
        if (!(find_among_b(s_pool, a_3, 22, 0, 0))) return 0;
        if (c > lb) return 0;
        {   int ret = slice_from_s(4, s_36);
            if (ret < 0) return ret;
        }
    }
lab0:
    return 1;
}

int Xapian::InternalStemGreek::r_steps2() {
    ket = c;
    if (!(find_among_b(s_pool, a_6, 7, 0, 0))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    I_test1 = 0;
    ket = c;
    bra = c;
    if (!(find_among_b(s_pool, a_5, 8, 0, 0))) return 0;
    if (c > lb) return 0;
    {   int ret = slice_from_s(4, s_37);
        if (ret < 0) return ret;
    }
    return 1;
}

int Xapian::InternalStemGreek::r_steps3() {
    ket = c;
    if (!(find_among_b(s_pool, a_9, 7, 0, 0))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    I_test1 = 0;
    {   int m1 = l - c; (void)m1;
        if (!(eq_s_b(6, s_38))) goto lab1;
        if (c > lb) goto lab1;
        {   int ret = slice_from_s(4, s_39);
            if (ret < 0) return ret;
        }
        goto lab0;
    lab1:
        c = l - m1;
        ket = c;
        bra = c;
        if (c - 3 <= lb || p[c - 1] >> 5 != 5 || !((-2145255424 >> (p[c - 1] & 0x1f)) & 1)) goto lab2;
        if (!(find_among_b(s_pool, a_7, 19, 0, 0))) goto lab2;
        if (c > lb) goto lab2;
        {   int ret = slice_from_s(2, s_40);
            if (ret < 0) return ret;
        }
        goto lab0;
    lab2:
        c = l - m1;
        ket = c;
        bra = c;
        if (!(find_among_b(s_pool, a_8, 13, 0, 0))) return 0;
        if (c > lb) return 0;
        {   int ret = slice_from_s(4, s_41);
            if (ret < 0) return ret;
        }
    }
lab0:
    return 1;
}

int Xapian::InternalStemGreek::r_steps4() {
    ket = c;
    if (!(find_among_b(s_pool, a_11, 7, 0, 0))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    I_test1 = 0;
    ket = c;
    bra = c;
    if (c - 3 <= lb || p[c - 1] >> 5 != 5 || !((-2145255424 >> (p[c - 1] & 0x1f)) & 1)) return 0;
    if (!(find_among_b(s_pool, a_10, 19, 0, 0))) return 0;
    if (c > lb) return 0;
    {   int ret = slice_from_s(2, s_42);
        if (ret < 0) return ret;
    }
    return 1;
}

int Xapian::InternalStemGreek::r_steps5() {
    ket = c;
    if (!(find_among_b(s_pool, a_14, 11, 0, 0))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    I_test1 = 0;
    {   int m1 = l - c; (void)m1;
        ket = c;
        bra = c;
        if (c - 3 <= lb || (p[c - 1] != 181 && p[c - 1] != 191)) goto lab1;
        if (!(find_among_b(s_pool, a_12, 7, 0, 0))) goto lab1;
        if (c > lb) goto lab1;
        {   int ret = slice_from_s(2, s_43);
            if (ret < 0) return ret;
        }
        goto lab0;
    lab1:
        c = l - m1;
        ket = c;
        bra = c;
        if (!(find_among_b(s_pool, a_13, 33, 0, 0))) return 0;
        if (c > lb) return 0;
        {   int ret = slice_from_s(6, s_44);
            if (ret < 0) return ret;
        }
    }
lab0:
    return 1;
}

int Xapian::InternalStemGreek::r_steps6() {
    int among_var;
    ket = c;
    if (!(find_among_b(s_pool, a_18, 6, 0, 0))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    I_test1 = 0;
    {   int m1 = l - c; (void)m1;
        ket = c;
        bra = c;
        if (c - 3 <= lb || p[c - 1] != 181) goto lab1;
        if (!(find_among_b(s_pool, a_15, 5, 0, 0))) goto lab1;
        if (c > lb) goto lab1;
        {   int ret = slice_from_s(6, s_45);
            if (ret < 0) return ret;
        }
        goto lab0;
    lab1:
        c = l - m1;
        ket = c;
        bra = c;
        if (c - 7 <= lb || p[c - 1] != 181) goto lab2;
        if (!(find_among_b(s_pool, a_16, 2, 0, 0))) goto lab2;
        if (c > lb) goto lab2;
        {   int ret = slice_from_s(2, s_46);
            if (ret < 0) return ret;
        }
        goto lab0;
    lab2:
        c = l - m1;
        ket = c;
        if (c - 9 <= lb || (p[c - 1] != 186 && p[c - 1] != 189)) return 0;
        among_var = find_among_b(s_pool, a_17, 10, 0, 0);
        if (!(among_var)) return 0;
        bra = c;
        switch (among_var) {
            case 1:
                {   int ret = slice_from_s(12, s_47);
                    if (ret < 0) return ret;
                }
                break;
            case 2:
                {   int ret = slice_from_s(8, s_48);
                    if (ret < 0) return ret;
                }
                break;
            case 3:
                {   int ret = slice_from_s(10, s_49);
                    if (ret < 0) return ret;
                }
                break;
            case 4:
                {   int ret = slice_from_s(6, s_50);
                    if (ret < 0) return ret;
                }
                break;
            case 5:
                {   int ret = slice_from_s(12, s_51);
                    if (ret < 0) return ret;
                }
                break;
            case 6:
                {   int ret = slice_from_s(10, s_52);
                    if (ret < 0) return ret;
                }
                break;
            case 7:
                {   int ret = slice_from_s(6, s_53);
                    if (ret < 0) return ret;
                }
                break;
            case 8:
                {   int ret = slice_from_s(16, s_54);
                    if (ret < 0) return ret;
                }
                break;
            case 9:
                {   int ret = slice_from_s(12, s_55);
                    if (ret < 0) return ret;
                }
                break;
            case 10:
                {   int ret = slice_from_s(10, s_56);
                    if (ret < 0) return ret;
                }
                break;
        }
    }
lab0:
    return 1;
}

int Xapian::InternalStemGreek::r_steps7() {
    ket = c;
    if (c - 9 <= lb || (p[c - 1] != 177 && p[c - 1] != 185)) return 0;
    if (!(find_among_b(s_pool, a_20, 4, 0, 0))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    I_test1 = 0;
    ket = c;
    bra = c;
    if (c - 1 <= lb || (p[c - 1] != 131 && p[c - 1] != 135)) return 0;
    if (!(find_among_b(s_pool, a_19, 2, 0, 0))) return 0;
    if (c > lb) return 0;
    {   int ret = slice_from_s(8, s_57);
        if (ret < 0) return ret;
    }
    return 1;
}

int Xapian::InternalStemGreek::r_steps8() {
    ket = c;
    if (!(find_among_b(s_pool, a_23, 8, 0, 0))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    I_test1 = 0;
    {   int m1 = l - c; (void)m1;
        ket = c;
        bra = c;
        if (!(find_among_b(s_pool, a_21, 33, 0, 0))) goto lab1;
        if (c > lb) goto lab1;
        {   int ret = slice_from_s(4, s_58);
            if (ret < 0) return ret;
        }
        goto lab0;
    lab1:
        c = l - m1;
        ket = c;
        bra = c;
        if (!(find_among_b(s_pool, a_22, 15, 0, 0))) goto lab2;
        if (c > lb) goto lab2;
        {   int ret = slice_from_s(6, s_59);
            if (ret < 0) return ret;
        }
        goto lab0;
    lab2:
        c = l - m1;
        ket = c;
        bra = c;
        if (!(eq_s_b(6, s_60))) return 0;
        {   int ret = slice_from_s(6, s_61);
            if (ret < 0) return ret;
        }
    }
lab0:
    return 1;
}

int Xapian::InternalStemGreek::r_steps9() {
    ket = c;
    if (c - 7 <= lb || p[c - 1] >> 5 != 5 || !((-1610481664 >> (p[c - 1] & 0x1f)) & 1)) return 0;
    if (!(find_among_b(s_pool, a_26, 3, 0, 0))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    I_test1 = 0;
    {   int m1 = l - c; (void)m1;
        ket = c;
        bra = c;
        if (!(find_among_b(s_pool, a_24, 4, 0, 0))) goto lab1;
        if (c > lb) goto lab1;
        {   int ret = slice_from_s(4, s_62);
            if (ret < 0) return ret;
        }
        goto lab0;
    lab1:
        c = l - m1;
        ket = c;
        bra = c;
        if (c - 1 <= lb || (p[c - 1] != 181 && p[c - 1] != 189)) return 0;
        if (!(find_among_b(s_pool, a_25, 2, 0, 0))) return 0;
        {   int ret = slice_from_s(4, s_63);
            if (ret < 0) return ret;
        }
    }
lab0:
    return 1;
}

int Xapian::InternalStemGreek::r_steps10() {
    ket = c;
    if (!(find_among_b(s_pool, a_28, 4, 0, 0))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    I_test1 = 0;
    ket = c;
    bra = c;
    if (!(find_among_b(s_pool, a_27, 7, 0, 0))) return 0;
    if (c > lb) return 0;
    {   int ret = slice_from_s(6, s_64);
        if (ret < 0) return ret;
    }
    return 1;
}

int Xapian::InternalStemGreek::r_step2a() {
    ket = c;
    if (c - 7 <= lb || (p[c - 1] != 131 && p[c - 1] != 189)) return 0;
    if (!(find_among_b(s_pool, a_29, 2, 0, 0))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    {   int m1 = l - c; (void)m1;
        ket = c;
        if (!(find_among_b(s_pool, a_30, 10, 0, 0))) goto lab0;
        bra = c;
        return 0;
    lab0:
        c = l - m1;
    }
    {   int saved_c = c;
        insert_s(c, c, 4, s_65);
        c = saved_c;
    }
    return 1;
}

int Xapian::InternalStemGreek::r_step2b() {
    ket = c;
    if (c - 7 <= lb || (p[c - 1] != 131 && p[c - 1] != 189)) return 0;
    if (!(find_among_b(s_pool, a_31, 2, 0, 0))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    ket = c;
    bra = c;
    if (c - 3 <= lb || (p[c - 1] != 128 && p[c - 1] != 187)) return 0;
    if (!(find_among_b(s_pool, a_32, 8, 0, 0))) return 0;
    {   int ret = slice_from_s(4, s_66);
        if (ret < 0) return ret;
    }
    return 1;
}

int Xapian::InternalStemGreek::r_step2c() {
    ket = c;
    if (c - 9 <= lb || (p[c - 1] != 131 && p[c - 1] != 189)) return 0;
    if (!(find_among_b(s_pool, a_33, 2, 0, 0))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    ket = c;
    bra = c;
    if (!(find_among_b(s_pool, a_34, 15, 0, 0))) return 0;
    {   int ret = slice_from_s(6, s_67);
        if (ret < 0) return ret;
    }
    return 1;
}

int Xapian::InternalStemGreek::r_step2d() {
    ket = c;
    if (c - 5 <= lb || (p[c - 1] != 131 && p[c - 1] != 189)) return 0;
    if (!(find_among_b(s_pool, a_35, 2, 0, 0))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    I_test1 = 0;
    ket = c;
    bra = c;
    if (!(find_among_b(s_pool, a_36, 8, 0, 0))) return 0;
    if (c > lb) return 0;
    {   int ret = slice_from_s(2, s_68);
        if (ret < 0) return ret;
    }
    return 1;
}

int Xapian::InternalStemGreek::r_step3() {
    ket = c;
    if (!(find_among_b(s_pool, a_37, 3, 0, 0))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    I_test1 = 0;
    ket = c;
    bra = c;
    if (in_grouping_b_U(g_v, 945, 969, 0)) return 0;
    {   int ret = slice_from_s(2, s_69);
        if (ret < 0) return ret;
    }
    return 1;
}

int Xapian::InternalStemGreek::r_step4() {
    ket = c;
    if (!(find_among_b(s_pool, a_38, 4, 0, 0))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    I_test1 = 0;
    {   int m1 = l - c; (void)m1;
        ket = c;
        bra = c;
        if (in_grouping_b_U(g_v, 945, 969, 0)) goto lab1;
        {   int ret = slice_from_s(4, s_70);
            if (ret < 0) return ret;
        }
        goto lab0;
    lab1:
        c = l - m1;
        ket = c;
    }
lab0:
    bra = c;
    if (!(find_among_b(s_pool, a_39, 36, 0, 0))) return 0;
    if (c > lb) return 0;
    {   int ret = slice_from_s(4, s_71);
        if (ret < 0) return ret;
    }
    return 1;
}

int Xapian::InternalStemGreek::r_step5a() {
    {   int m1 = l - c; (void)m1;
        if (!(eq_s_b(10, s_72))) goto lab0;
        if (c > lb) goto lab0;
        {   int ret = slice_from_s(8, s_73);
            if (ret < 0) return ret;
        }
    lab0:
        c = l - m1;
    }
    {   int m2 = l - c; (void)m2;
        ket = c;
        if (c - 9 <= lb || p[c - 1] != 181) goto lab1;
        if (!(find_among_b(s_pool, a_40, 5, 0, 0))) goto lab1;
        bra = c;
        {   int ret = slice_del();
            if (ret < 0) return ret;
        }
        I_test1 = 0;
    lab1:
        c = l - m2;
    }
    ket = c;
    if (!(eq_s_b(6, s_74))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    I_test1 = 0;
    ket = c;
    bra = c;
    if (!(find_among_b(s_pool, a_41, 12, 0, 0))) return 0;
    if (c > lb) return 0;
    {   int ret = slice_from_s(4, s_75);
        if (ret < 0) return ret;
    }
    return 1;
}

int Xapian::InternalStemGreek::r_step5b() {
    {   int m1 = l - c; (void)m1;
        ket = c;
        if (c - 9 <= lb || p[c - 1] != 181) goto lab0;
        if (!(find_among_b(s_pool, a_43, 11, 0, 0))) goto lab0;
        bra = c;
        {   int ret = slice_del();
            if (ret < 0) return ret;
        }
        I_test1 = 0;
        ket = c;
        bra = c;
        if (c - 3 <= lb || (p[c - 1] != 129 && p[c - 1] != 131)) goto lab0;
        if (!(find_among_b(s_pool, a_42, 2, 0, 0))) goto lab0;
        if (c > lb) goto lab0;
        {   int ret = slice_from_s(8, s_76);
            if (ret < 0) return ret;
        }
    lab0:
        c = l - m1;
    }
    ket = c;
    if (!(eq_s_b(6, s_77))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    I_test1 = 0;
    {   int m2 = l - c; (void)m2;
        ket = c;
        bra = c;
        if (in_grouping_b_U(g_v2, 945, 969, 0)) goto lab2;
        {   int ret = slice_from_s(4, s_78);
            if (ret < 0) return ret;
        }
        goto lab1;
    lab2:
        c = l - m2;
        ket = c;
    }
lab1:
    bra = c;
    if (!(find_among_b(s_pool, a_44, 95, 0, 0))) return 0;
    if (c > lb) return 0;
    {   int ret = slice_from_s(4, s_79);
        if (ret < 0) return ret;
    }
    return 1;
}

int Xapian::InternalStemGreek::r_step5c() {
    {   int m1 = l - c; (void)m1;
        ket = c;
        if (c - 9 <= lb || p[c - 1] != 181) goto lab0;
        if (!(find_among_b(s_pool, a_45, 1, 0, 0))) goto lab0;
        bra = c;
        {   int ret = slice_del();
            if (ret < 0) return ret;
        }
        I_test1 = 0;
    lab0:
        c = l - m1;
    }
    ket = c;
    if (!(eq_s_b(6, s_80))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    I_test1 = 0;
    {   int m2 = l - c; (void)m2;
        ket = c;
        bra = c;
        if (in_grouping_b_U(g_v2, 945, 969, 0)) goto lab2;
        {   int ret = slice_from_s(4, s_81);
            if (ret < 0) return ret;
        }
        goto lab1;
    lab2:
        c = l - m2;
        ket = c;
        bra = c;
        if (!(find_among_b(s_pool, a_46, 31, 0, 0))) goto lab3;
        {   int ret = slice_from_s(4, s_82);
            if (ret < 0) return ret;
        }
        goto lab1;
    lab3:
        c = l - m2;
        ket = c;
    }
lab1:
    bra = c;
    if (!(find_among_b(s_pool, a_47, 25, 0, 0))) return 0;
    if (c > lb) return 0;
    {   int ret = slice_from_s(4, s_83);
        if (ret < 0) return ret;
    }
    return 1;
}

int Xapian::InternalStemGreek::r_step5d() {
    ket = c;
    if (c - 9 <= lb || p[c - 1] != 131) return 0;
    if (!(find_among_b(s_pool, a_48, 2, 0, 0))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    I_test1 = 0;
    {   int m1 = l - c; (void)m1;
        ket = c;
        bra = c;
        if (!(eq_s_b(6, s_84))) goto lab1;
        if (c > lb) goto lab1;
        {   int ret = slice_from_s(6, s_85);
            if (ret < 0) return ret;
        }
        goto lab0;
    lab1:
        c = l - m1;
        ket = c;
        bra = c;
        if (!(eq_s_b(6, s_86))) return 0;
        {   int ret = slice_from_s(6, s_87);
            if (ret < 0) return ret;
        }
    }
lab0:
    return 1;
}

int Xapian::InternalStemGreek::r_step5e() {
    ket = c;
    if (c - 11 <= lb || p[c - 1] != 181) return 0;
    if (!(find_among_b(s_pool, a_49, 2, 0, 0))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    I_test1 = 0;
    ket = c;
    bra = c;
    if (!(eq_s_b(4, s_88))) return 0;
    if (c > lb) return 0;
    {   int ret = slice_from_s(10, s_89);
        if (ret < 0) return ret;
    }
    return 1;
}

int Xapian::InternalStemGreek::r_step5f() {
    {   int m1 = l - c; (void)m1;
        ket = c;
        if (!(eq_s_b(10, s_90))) goto lab0;
        bra = c;
        {   int ret = slice_del();
            if (ret < 0) return ret;
        }
        I_test1 = 0;
        ket = c;
        bra = c;
        if (c - 1 <= lb || (p[c - 1] != 128 && p[c - 1] != 134)) goto lab0;
        if (!(find_among_b(s_pool, a_50, 6, 0, 0))) goto lab0;
        if (c > lb) goto lab0;
        {   int ret = slice_from_s(8, s_91);
            if (ret < 0) return ret;
        }
    lab0:
        c = l - m1;
    }
    ket = c;
    if (!(eq_s_b(8, s_92))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    I_test1 = 0;
    ket = c;
    bra = c;
    if (!(find_among_b(s_pool, a_51, 9, 0, 0))) return 0;
    if (c > lb) return 0;
    {   int ret = slice_from_s(8, s_93);
        if (ret < 0) return ret;
    }
    return 1;
}

int Xapian::InternalStemGreek::r_step5g() {
    {   int m1 = l - c; (void)m1;
        ket = c;
        if (!(find_among_b(s_pool, a_52, 3, 0, 0))) goto lab0;
        bra = c;
        {   int ret = slice_del();
            if (ret < 0) return ret;
        }
        I_test1 = 0;
    lab0:
        c = l - m1;
    }
    ket = c;
    if (!(find_among_b(s_pool, a_55, 3, 0, 0))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    I_test1 = 0;
    {   int m2 = l - c; (void)m2;
        ket = c;
        bra = c;
        if (!(find_among_b(s_pool, a_53, 6, 0, 0))) goto lab2;
        {   int ret = slice_from_s(4, s_94);
            if (ret < 0) return ret;
        }
        goto lab1;
    lab2:
        c = l - m2;
        ket = c;
        bra = c;
        if (c - 1 <= lb || p[c - 1] != 184) return 0;
        if (!(find_among_b(s_pool, a_54, 5, 0, 0))) return 0;
        if (c > lb) return 0;
        {   int ret = slice_from_s(4, s_95);
            if (ret < 0) return ret;
        }
    }
lab1:
    return 1;
}

int Xapian::InternalStemGreek::r_step5h() {
    ket = c;
    if (!(find_among_b(s_pool, a_58, 3, 0, 0))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    I_test1 = 0;
    {   int m1 = l - c; (void)m1;
        ket = c;
        bra = c;
        if (!(find_among_b(s_pool, a_56, 12, 0, 0))) goto lab1;
        {   int ret = slice_from_s(6, s_96);
            if (ret < 0) return ret;
        }
        goto lab0;
    lab1:
        c = l - m1;
        ket = c;
        bra = c;
        if (!(find_among_b(s_pool, a_57, 25, 0, 0))) return 0;
        if (c > lb) return 0;
        {   int ret = slice_from_s(6, s_97);
            if (ret < 0) return ret;
        }
    }
lab0:
    return 1;
}

int Xapian::InternalStemGreek::r_step5i() {
    ket = c;
    if (!(find_among_b(s_pool, a_62, 3, 0, 0))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    I_test1 = 0;
    {   int m1 = l - c; (void)m1;
        ket = c;
        bra = c;
        if (!(eq_s_b(8, s_98))) goto lab1;
        {   int ret = slice_from_s(4, s_99);
            if (ret < 0) return ret;
        }
        goto lab0;
    lab1:
        c = l - m1;
        {   int m2 = l - c; (void)m2;
            ket = c;
            if (c - 5 <= lb || (p[c - 1] != 134 && p[c - 1] != 135)) goto lab2;
            if (!(find_among_b(s_pool, a_59, 2, 0, 0))) goto lab2;
            bra = c;
            return 0;
        lab2:
            c = l - m2;
        }
        {   int m3 = l - c; (void)m3;
            ket = c;
            bra = c;
            if (!(find_among_b(s_pool, a_60, 10, 0, 0))) goto lab4;
            {   int ret = slice_from_s(4, s_100);
                if (ret < 0) return ret;
            }
            goto lab3;
        lab4:
            c = l - m3;
            ket = c;
            bra = c;
            if (!(find_among_b(s_pool, a_61, 44, 0, 0))) return 0;
            if (c > lb) return 0;
            {   int ret = slice_from_s(4, s_101);
                if (ret < 0) return ret;
            }
        }
    lab3:
        ;
    }
lab0:
    return 1;
}

int Xapian::InternalStemGreek::r_step5j() {
    ket = c;
    if (!(find_among_b(s_pool, a_63, 3, 0, 0))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    I_test1 = 0;
    ket = c;
    bra = c;
    if (c - 1 <= lb || p[c - 1] != 189) return 0;
    if (!(find_among_b(s_pool, a_64, 6, 0, 0))) return 0;
    if (c > lb) return 0;
    {   int ret = slice_from_s(4, s_102);
        if (ret < 0) return ret;
    }
    return 1;
}

int Xapian::InternalStemGreek::r_step5k() {
    ket = c;
    if (c - 7 <= lb || p[c - 1] != 181) return 0;
    if (!(find_among_b(s_pool, a_65, 1, 0, 0))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    I_test1 = 0;
    ket = c;
    bra = c;
    if (!(find_among_b(s_pool, a_66, 10, 0, 0))) return 0;
    if (c > lb) return 0;
    {   int ret = slice_from_s(6, s_103);
        if (ret < 0) return ret;
    }
    return 1;
}

int Xapian::InternalStemGreek::r_step5l() {
    ket = c;
    if (c - 7 <= lb || p[c - 1] != 181) return 0;
    if (!(find_among_b(s_pool, a_67, 3, 0, 0))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    I_test1 = 0;
    ket = c;
    bra = c;
    if (!(find_among_b(s_pool, a_68, 6, 0, 0))) return 0;
    if (c > lb) return 0;
    {   int ret = slice_from_s(6, s_104);
        if (ret < 0) return ret;
    }
    return 1;
}

int Xapian::InternalStemGreek::r_step5m() {
    ket = c;
    if (c - 7 <= lb || p[c - 1] != 181) return 0;
    if (!(find_among_b(s_pool, a_69, 3, 0, 0))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    I_test1 = 0;
    ket = c;
    bra = c;
    if (!(find_among_b(s_pool, a_70, 7, 0, 0))) return 0;
    if (c > lb) return 0;
    {   int ret = slice_from_s(6, s_105);
        if (ret < 0) return ret;
    }
    return 1;
}

int Xapian::InternalStemGreek::r_step6() {
    {   int m1 = l - c; (void)m1;
        ket = c;
        if (!(find_among_b(s_pool, a_71, 3, 0, 0))) goto lab0;
        bra = c;
        {   int ret = slice_from_s(4, s_106);
            if (ret < 0) return ret;
        }
    lab0:
        c = l - m1;
    }
    if (!(I_test1)) return 0;
    ket = c;
    if (!(find_among_b(s_pool, a_72, 84, 0, 0))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    return 1;
}

int Xapian::InternalStemGreek::r_step7() {
    ket = c;
    if (c - 7 <= lb || (p[c - 1] != 129 && p[c - 1] != 132)) return 0;
    if (!(find_among_b(s_pool, a_73, 8, 0, 0))) return 0;
    bra = c;
    {   int ret = slice_del();
        if (ret < 0) return ret;
    }
    return 1;
}

int Xapian::InternalStemGreek::stem() {
    lb = c; c = l;

    {   int m1 = l - c; (void)m1;
        {   int ret = r_tolower();
            if (ret < 0) return ret;
        }
        c = l - m1;
    }
    {   int ret = r_has_min_length();
        if (ret <= 0) return ret;
    }
    I_test1 = 1;
    {   int m2 = l - c; (void)m2;
        {   int ret = r_step1();
            if (ret < 0) return ret;
        }
        c = l - m2;
    }
    {   int m3 = l - c; (void)m3;
        {   int ret = r_steps1();
            if (ret < 0) return ret;
        }
        c = l - m3;
    }
    {   int m4 = l - c; (void)m4;
        {   int ret = r_steps2();
            if (ret < 0) return ret;
        }
        c = l - m4;
    }
    {   int m5 = l - c; (void)m5;
        {   int ret = r_steps3();
            if (ret < 0) return ret;
        }
        c = l - m5;
    }
    {   int m6 = l - c; (void)m6;
        {   int ret = r_steps4();
            if (ret < 0) return ret;
        }
        c = l - m6;
    }
    {   int m7 = l - c; (void)m7;
        {   int ret = r_steps5();
            if (ret < 0) return ret;
        }
        c = l - m7;
    }
    {   int m8 = l - c; (void)m8;
        {   int ret = r_steps6();
            if (ret < 0) return ret;
        }
        c = l - m8;
    }
    {   int m9 = l - c; (void)m9;
        {   int ret = r_steps7();
            if (ret < 0) return ret;
        }
        c = l - m9;
    }
    {   int m10 = l - c; (void)m10;
        {   int ret = r_steps8();
            if (ret < 0) return ret;
        }
        c = l - m10;
    }
    {   int m11 = l - c; (void)m11;
        {   int ret = r_steps9();
            if (ret < 0) return ret;
        }
        c = l - m11;
    }
    {   int m12 = l - c; (void)m12;
        {   int ret = r_steps10();
            if (ret < 0) return ret;
        }
        c = l - m12;
    }
    {   int m13 = l - c; (void)m13;
        {   int ret = r_step2a();
            if (ret < 0) return ret;
        }
        c = l - m13;
    }
    {   int m14 = l - c; (void)m14;
        {   int ret = r_step2b();
            if (ret < 0) return ret;
        }
        c = l - m14;
    }
    {   int m15 = l - c; (void)m15;
        {   int ret = r_step2c();
            if (ret < 0) return ret;
        }
        c = l - m15;
    }
    {   int m16 = l - c; (void)m16;
        {   int ret = r_step2d();
            if (ret < 0) return ret;
        }
        c = l - m16;
    }
    {   int m17 = l - c; (void)m17;
        {   int ret = r_step3();
            if (ret < 0) return ret;
        }
        c = l - m17;
    }
    {   int m18 = l - c; (void)m18;
        {   int ret = r_step4();
            if (ret < 0) return ret;
        }
        c = l - m18;
    }
    {   int m19 = l - c; (void)m19;
        {   int ret = r_step5a();
            if (ret < 0) return ret;
        }
        c = l - m19;
    }
    {   int m20 = l - c; (void)m20;
        {   int ret = r_step5b();
            if (ret < 0) return ret;
        }
        c = l - m20;
    }
    {   int m21 = l - c; (void)m21;
        {   int ret = r_step5c();
            if (ret < 0) return ret;
        }
        c = l - m21;
    }
    {   int m22 = l - c; (void)m22;
        {   int ret = r_step5d();
            if (ret < 0) return ret;
        }
        c = l - m22;
    }
    {   int m23 = l - c; (void)m23;
        {   int ret = r_step5e();
            if (ret < 0) return ret;
        }
        c = l - m23;
    }
    {   int m24 = l - c; (void)m24;
        {   int ret = r_step5f();
            if (ret < 0) return ret;
        }
        c = l - m24;
    }
    {   int m25 = l - c; (void)m25;
        {   int ret = r_step5g();
            if (ret < 0) return ret;
        }
        c = l - m25;
    }
    {   int m26 = l - c; (void)m26;
        {   int ret = r_step5h();
            if (ret < 0) return ret;
        }
        c = l - m26;
    }
    {   int m27 = l - c; (void)m27;
        {   int ret = r_step5j();
            if (ret < 0) return ret;
        }
        c = l - m27;
    }
    {   int m28 = l - c; (void)m28;
        {   int ret = r_step5i();
            if (ret < 0) return ret;
        }
        c = l - m28;
    }
    {   int m29 = l - c; (void)m29;
        {   int ret = r_step5k();
            if (ret < 0) return ret;
        }
        c = l - m29;
    }
    {   int m30 = l - c; (void)m30;
        {   int ret = r_step5l();
            if (ret < 0) return ret;
        }
        c = l - m30;
    }
    {   int m31 = l - c; (void)m31;
        {   int ret = r_step5m();
            if (ret < 0) return ret;
        }
        c = l - m31;
    }
    {   int m32 = l - c; (void)m32;
        {   int ret = r_step6();
            if (ret < 0) return ret;
        }
        c = l - m32;
    }
    {   int m33 = l - c; (void)m33;
        {   int ret = r_step7();
            if (ret < 0) return ret;
        }
        c = l - m33;
    }
    c = lb;
    return 1;
}

Xapian::InternalStemGreek::InternalStemGreek()
    : I_test1(0)
{
}

Xapian::InternalStemGreek::~InternalStemGreek()
{
}

std::string
Xapian::InternalStemGreek::get_description() const
{
    return "greek";
}
